// Code generated by go-bindata.
// sources:
// templates/jenkins/multi-job.xml
// templates/jenkins/normal-job.xml
// templates/jenkins/pipeline.xml
// DO NOT EDIT!

package pipeline

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesJenkinsMultiJobXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x18\x69\x6f\xdb\x38\xf6\x73\xfd\x2b\x8c\xa0\x40\x80\x62\x23\x27\xd9\xdd\xb6\x0b\x38\x6e\x1b\x27\xed\x7a\x90\xc3\xe3\xa3\xf9\x58\xd0\xd2\xb3\xcd\x9a\x12\x05\x92\x4a\xe3\x09\xfa\xdf\xe7\xf1\x92\x28\x4b\x69\x92\x4e\x31\x98\xe4\x83\xc9\x77\xf1\xf1\xdd\x54\xff\xdd\x5d\xca\xba\xb7\x20\x24\xe5\xd9\xc9\xfe\x51\x74\xb8\xdf\x85\x2c\xe6\x09\xcd\x56\x27\xfb\xf3\xd9\xc7\x83\xb7\xfb\xef\x06\x9d\x7e\xcc\xd3\x48\xd1\x0d\x61\xd1\x57\xc8\x36\x34\x93\x51\xce\x8a\x95\xfe\x4d\x0b\xa6\xe8\x57\xbe\x88\x2e\xf5\xe2\x37\xbe\x18\x0b\xfe\x15\x62\xd5\xb5\x04\x27\x7b\x8e\xe1\xc0\x13\x1e\x58\xc4\xfb\xa3\xe8\xe8\xbf\x7b\x83\x4e\xb7\xdb\x27\xb1\xc2\xd3\x65\xcf\x6c\x12\x90\xb1\xa0\xb9\x86\x0c\xfa\xbd\x70\xa7\xb1\x1b\x80\xfc\x0c\x72\xc8\x12\xd4\x92\x82\x1c\x2c\x09\x93\xd0\xef\x35\xe0\x9a\x38\x17\x3c\x07\xa1\xdc\x16\x01\x12\xa2\x84\x92\x05\x0f\x6e\x41\x73\x60\x34\x83\x68\xec\x16\x63\xcb\xb3\x2d\xd5\x4f\x10\x8c\xf6\xd9\x1e\x78\x52\xaf\xff\x61\xf4\x36\x7a\xbd\x67\x25\xa3\x6c\x45\xe4\xe6\x8a\xa4\x30\xc8\x89\x20\x8c\x01\xeb\xc2\x1d\xc4\x85\xd6\xbc\xdf\x2b\x91\x9e\x5a\x2a\xb2\x02\x03\xb9\xbf\xef\x46\x53\xbf\xeb\x7e\xff\xde\xef\x55\x38\xab\x75\xef\x19\x6a\x3b\x16\xed\xae\x98\x0b\x72\xbb\x8d\xd6\x45\x22\x79\x56\xba\x6b\x45\xd5\xba\x58\x44\x9f\xcc\x8f\x73\x55\xe3\xce\x96\x48\x7b\xe8\x38\x3a\xac\xae\x98\x5b\xf2\xb9\x60\x46\x6b\x2b\x03\x77\x46\xeb\x00\xe9\xd4\xfe\x39\x25\x8c\xe7\x7a\x75\xd7\xf5\x65\x9c\x76\x63\x46\xa4\x3c\xd9\x6b\x8a\xd2\x72\xa6\xc3\xcb\xbd\x50\xfd\xf7\xc7\xd1\x7f\x8c\xea\x2f\x5e\xa0\x31\xb2\x25\x5d\x7d\xb6\x31\x3e\x38\xd6\x8a\x85\x00\x4d\x52\x48\x10\x13\x48\xb9\x82\xa1\xc1\x49\x0d\x7d\xd1\x6f\x39\x6b\xbe\x43\x69\x08\x51\x40\x65\x93\xf9\xe4\xc2\x18\x44\x83\x8c\x94\xde\x13\xc5\x20\x4b\x9b\x1a\xfd\x85\x20\x59\xbc\x86\x87\x75\x3a\x35\x04\xd3\x1c\x62\xa7\x4d\xa6\x83\xe7\x55\x4f\x2b\x54\xe1\xe8\x92\x82\x30\x9a\x19\x74\xe7\x01\xcd\xea\xc2\xfa\xbd\xf0\xf4\x7e\x42\x25\x59\x30\x98\x16\x8b\x94\x27\x05\xab\xf2\xaf\x89\xb0\x41\x20\x30\x05\xd0\xcc\xb7\x21\x46\x89\x02\x39\xda\x30\x96\x27\xe1\x9f\x20\x03\x41\x54\x85\xb2\xe6\x28\x10\xa6\x0b\x45\x79\xe8\xa3\x84\x56\x20\x29\xd4\x9a\x8b\x6b\x31\xe4\x69\x4a\x95\x02\xe1\x05\x34\x11\x2e\x7d\x18\x90\xcc\xf8\x73\xa8\x57\x37\x5c\x6c\x64\x4e\x62\x9b\x9e\x16\x69\x09\xbf\x61\xfa\x5d\x17\xaa\x24\xf0\x82\x1b\xf0\x8e\x4b\xa0\x22\x83\x53\x6f\x50\x47\x5b\x07\x7a\xb3\xe9\x20\x18\x73\xc6\x3c\x55\x00\xb1\x24\x74\x95\x71\x01\x57\x5c\xd1\xe5\xd6\xea\xef\x49\x5b\x30\x96\x05\xc3\x6b\xba\xc6\xda\xc4\xbf\x0d\x19\xcf\x4a\x65\x77\xc1\x96\x78\x51\x50\x96\x0c\xd7\x9c\x63\x4c\xfe\x20\xf7\xb0\xc0\xb1\xe8\x0c\x96\x04\xab\xfb\x69\xc0\xb2\xd7\x73\x72\x90\x68\xc6\x39\x1b\x38\x9a\x7e\xcf\x03\x5c\x49\x2e\x3d\xb7\x5c\xf9\x63\x18\x95\xaa\xe4\x17\xc0\xd0\x99\xb7\x30\x23\x62\x05\xea\x8c\x8a\x0a\xb1\x04\x81\xd5\x1e\x3c\x00\xee\x62\x56\x24\x90\x4c\x60\x55\xb6\x93\x00\xac\x53\x4e\x06\x5a\xd9\x50\xd1\x75\xb6\x01\x3c\x4f\x09\x65\x1e\x2a\x37\x34\x9f\x91\x95\x0b\x5b\xbf\x73\xb8\x38\x0d\x05\xfc\xf2\xc8\x7d\xd4\x3a\x70\xa7\x20\x93\xee\xba\x98\xad\xa8\xd0\xa0\xa3\x2b\x66\x4c\xb2\x09\x27\xa9\xd3\xda\xef\x4c\x83\xb5\xa9\x9a\xec\xa4\x6e\x62\x90\x0b\xc6\xe3\x8d\xf1\xe3\xcd\x1a\xb2\x33\xfe\x2d\x93\x4a\x00\x49\x0d\x08\x67\x02\xcf\xf4\x28\x5d\x53\xd8\x3c\x7f\x8a\xa8\x06\x95\x16\xa4\x04\x5d\xad\xd0\x7b\xf6\xd2\x98\x97\x74\xd9\x8d\x46\x72\x94\x51\x45\x09\xc3\x99\x03\x13\xd3\xda\xc3\x45\xa8\x67\x88\xb0\x2f\xcc\xec\xba\x6a\xbd\xba\xb4\xbd\xea\xba\x7f\x34\x99\x29\x75\x0e\x69\x73\x67\xcc\xa5\xb2\x99\xf3\x7f\xce\x37\xb2\x9e\x58\xbb\x48\xd7\xed\x1e\x3b\x19\xb5\xc6\xe9\xc4\x2a\x8a\x03\x41\x70\x23\xdd\xa0\xb0\x16\x62\x2c\xdb\x0c\xf2\xc7\xed\x82\x3b\x3e\x2b\x4b\x4b\x3c\x67\x2c\x3b\xb5\x9c\x55\x33\x5f\x13\x69\xa7\x0c\xb3\x3a\xc4\x42\x54\x42\x6a\x34\xc8\x2b\x3d\xc4\x5c\x03\x4b\xd5\x0a\x70\x68\x29\x16\x1a\xe5\x4d\xff\x54\x7d\xc6\x5e\xa6\x6f\x7c\xdd\xf2\xaf\x8f\xf8\x72\x26\x32\xb5\xd6\x03\x42\x22\x6d\x93\x31\xce\x58\xa9\xef\x24\x01\x20\xa4\x83\xbb\x1c\x0b\x51\x82\x7e\xf0\x06\x0d\x20\x21\xa1\x4b\x00\xd4\x69\x27\x25\x34\x24\x24\xc4\xc9\x4e\x62\x48\x4e\x74\xaf\x1a\x13\xb5\xc6\xf9\xb4\x01\x0a\xe9\x53\x72\x37\x01\xf4\x34\x96\x75\x34\x6f\xb0\xab\xa9\x99\xe9\xa3\x34\x66\x3b\x55\xba\x22\xac\xb6\xa5\xbe\x2d\xa8\x26\x2b\xda\x31\xa1\x66\x40\xae\xb1\x55\xe0\x90\x05\xa7\x48\xa1\x3e\x30\x9d\x33\xce\x7a\x21\xa4\x66\xe6\x92\xdf\x44\x62\x8b\xac\x0d\x65\xcc\x78\xf3\x3a\x43\xe6\x09\x48\x74\x71\x75\xea\xc7\x0f\xa3\x8b\xf9\xe4\x1c\x47\xf3\x1f\x92\x85\x02\x4d\x70\x5f\x67\x6c\x3b\x5a\xa2\x8f\x86\x6b\x1d\x67\x65\xf2\xb5\x23\x77\x34\xb6\x33\x53\x37\xf8\x6b\x9b\x97\x70\x48\x9b\xc0\x2d\xd5\x65\xd3\x64\x85\x09\x1e\xc0\xf6\x2f\x5b\x47\xc8\x9a\x38\x8c\xf0\x05\xce\xdb\xbf\x17\x50\x40\x62\xcb\x80\xac\x12\xb6\x05\x57\x67\x6f\x9b\xb8\x1e\x56\xa7\x76\xbd\x5e\xe3\x7e\x76\xc4\xfe\xd9\x7c\x0b\x0b\x92\x95\xd6\x48\x77\x6d\x52\x45\xb3\xc2\xf4\xa4\xca\x67\xd3\xf9\x70\x78\x3e\x9d\x7e\x9c\x5f\x18\xa5\x5a\x28\x3a\x4f\x56\xaf\xa5\x3c\x39\x5f\xfb\xea\x98\x17\x0b\x6c\x79\xeb\xdd\xf2\x7f\x85\xad\xef\x92\xe0\xc9\x2c\xac\x42\x38\xeb\x45\xe6\xdd\x81\x55\x53\x14\xa9\xdc\x4a\x05\xa9\xac\xbf\x3f\x22\x23\xbe\x7c\x42\xb9\x52\x1c\x59\xdb\x3b\xa8\x2b\xdd\x65\x3c\x18\x96\xc6\x13\xf0\x08\x23\xe4\xdf\x7b\xa1\xb5\x76\x1c\xf4\x2b\x83\xef\x2f\x84\xde\x4f\x86\x5d\x23\xe4\x70\xc0\xf1\x8d\xde\xbd\xda\x74\x75\x96\xa6\x5e\x37\xfc\xa1\xa7\x9c\x56\x6a\x17\x1c\xbf\xd6\x53\xcd\x26\x5b\x8b\x94\x5a\x8c\xec\x18\x23\xf7\x17\xa7\x7f\x40\x52\x3b\x63\x37\x0a\x6a\x94\x07\x8e\x14\x5d\x75\xfc\xbf\x67\x04\xc1\xa3\xc7\xb5\x34\xc6\xbf\xa3\xb4\xfd\xc3\x8a\x5b\xf5\xbd\xa1\x8a\xaf\x32\xb2\x4a\x4c\x7b\xc7\x72\x05\xea\xa1\xc6\xe5\x8c\x7e\x43\xd5\xfa\x8a\x07\x0a\xb9\x9b\x3e\x84\x7e\x38\x9d\x9e\xe9\xd2\x9d\xdb\x3e\x5f\x5c\xdb\x44\x59\x2f\x93\xb6\x97\xde\x08\x92\xe7\xd5\xb4\xb8\x73\x0c\xc1\x87\x43\xcc\x19\x17\xd1\x07\x5c\x0d\xf5\xea\x34\xe0\x2a\x03\xa6\xa4\x7b\x7f\x58\x0b\x9b\xbe\x01\x5e\x92\xdc\x8c\x68\xf8\x10\x11\xa9\xbe\x59\x00\x6b\xbf\xde\x23\xe7\x3e\x3e\xe4\x3f\xe1\x7b\x98\xfb\xb8\x83\x76\x47\xfb\x2d\x0a\xc5\xc5\xd3\x3e\xe8\xbd\xa9\x6e\xe7\x3e\x8a\xce\x20\xcd\xf1\x05\x0a\x83\x97\xf7\xa7\xf3\xd1\xc5\xd9\x97\xab\xf9\xe5\xe9\xf9\xe4\xfb\xc1\xcb\xfb\x4f\xa3\xd9\x97\xc9\xf9\xe7\xd1\x74\x74\x7d\xf5\x2f\x06\xd9\x4a\xad\x4f\xde\x60\x74\xee\x72\x7a\x89\x45\x9e\xe0\xf6\x8c\x4a\x04\x6f\x8d\x81\xec\x08\xd6\x84\x3f\xfd\xc3\x5f\xf3\xa2\x6d\x95\x70\xd7\xf5\x8a\x62\x21\x56\x24\x45\x73\x47\xb3\x6a\xdd\xea\xfe\x80\x16\x1b\xde\xeb\xe8\xd8\x3e\x3e\x5d\x97\xae\x42\xec\x59\xed\xde\x35\x84\x41\xe7\xcf\x00\x00\x00\xff\xff\x2f\xcd\x3c\xbe\x81\x16\x00\x00")

func templatesJenkinsMultiJobXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsMultiJobXml,
		"templates/jenkins/multi-job.xml",
	)
}

func templatesJenkinsMultiJobXml() (*asset, error) {
	bytes, err := templatesJenkinsMultiJobXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/multi-job.xml", size: 5761, mode: os.FileMode(420), modTime: time.Unix(1444743006, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsNormalJobXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x3b\xfd\x6f\xdb\xb6\xb6\xbf\xe7\xaf\x30\xf2\x0a\xf4\xbd\x61\x96\x9b\xb4\x6f\xdd\x00\xc7\x4b\x62\x3b\x6d\x36\xc7\xf1\xb3\x9d\xee\x5d\x5c\x5c\x04\xb4\x44\xdb\x5a\x28\x51\x10\xa9\x24\xbe\xbd\xfd\xdf\xef\xe1\xa7\x48\x49\xb6\x93\x75\x18\x50\xdc\x6c\xc0\x66\x9d\x2f\x92\x87\xe7\x93\x64\xba\x3f\x3f\x26\xa4\x75\x8f\x73\x16\xd3\xf4\xe4\xf5\x51\xf0\xe6\x75\x0b\xa7\x21\x8d\xe2\x74\x75\xf2\xfa\x66\x7e\xd1\xfe\xf1\xf5\xcf\xbd\x83\x6e\x96\xd3\xdf\x71\xc8\x7b\x07\xad\x56\x17\x85\x1c\x88\x59\x47\x7e\x44\x98\x85\x79\x9c\x09\x88\x02\x10\xba\x9a\x52\x8e\x38\xcd\x5b\x21\x41\x8c\x9d\x1c\xae\x8b\x88\xd1\x34\xe0\x88\xdd\xb1\x60\x64\xd1\x87\x82\x5c\x48\x40\x1b\x36\xa7\xbf\x62\x9c\xf5\xda\x47\xdd\x8e\xf3\xa9\xf0\x69\x91\x38\xe8\xf2\x4b\x61\x51\xce\xe3\x25\xcc\x68\xe0\x4b\x69\x00\xfb\xf4\x63\x2b\xc7\xa1\x1e\xbb\xc2\xbb\x9d\x72\x29\xf2\xfb\x0e\x10\x03\x9c\xe1\x34\x02\x0d\xc5\x98\xf5\x96\x88\x30\xdc\xed\xd4\xe0\x82\x18\x14\x96\x61\x10\xab\x3e\x01\xc0\x70\x10\xc5\x68\x41\x49\xf0\x3b\x4e\xef\xe2\x94\x05\x59\x9c\x61\x12\xa7\x38\x98\xe8\x1f\x13\xc5\xb3\x69\x65\xa4\x58\xc5\xe9\xc9\x61\x04\x60\xd8\x9b\x4d\xdb\x90\xb6\x15\xe6\xf4\x4d\xf0\x63\xf0\x5e\x2b\x10\x64\x0b\xd5\x8e\x51\x82\x7b\x9f\x3f\xb7\x82\xb9\xfe\x68\x7d\xf9\xd2\xed\x58\x8c\x21\x65\x1c\xad\xb0\xa5\x9d\x99\x2f\x49\x5c\xe2\xd4\x94\x3b\xcf\x98\xb3\x66\x09\x69\x12\x84\x34\x47\xf7\x9b\x40\x6f\xbb\x9a\x31\x0b\x56\x31\x5f\x17\x8b\xe0\x83\xfc\xdf\x44\x99\x53\x6d\xc1\x8a\xe8\xf4\x28\x38\x3a\x0e\xde\x94\xeb\xd3\xd6\x77\x93\x13\x39\x6b\x25\x03\xbe\xe4\xac\x1d\xa4\x9e\xf6\x1f\x9b\x84\xda\x73\x7f\xdf\x60\xb4\x78\xd9\x0a\x2e\xd9\x65\x1a\xf3\x18\x91\x5f\xe8\x02\xc6\x14\x84\x2c\x4c\x2a\xf6\xed\x8c\x21\x06\x98\xf5\xaf\x0e\xdd\x75\x9d\x1e\x07\xc7\xc1\x4f\x87\x56\x4f\xe9\x32\x5e\x7d\x52\x7e\xd7\x3b\x16\x73\x76\x01\x8a\xa8\x60\x38\x9f\xe2\x84\x72\xdc\x97\x58\x66\x15\xd2\x30\xe4\x4d\x85\xd8\xd0\x0a\x39\xa5\xde\x6e\xa6\x23\xa9\xb4\xc2\x68\x4b\xac\xf9\xc9\xd2\x80\xaf\x79\x4a\xdd\x45\x8e\xd2\x70\x8d\x77\xce\xf0\x5c\xd2\xcc\x32\x1c\x3a\x73\x4b\x85\xb9\x7d\xd7\x11\xd3\x2b\xf1\xf1\x32\xc6\xb9\x9c\x67\xea\xda\x6e\xd3\x44\xab\x42\xbb\x1d\x7f\x2a\xdd\x28\x66\x68\x41\xf0\xac\x58\x24\x34\x2a\x48\xe9\xb6\x75\x84\x62\xc8\x71\x58\xc0\x2e\xdc\xbb\x18\x9e\x17\xc0\xd1\x84\xd1\x83\xd0\x0f\x38\xc5\x39\xe2\x25\x4a\xe9\xa7\x00\x98\x08\x96\x76\xd0\xbd\x84\x3a\x4c\x15\x7c\x4d\xf3\xeb\xbc\x4f\x93\x24\xe6\x1c\xe7\x46\x40\x1d\xa1\x0d\x8a\x60\x94\xca\x5d\xee\x8b\x5f\xbf\xd1\xfc\x8e\x65\x28\x54\x8e\xad\x90\x8a\xf0\x01\x1c\xf7\xba\xe0\x96\xc0\x08\xae\xc1\x0f\xb4\xeb\x15\x29\x3e\x37\x2a\xd5\xb4\x3e\xd0\xa8\x4d\x58\xc5\x84\x12\x62\xa8\x1c\x88\x22\x89\x57\x29\xcd\xf1\x98\x42\xb0\xdd\xa8\xf9\x1b\xd2\x06\x8c\x75\x81\xd9\x1a\x11\x42\x1f\xfa\x84\xa6\x76\xb2\x55\xb0\x36\xc2\x22\x26\x51\x7f\x4d\x29\x18\xe9\x0e\xe7\x2c\x78\x4c\x82\x01\x5e\xa2\x82\xf0\x73\x87\xe5\xb0\xa3\xe5\x00\xd1\x9c\x52\xd2\xd3\x34\xdd\x8e\x01\xe8\x48\x6e\x77\x6e\xb9\x32\xc3\x90\x98\x71\xcb\x9f\x63\x02\x9b\x79\x8f\xe7\x28\x5f\x61\x3e\x88\xf3\x12\xb1\xc4\x39\x24\x09\x6c\x00\xf8\x31\x24\x45\x84\xa3\x29\x5e\xd9\x94\xea\x80\x85\x17\x32\x67\x56\xca\x54\x44\x84\xae\x01\x87\x09\x8a\x89\x81\xb2\xbb\x38\x9b\xa3\x95\x36\x5b\xf3\xa5\x37\x21\xf5\x86\xec\xe9\x10\x27\xf6\x1d\x72\x3e\x4c\x16\x2c\x46\x98\x51\x15\x00\xe9\x4d\xda\x52\x95\x5f\x8f\x18\x26\xee\xb4\xfe\x74\x7f\xd8\xab\x73\xfc\xc8\x71\xca\xca\xba\xa4\x03\x33\x92\x3f\x78\x1e\xaf\x56\xa0\x46\x45\xa7\x57\x7b\x93\x31\x9e\x63\x94\x40\x3c\x67\x2a\xa0\x03\xa5\xc9\x71\x86\x23\x98\x62\x51\x18\x61\x69\x23\x73\x05\x2c\xf3\x28\x44\x9c\x8e\xfd\x2a\xb4\x3c\x9d\x52\xa4\x56\xab\x83\x80\xd5\x56\xa9\x6c\xfe\x5e\xe7\x98\xad\x29\x89\xaa\x81\x71\x76\xd3\xef\x0f\x67\x33\x3f\x0e\x02\x92\xe6\x50\xa0\x21\xd2\x7b\xd3\xed\x98\x9f\x25\x32\xa4\x04\x2a\x96\xf3\xd1\xcd\x50\xa4\x15\x42\x73\x0f\x97\x64\x04\x73\xb5\x26\x6d\x1f\x3e\xcc\x06\xdb\xca\xa4\xba\x9d\xa7\xeb\xc7\x9a\x8b\xab\x73\x4d\x81\xa3\x2b\x94\x16\xe0\xbb\x1b\x6d\x57\x60\x07\x76\x0b\x4c\xa9\x68\x46\x80\x24\xda\xa4\xf8\xde\x77\x2d\xfd\x2f\xec\xb3\x93\x4f\x74\x84\x99\x50\xc6\x55\x14\xf9\x48\xe9\x1d\xf3\x83\x4c\x15\x79\xe0\xa5\x96\xad\x23\xbb\x4b\x02\xdd\x38\x46\xa5\xc2\xce\x6f\x39\xca\x32\x6b\x66\xd5\xf4\x87\xc0\x34\xe5\x56\x04\x67\xf0\xab\x2f\x7e\x9d\x3b\x5c\xb6\x4e\xb0\x74\x50\xe1\xbd\x73\x2b\x20\x09\xbc\x42\x99\xac\xce\xc0\xd4\xf3\x44\xef\xad\x81\x1d\x34\x66\xc8\x3d\xe3\x3e\xbd\x34\xd5\x85\x09\xf8\x26\x2c\x7d\x51\x88\xea\xfe\xb9\x45\xaa\x6e\x32\xe6\x18\xac\x0d\xfc\xbd\xf7\xea\xf3\xf9\xcd\xe5\x68\x70\x3b\xbe\xb9\x3a\x1f\x4e\xbf\xb4\x5f\x7d\xfe\x70\x39\xbf\x9d\x0e\x3f\x5d\xce\x2e\xaf\xc7\xdf\x13\x9c\xae\xf8\xfa\xe4\x3d\xf8\x4d\x95\xb3\xf4\xba\x08\x3e\x07\x31\x03\xf0\x46\x6a\x41\x19\x74\x1d\xfe\xf4\x7a\xb6\xbe\xd0\xe6\x1d\xe5\x71\x82\xa1\x5e\x4e\x40\x8b\xc1\xbc\xfc\xdd\xb8\xab\x0e\x2d\x94\xb6\x3f\x04\xc7\x87\x3a\x46\xd5\x2c\xc7\xf3\x87\x6f\xaa\xc6\x94\x01\xaa\x16\xa7\x20\xe1\x49\xff\x14\xc5\xc0\x92\xf9\x95\xdf\x4b\x55\xfa\x52\x95\xbe\x54\xa5\x2f\x55\xa9\xda\x84\xb4\x71\x48\xb7\xac\x2c\x4b\xba\x6f\x3b\xe1\x6e\x09\xfb\xa6\xb8\xd0\xd5\xd2\x0c\x8c\x58\xec\xa6\x4e\x05\x7e\x15\x5b\xab\x93\x44\x06\xca\x1b\x2b\x25\x79\xca\x53\xca\x72\xeb\xa5\x7a\xd1\x53\x15\xe3\x17\x3a\x4d\xb3\x24\xe8\x1e\x8f\xd0\x02\x13\x3d\x4f\x30\x3b\xf0\x1a\x1c\x8d\x69\xa4\x4f\x98\x5c\x0a\x08\x14\x2e\xbe\x22\xb3\x1b\xa2\x74\x4a\x51\x62\xdc\xc9\x7c\x1e\x94\xf1\x32\xaa\x84\xc9\x48\xd9\x03\xa1\xe1\x9d\x52\xf3\x1a\xa7\x03\xfa\x90\xaa\x3a\x5b\x82\xa0\x87\x31\x4c\x7b\xe9\xea\xc2\x4c\x0d\xbf\x5b\x54\x8d\xea\x40\xa5\x5f\x08\xcc\xe0\x58\xca\x9d\xed\xaa\x2a\xe0\x83\x1d\x4d\xc9\x33\x5a\x12\xb7\x21\xf9\xaa\x76\xa4\xde\x8c\xec\x68\x45\x76\x34\x22\xdb\xdb\x90\xa7\x36\x21\x95\x16\xe4\xe9\x0d\x88\x67\x54\xd2\xd9\xdc\xfe\x0f\x12\xc4\x0a\xb7\x82\x33\x73\x42\x8c\xb3\x6a\xfb\x61\x9c\x39\xa4\xd9\xc6\x1c\x0d\x07\x7d\xf8\x30\x3c\x36\x7c\xb8\x14\x50\xda\xbd\x3d\x0e\x8e\x6a\xa7\x96\x52\xf9\x5a\xc7\x22\x72\xc8\x32\xd6\x3d\xb9\xb4\x0c\xcb\x98\x88\xd4\x29\xe8\xed\x48\x82\x4e\xc3\x6d\xb7\x28\x03\x78\xd9\x7c\xea\xb8\xcc\x4a\x08\xc3\x04\xe4\xd6\x4e\xe0\x1b\xd7\x65\xdb\x32\xa9\xc5\x99\xe6\x3c\x74\x8a\x21\x30\x5c\xb2\x40\xe1\xdd\x9c\x8e\x10\xe3\xb3\x22\x0c\x31\x63\xcb\x82\xe8\x9d\xdb\x8a\x76\x4a\x3d\x6d\x69\x17\x72\x21\x33\x2e\x2a\x8d\xd5\xa6\x07\x89\xe4\x03\xa1\x0b\x44\x66\x98\x73\x70\x9b\xd2\x24\x2b\x84\xb6\xd4\x32\x0b\xb3\x90\x88\x42\x7a\xbe\x00\x5e\x9c\x67\x79\x9c\x72\xa3\x37\xa7\xb4\xd9\x46\xd0\x1c\xc0\xb7\xee\x79\x53\x67\xdb\xf5\xae\x36\x66\x6b\x4c\x5c\xf3\x4f\x12\x94\x82\xe5\xfe\x57\xcb\x34\x19\xad\x10\xd6\x26\xb6\x25\x41\xab\x38\x3c\xc0\x8f\x19\xcd\x79\x6b\x72\x39\x19\x8e\x2e\xc7\x43\xdd\x08\x9d\xbc\xfa\x6f\x1c\xae\x69\xeb\xf0\xd5\x67\x8b\xf9\x34\x9c\x8a\x9e\xe8\xcb\x61\xeb\x5f\xad\xb0\xe0\xad\xf6\xf2\xa8\xd5\x8e\x5e\xb7\x5f\xff\x8f\x11\x22\x5a\xa7\xd9\xc7\xb3\xa7\x31\x1f\x6b\xe6\xe6\xd3\x6d\xa7\x07\x81\x3c\xde\x02\x0f\xc4\xc0\xd4\x5e\xa3\x3c\x6a\xa9\x1e\x0d\x06\x2a\x4f\x84\x0e\x64\x75\xa7\x16\x6b\xf4\xd2\x52\x87\xf0\x6a\xfd\x7e\xaa\xf1\x35\xa5\x73\xa1\xe9\xa4\xb3\x62\x01\x25\xcb\xba\x7a\x5a\xf3\x91\x27\x64\x8a\xc5\x3a\xcb\xc3\x9a\x35\xc0\x2c\xb9\xa4\x98\x98\x2f\xeb\x9d\x1e\x0d\xb8\xe7\xff\x96\xbe\x99\x4b\x71\xaa\x14\x62\xa5\xa5\x96\xe1\xa1\x61\xcc\x7d\xe3\x2a\x69\xa5\x30\x3b\x8c\xbd\x6e\x99\xda\x4f\xe9\xd7\x0e\xb6\xce\x04\x05\x9a\xc3\xa3\x8e\xe1\x0c\x8b\xc0\xd5\x39\xc0\x69\x30\x73\x78\xe4\xb7\xc3\xa5\xf0\x2e\x1f\x22\x0f\x68\xc3\x46\x71\xaa\x9d\xd7\x4b\x54\xcd\x48\x97\x5d\x5c\x7c\x9d\x11\x13\x07\xcc\x97\x3f\x00\x14\xc3\x57\x31\x24\xfd\xd4\xd4\x7d\x1e\xa8\xd4\x6b\xe7\x19\x8a\xf5\x9d\x50\x30\x37\x6c\xe7\x4e\x89\x3b\x8e\xa9\xce\xd2\x28\xa7\x71\x04\xeb\xe6\xc1\x04\x89\x5e\x26\xb5\x46\x47\xf3\x95\x39\x39\x08\x63\xa7\xe6\x93\x1c\xb7\xb7\x44\xf0\x08\xc6\xba\x29\x6a\x9a\xb6\x20\x11\x5d\x7a\x69\x89\x6b\x8c\x08\x5f\x6f\x9c\xb3\xc4\xf4\x63\x15\x64\xf3\xe0\x28\x16\x4d\x08\x28\xd0\xc9\x8d\x0a\x66\x93\x8e\x1c\x50\xda\xd4\xdf\xdd\x41\xff\x01\xe9\xa6\x44\xd9\xf0\xa9\x7a\x89\xa1\xbe\xf1\x2d\x47\x14\xb5\x57\x91\x5e\xa7\x17\x50\xbf\x97\x55\x57\x05\x6a\x67\xcc\xf0\x24\xc7\xf7\x31\x2d\x98\x34\x92\x33\x36\x35\x2d\x85\xd3\x1a\x6d\x25\x71\xc4\xcc\xb8\xa8\xea\x76\x08\xd9\x42\xe0\x88\x18\x60\xc2\xd1\x27\x44\x8a\xb2\x31\xac\x40\x6b\x5a\x65\xce\x36\x21\xb2\x61\x31\x6b\x87\xd0\xf8\x41\xc4\x78\xef\x6c\x54\x01\xd5\xa2\x18\x7c\x4e\x39\x22\x60\xe8\x9d\x66\xcc\xc7\x78\xb5\xde\x82\x1a\xd3\x3c\x41\xdb\xf8\x46\xf4\xa1\xc4\x2c\xa5\x82\xeb\x23\x39\x70\x31\x8e\x2a\x15\x1c\x83\xbd\xf0\xf1\xaa\x7a\xa8\xf0\x34\xc8\x52\x13\xdb\x25\x4d\x51\x54\xe5\x69\xbe\x06\x89\xde\x6a\x4a\x5b\x2d\x95\x0f\x9f\x05\x89\x06\x50\xf1\x85\xfc\xca\x3f\x02\x69\x42\x95\xf9\x3e\x15\xa7\xb7\x59\xc1\xf1\x18\x3f\xe8\x90\x52\x01\x7a\xb5\xc1\x14\x33\x4a\xee\xf1\x54\x37\xbf\xe0\xd1\x6b\xbf\x36\x68\x24\xb0\xde\xa4\x02\x40\x4d\x33\x65\x60\x00\xb7\xd2\x34\x3a\xea\x3c\x3b\x46\xec\x88\x45\x50\xb7\x44\x8b\x62\xc5\xcc\x78\x5b\xea\xd4\xa5\x21\x13\xf4\xe7\xf0\xa3\x1e\x7f\x0c\xc9\xe9\xbb\xe0\x87\xa3\xbf\x24\xf8\x5c\x5c\x8e\x07\xe7\x37\x1f\x66\x2f\x81\xe7\x2b\x03\xcf\xae\xd0\xb3\x33\xf8\xec\x09\x3f\xbb\x02\xd0\xf6\x10\x54\x0f\x42\x5b\x50\xf5\xd1\xbe\x99\xf0\x60\xd8\x9e\x13\x1d\xea\xae\x5a\x89\x0c\xe2\x90\x8b\x4d\x51\x7a\x77\x16\x82\x24\xe8\x6b\xac\x71\x57\xc1\x95\xbe\x4e\x0b\x2c\xf5\xa5\xcf\xca\x7c\x78\xad\x91\xd9\x1e\x14\x76\x04\x9c\x49\x12\xd5\x8a\x9e\x8a\xdc\x4c\x90\x24\x51\x3d\xc4\x00\xe2\xf4\x6d\xf0\xee\xcd\x5f\x12\x5d\x26\x57\x83\x97\xc0\xf2\x12\x58\xfe\x03\x02\x8b\xef\x92\xb5\x72\x63\x8f\x77\xee\xf0\x75\xf1\x4e\xd0\xd2\xed\xf3\x7a\xd5\xb7\x0b\x96\x86\xe2\x42\x22\xa1\xb2\x78\xf7\xee\x2f\xf1\xfd\xf9\xd9\xec\xd7\x97\xb2\xe2\xc5\xfb\xbf\x35\xef\x7f\x72\xd7\xb1\x16\x6d\xda\xc5\xe5\xff\x5f\x0d\xc1\xbf\xdd\x96\x2d\x55\xfd\xd6\xfc\x7a\x70\xdd\xed\xa4\x7e\xf3\x45\xdc\xb5\xab\x9b\xcb\x3e\x62\xe6\x49\x84\x03\x30\x34\x08\xec\x6d\x85\x1f\x33\x7b\xde\x63\xbe\x9b\xa2\xd0\xb6\x60\x51\x2f\x72\xfc\xaa\xa5\x81\x79\xe8\x11\x48\x19\x15\x9e\xe6\xd0\xd6\x14\x82\x76\x84\xb7\x4f\x31\x25\xea\xf2\x3a\xe8\xaf\x71\x78\xc7\xf8\x86\xe0\x7d\x61\xee\xbe\x64\x2a\xf9\xeb\x01\xaf\x24\x3b\x7d\x13\xbc\x0f\x8e\x8e\xdc\x7b\xc3\xca\xc3\x08\x56\x64\x19\xd8\xa1\x7c\x9a\x66\xce\xe3\x19\xcd\xa1\xd0\x6b\x33\x6c\x6f\x67\x95\x03\x6f\xb2\xea\x2b\x0c\xa5\xd2\x94\xe7\x1b\x17\x22\xc4\xf2\x5c\x1c\xa0\x85\x76\x69\xe2\xf9\x76\xee\x9d\xa9\xed\x59\xe0\xdc\x8e\xe6\xb3\xe8\x89\x78\xa2\x25\xa0\x4a\x95\xc4\x69\xef\xe8\x8d\xf8\xa7\xdb\x11\xbf\x6b\x78\xf4\xa8\xf0\x47\x80\x87\xdf\x55\xbc\x09\x13\x56\x88\x05\xd4\x28\x99\xb5\x0d\x27\xfe\xfa\x86\x67\x89\x5d\xb3\xdd\x67\x04\x35\xf3\xd5\x32\xaa\xb6\xb7\x57\x6d\x60\xc3\xfe\x26\x29\x9d\xd5\x76\xb3\x4b\x64\x5a\x3b\x12\xcb\x25\x6e\x86\x13\x5b\x4a\x8b\x3c\x94\xa1\xa0\x5a\xf2\xcb\x28\x57\x3c\x9a\x07\xeb\x40\xe1\xa2\xcc\xdf\x6b\xf4\x22\xf3\x32\xc0\x42\x6c\x2c\x0c\xbd\xf7\x32\xcf\xb2\xfa\x5d\x25\x04\x66\xbc\x76\x30\xef\x1e\xf4\xff\x5e\xa4\x31\x0f\x7e\xb9\x81\xff\x42\xc4\x83\xb9\x9d\xe5\xe1\x5a\xbc\x16\xb3\xae\x24\x29\x20\x33\x39\x6d\x03\x97\x52\x05\xb5\x3a\xcd\xf6\x47\x01\xc5\x3a\x78\xc3\x23\x0e\x9f\x47\x34\x5d\xcd\x78\x14\x53\xf7\x0f\x33\x4a\xa0\x2b\x7e\x80\x38\xb2\x0b\x74\x2e\xce\x54\xd5\x32\x0b\x11\xc1\x17\x48\x5e\x34\xc1\xcc\x40\x5f\x35\xb0\xaf\xc8\x3d\x8b\xdd\xa1\x41\xf5\xb8\x64\x5b\x38\xc2\xe2\xf9\x04\x7e\xe4\x10\x33\xb9\xf8\xf3\x92\x48\xbe\xa7\xa8\xc7\x23\x49\xd7\x06\xc2\xd3\xe3\xe0\xed\x4f\xee\x2d\x47\x18\x67\x31\x58\xe6\x28\x66\xea\x1e\xf2\xfa\x21\xc5\xb9\x94\x62\x6e\x06\x5c\x0a\x3f\x88\x15\x39\x36\xb7\xaa\xae\x05\x6f\x9b\xa3\x8d\xd3\x8a\x45\x9e\x1e\x82\x88\xca\xab\x04\x65\xb1\x82\xa7\xe2\x72\xde\x4c\x3a\xd5\x68\x57\x2c\xe4\x4d\xe9\xab\xc9\xf4\xfa\x97\x61\x7f\x7e\x3b\x18\x5e\x9c\xdd\x8c\xe6\xb7\xb3\x9b\x73\xf1\x0d\xc1\x4f\x53\xf8\x7c\x0b\x1a\x6d\xea\x4c\xfd\xeb\xf1\x7c\x38\x06\x26\x89\xde\x32\x0d\x70\xb6\xfb\x38\xf2\x96\xfe\x44\x05\x58\x11\x2c\x10\x6b\x99\x56\x25\x56\x17\xd7\xd9\x37\x66\x17\xc2\x01\x0a\xd7\x89\x10\x59\x0f\x0d\x0e\x85\xac\x23\x47\xd4\xbe\x52\xa8\x40\x7d\x16\x71\xe3\x2e\x12\x53\x95\xa9\x06\xaf\x2a\x28\x23\x9b\x39\xad\x6b\x75\x3a\x9c\x8c\xfe\x36\xbf\x96\x97\x31\x92\xa2\x3a\x5c\x0a\x36\xcc\x45\xf8\xec\xe9\x8b\x6f\x19\x96\x2c\xd0\x8f\xa6\xbe\x85\xd4\x42\xd6\x33\xad\xce\x04\xc0\x26\x93\xf6\x66\xc6\x41\xa6\xbc\x38\x6a\x9c\x9b\xe9\x2f\x66\xc6\x1c\x6b\x66\x58\x21\xd0\x7c\xe0\x79\xd2\xdb\xc1\x8d\xa5\xef\x05\x7d\x25\xdb\xb9\xc2\xd2\x8c\x1a\x21\x7d\xb5\x81\xda\x0e\x60\xe8\xca\x01\xdc\x77\xd4\x75\x79\xaf\x3e\xcf\xfa\xd3\xcb\xc9\xfc\xfb\x16\xd7\xaf\x68\x4f\x0e\x57\x39\xa5\xf7\x9b\xb6\x58\x6d\x60\xa0\x87\x3b\x87\xf0\x2e\xdd\x76\x18\x65\x57\x18\x10\x50\xcf\xe4\x9f\x06\x96\x6a\x9a\x4c\x87\xb3\xe1\x78\x70\xab\xe6\x22\x1e\x40\xb8\x64\x07\x7f\xc0\x96\x9f\x6d\xc5\xa5\xfd\xee\xb3\xdb\x2e\x43\xf7\xe2\xed\x21\x14\xf8\xb6\x47\x28\x21\x56\xcf\x3b\x1e\x26\xed\xb2\xdb\xe6\x88\xbe\x23\x53\x38\x2f\x42\x1a\x12\xad\xc1\xfa\x29\xa7\x55\xfe\xbd\x23\xab\x3f\x2b\x41\xfe\x53\x08\x20\xa6\x29\xd9\x5c\x2e\x6b\x2f\x3c\x6a\x60\xdb\x73\x20\x91\x4c\xaf\x01\xad\x29\x1d\x80\x9d\x80\xb8\xef\x1d\x26\x19\xdf\xe8\xb9\x95\xf7\xcb\x55\x44\x53\x52\x6d\x5e\x58\x73\x2e\x05\xbd\xaa\xbf\x2d\xf0\xfe\xac\x03\x15\x81\xfc\x83\x40\x51\xa0\x15\x09\xdb\x30\xb0\x75\xe6\xff\x61\x60\x20\x5f\x21\xd8\xb7\xe0\x26\x96\x48\xdb\x31\x0f\xc3\x75\xd8\xb0\x39\x57\xb2\xd4\xde\xbc\x1f\x05\xef\x82\xb7\xd5\x6e\x60\x47\xf6\xd4\x0f\xb9\xa7\xf8\x3e\x16\x1d\x82\x1a\x11\xe5\x28\x81\x3e\x34\x67\x95\xb7\xdd\xee\x03\x45\x63\xfc\x0b\x18\xfc\xff\x0a\x5c\xe0\x48\xbd\x50\x65\x8e\x03\xd4\x71\xdb\x03\xea\xee\x89\x54\xe3\xa8\xdb\x1a\x9b\x57\x74\xce\x13\x27\x65\x6c\xb5\xfd\x10\xbd\x6f\x23\xb5\xde\xf8\x3f\x77\xa7\xf6\x58\x8a\x67\x23\xd5\x53\x34\xb3\xf0\xf8\x9f\x38\xf2\xc6\xa8\x5a\x81\x47\xd9\xd6\xa4\xe2\x82\xff\xa7\x67\x18\xc1\xde\xe1\x1a\xfa\x8d\x9a\xd0\x3f\xdd\xba\xbe\xd2\xc2\xbe\xc2\xca\x1a\x2d\x4d\x02\x33\xf7\x41\xa3\xb3\x8b\xf6\x2d\x1d\xab\x2a\x29\x8a\x45\x37\x53\xbe\x5e\x2c\x41\x2e\xa1\x56\xfa\x6f\x31\x5f\x8f\xa9\x33\x21\xbd\xd2\x6d\xe8\xed\xee\xf4\xcc\x2d\xad\xac\xf6\xf9\xe2\xea\xc6\x0e\x2a\x71\x5e\x53\x39\x8f\x0d\xff\x1d\x00\x00\xff\xff\x40\x74\xcc\xe0\xf3\x3f\x00\x00")

func templatesJenkinsNormalJobXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsNormalJobXml,
		"templates/jenkins/normal-job.xml",
	)
}

func templatesJenkinsNormalJobXml() (*asset, error) {
	bytes, err := templatesJenkinsNormalJobXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/normal-job.xml", size: 16371, mode: os.FileMode(420), modTime: time.Unix(1444726491, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsPipelineXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x93\x4f\x6f\x13\x31\x10\xc5\xef\xf9\x14\xd6\x8a\x6b\xbc\x29\x07\xd4\x83\xe3\x82\x02\x95\x40\x05\x8a\x28\x5c\x91\xbb\x3b\x71\x0c\xde\xb1\xe5\x3f\x49\xaa\xaa\xdf\x9d\xd9\xdd\x38\x69\xca\x1f\x29\xea\x29\xf1\x7b\x3f\x3f\xcf\x78\xbc\xe2\x62\xdb\x59\xb6\x86\x10\x8d\xc3\x79\x75\xc6\x67\x15\x03\x6c\x5c\x6b\x50\xcf\xab\x6f\x37\x97\xd3\xf3\xea\x42\x4e\x44\x04\xde\x1a\x75\xeb\x2c\xff\x09\xf8\xcb\x60\xe4\xde\x78\xb0\x06\x81\xbf\xa5\x1f\x0a\xb8\xbb\xde\x09\xdf\x0d\x6c\x98\xb7\x59\x1b\x0a\x6c\x77\xe6\xb4\xe0\xd3\xd1\x79\x3d\xe3\xe7\xfc\x55\x25\x27\x8c\x09\x54\x1d\xc8\xfb\x7b\xc6\x3f\xd1\x1f\xf6\xf0\x20\xea\x41\xe9\xad\xa5\xb1\x09\xc2\xbb\x2d\x34\x39\xb9\x10\xe5\x52\xd9\x08\xa2\x7e\x2a\x1f\xd0\x2f\x19\x32\x1c\x63\xa3\xd4\x23\x3e\x38\x0f\x21\x19\x88\xac\xb1\x2a\xc6\x79\xb5\xca\x6d\x74\xc8\x3b\x47\x75\xf2\xbe\xf0\x17\xd7\x23\x73\x77\x65\x62\xaa\xea\x61\x5b\xe3\x3a\xef\x10\x30\x7d\xf5\xd0\x0c\x87\x91\x78\xe2\x85\xfc\x98\x2e\x1e\xa7\x8c\x21\xff\xed\x7d\xb0\x97\x26\xc4\xf4\xc1\xdd\x0e\xc8\xe5\x6e\x31\x60\x7b\xa7\xa0\xd4\xd0\x9e\xbc\x52\x07\xb0\xe8\x63\xd9\xf5\xf3\xeb\x16\xf5\x9f\x17\x22\xd0\x7d\x5e\x96\x7d\x51\x9e\xcd\xa8\x8f\x23\xa5\x67\xe2\xca\x6d\xde\x68\x1d\x40\xab\x04\x6d\xf1\xca\xb0\xfe\xe1\x96\xf0\x85\xb3\xb9\x43\x8a\x1e\x93\xcb\x72\xc8\x75\x34\x53\xd4\x12\xa9\x26\xca\xd9\xad\xf6\x27\xae\x55\x52\x87\xa7\xf3\x58\xea\x91\xec\x5b\x3a\xef\x3d\xd2\x43\x59\x2b\x2b\x5f\x8a\xfa\x89\x52\x72\x16\x2b\x85\x1a\x8e\x72\x8a\xd4\x23\xca\x5a\xb7\xf9\xa8\x30\x2b\x7b\x13\x8c\xd6\xf4\x45\xc9\x14\x32\x91\x7f\x73\xfa\x1d\xd4\x29\x6c\x7d\x19\x6a\xa4\xb7\x76\xf2\x74\xe4\xe4\x77\x00\x00\x00\xff\xff\x31\x82\x93\x82\xc0\x03\x00\x00")

func templatesJenkinsPipelineXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsPipelineXml,
		"templates/jenkins/pipeline.xml",
	)
}

func templatesJenkinsPipelineXml() (*asset, error) {
	bytes, err := templatesJenkinsPipelineXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/pipeline.xml", size: 960, mode: os.FileMode(420), modTime: time.Unix(1444285629, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/jenkins/multi-job.xml":  templatesJenkinsMultiJobXml,
	"templates/jenkins/normal-job.xml": templatesJenkinsNormalJobXml,
	"templates/jenkins/pipeline.xml":   templatesJenkinsPipelineXml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"jenkins": &bintree{nil, map[string]*bintree{
			"multi-job.xml":  &bintree{templatesJenkinsMultiJobXml, map[string]*bintree{}},
			"normal-job.xml": &bintree{templatesJenkinsNormalJobXml, map[string]*bintree{}},
			"pipeline.xml":   &bintree{templatesJenkinsPipelineXml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
