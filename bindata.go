// Code generated by go-bindata.
// sources:
// templates/jenkins/multi-job.xml
// templates/jenkins/normal-job.xml
// templates/jenkins/pipeline.xml
// DO NOT EDIT!

package pipeline

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesJenkinsMultiJobXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\x59\x6f\xdb\xc6\x13\x7f\x8e\x3e\x85\x60\x04\x30\xf0\xc7\xdf\x94\xed\xb6\x49\x0a\xd0\x4a\x62\xd9\x09\x54\xf8\xaa\x8e\xf8\x31\x58\x91\x23\x6a\xa3\x25\x97\xd8\x25\x1d\xab\x46\xbe\x7b\x67\x2f\x72\x29\xd2\xb1\x9c\x06\x45\xfd\x62\x72\xae\x9d\x9d\xf9\xcd\x41\x85\x6f\xef\x53\xd6\xbf\x03\x21\x29\xcf\x4e\xf6\x8f\x82\xc3\xfd\x3e\x64\x11\x8f\x69\x96\x9c\xec\xcf\x67\x1f\x0e\xde\xec\xbf\x1d\xf6\xc2\x88\xa7\x41\x41\xd7\x84\x05\x5f\x20\x5b\xd3\x4c\x06\x39\x2b\x13\xf5\x3f\x2d\x59\x41\xbf\xf0\x45\x70\xa9\x1e\xfe\xe0\x8b\x1b\xc1\xbf\x40\x54\xf4\x8d\xc0\xc9\x9e\x55\x38\x70\x82\x07\x86\xf1\xee\x28\x38\xfa\x6d\x6f\xd8\xeb\xf7\x43\x12\x15\x78\xba\x1c\xe8\x97\x18\x64\x24\x68\xae\x28\xc3\x70\xe0\xbf\x29\xee\x1a\x20\x3f\x83\x1c\xb2\x18\xbd\xa4\x20\x87\x4b\xc2\x24\x84\x83\x16\x5d\x09\xe7\x82\xe7\x20\x0a\xfb\x8a\x04\x09\x41\x4c\xc9\x82\x7b\xb7\xa0\x39\x30\x9a\x41\x70\x63\x1f\x6e\x8c\xce\xa6\x72\x3f\x46\x32\xc6\x67\x73\xe0\x44\x9d\xff\x87\xc1\x9b\xe0\xd5\x9e\xb1\x8c\xb6\x0b\x22\xd7\x57\x24\x85\x61\x4e\x04\x61\x0c\x58\x1f\xee\x21\x2a\x95\xe7\xe1\xa0\x62\x3a\x69\x59\x90\x04\x34\xe5\xe1\xa1\x1f\x4c\xdd\x5b\xff\xdb\xb7\x70\x50\xf3\x8c\xd7\x83\x67\xb8\x6d\x55\x54\xba\x22\x2e\xc8\xdd\x26\x58\x95\xb1\xe4\x59\x95\xae\x84\x16\xab\x72\x11\x7c\xd4\xff\x6c\xaa\x5a\x77\x36\x42\x2a\x43\xc7\xc1\x61\x7d\xc5\xdc\x88\xcf\x05\xd3\x5e\x1b\x1b\xf8\xa6\xbd\xf6\x98\xd6\xed\x1f\x73\x42\x67\x6e\xd0\x4c\x5d\x28\xa3\xb4\x1f\x31\x22\xe5\xc9\x5e\xdb\x94\xb2\x33\x1d\x5d\xee\xf9\xee\xbf\x3b\x0e\x7e\xd5\xae\xbf\x78\x81\xc1\xc8\x96\x34\xf9\x64\x30\x3e\x3c\x56\x8e\xf9\x04\x25\x52\x4a\x10\x13\x48\x79\x01\x23\xcd\x93\x8a\xfa\x22\xec\x38\x6b\xbe\x25\xa9\x05\xd1\x40\x1d\x93\xf9\xe4\x42\x07\x44\x91\xb4\x95\xc1\x8e\x66\x50\xa5\xcb\x8d\x70\x21\x48\x16\xad\xe0\x71\x9f\x4e\xb5\xc0\x34\x87\xc8\x7a\x93\x29\xf0\xfc\x6f\x90\x12\x59\x80\x08\x07\xfa\xb5\xf7\x88\x27\x4d\xe5\x70\xe0\x9f\x16\xc6\x54\x92\x05\x83\x69\xb9\x48\x79\x5c\xb2\xba\xde\xda\x0c\x93\x74\x81\x90\xc7\xb0\xde\xf9\x9c\x42\x94\xa8\xd1\xc5\x31\x3a\x31\xff\x08\x19\x08\x52\xd4\x2c\x73\xfd\x12\x69\xaa\x31\x54\x87\x3e\x29\x68\x0c\x92\xb2\x58\x71\x71\x2d\x46\x3c\x4d\x69\x81\x21\x70\x06\xda\x0c\x5b\x2e\x0c\x48\xa6\xf3\x37\x52\x4f\xb7\x5c\xac\x65\x4e\x22\x53\x8e\x86\x69\x04\xbf\x62\xb9\x5d\x97\x45\x25\xe0\x0c\xb7\xe8\x3d\x5b\x30\x65\x06\xa7\x2e\xa0\x56\xb6\x49\x74\x61\x53\x49\xbf\xe1\x8c\x39\x29\x8f\x62\x44\x68\x92\x71\x01\x57\xbc\xa0\xcb\x8d\xf1\xdf\x89\x76\x70\x8c\x0a\xc2\x69\xba\xc2\x5e\xc4\xbf\x8e\x18\xcf\x2a\x67\xb7\xc9\x46\x78\x51\x52\x16\x8f\x56\x9c\x23\x06\xbf\x53\x6b\xd8\xd0\x58\x70\x06\x4b\x82\xdd\xfc\xd4\x53\xd9\x1b\x58\x3b\x28\x34\xe3\x9c\x0d\xad\x4c\x38\x70\x04\xdb\x82\xab\xcc\x2d\x13\x77\x0c\xa3\xb2\xa8\xf4\x05\x30\x4c\xe6\x1d\xcc\x88\x48\xa0\x38\xa3\xa2\x66\x2c\x41\x60\x77\x07\x47\x80\xfb\x88\x95\x31\xc4\x13\x48\xaa\xf1\xe1\x91\x55\x89\x49\xcf\x2b\x03\x15\xd5\x57\x5b\xc4\xf3\x94\x50\xe6\xa8\x72\x4d\xf3\x19\x49\x2c\x6c\xdd\x9b\xe5\x45\xa9\x6f\xe0\xa7\x23\xf7\xc9\xe8\xc0\x7d\x01\x99\xb4\xd7\xc5\x6a\x45\x87\x86\x3d\xd5\x21\x23\x92\x4d\x38\x49\xad\xd7\xee\x4d\x0f\x54\x53\xaa\xf1\x56\xe9\xc6\x9a\xb9\x60\x3c\x5a\xeb\x3c\xde\xae\x20\x3b\xe3\x5f\x33\x59\x08\x20\xa9\x26\xe1\x0e\xe0\x94\x9e\x94\x6b\x1b\x9b\xe7\xbb\x98\x6a\x49\x29\x43\x85\xa0\x49\xe2\xb2\xa7\xfa\x37\xb6\x0e\x4c\xbd\x01\x9c\xb3\xb3\x4d\xee\x39\x10\xa3\xa2\x37\x06\x77\xdc\x5a\x4e\x8d\x66\x3d\xeb\x56\x44\x9a\x21\xac\x9f\x0e\xb1\x6e\x2b\x4a\x43\x06\x75\xa5\xa3\xf4\xfb\xd8\x43\xb0\xb2\x13\xc0\x99\x5e\x2e\x14\x0b\x5b\x48\xc5\xdc\xc5\x9f\x1b\x67\xd3\xcd\x85\x7e\xf5\x17\x22\xbf\x5a\x19\x74\x6b\x72\x04\x5f\x48\xc5\xe4\x06\x57\x90\xd4\x35\x5e\x8f\xe0\xcb\xc1\x7d\x8e\x75\x1b\xe3\xe0\x74\x01\xf5\x28\xbe\xa0\xc5\x0b\xfa\xb4\x85\x20\x45\xf1\x05\x71\xf1\x91\x98\xc1\x89\x6a\xed\x37\xa4\x58\xe1\xfa\xd6\x22\xf9\xf2\x29\xb9\x9f\x00\xa6\x1a\xbb\x20\x86\xd7\x7b\x6b\xb8\x99\xa9\xa3\x14\x67\x33\x2d\x54\x01\x25\x9b\xca\xdf\x0e\x56\x5b\x15\xe3\x18\x53\xbd\x3f\x36\xd4\x6a\xb2\xaf\x82\x4b\x96\x28\xde\x33\xa6\xae\x66\xa2\xe7\x53\x1a\x61\xae\xf4\x35\x12\x3b\x6c\xad\x29\x63\x3a\x9b\xd7\x19\x2a\x4f\x40\x62\x8a\xeb\x53\x3f\xbc\x1f\x5f\xcc\x27\xe7\xb8\xb9\x7e\x57\xcc\x37\xa8\xc1\x7d\x9d\xb1\xcd\x78\x89\x39\x1a\xad\x14\xce\xaa\x0e\xd3\xcd\xdc\xf2\xd8\xac\x14\x7d\xef\xaf\x6b\x9d\xc0\x1d\x66\x02\x77\x54\x75\x19\x5d\x15\x1a\x3c\x80\xd3\x52\x76\x6e\x58\x0d\x73\x88\xf0\x05\xae\xa3\x7f\x96\x50\x42\x6c\x86\x91\xac\x0b\xb6\x83\xd7\x54\xef\x5a\x50\x1e\x77\xa7\x71\xbd\x41\xeb\x7e\x66\x03\xfd\xd1\x7a\xc3\x22\xc3\xaf\x89\xba\x7c\x6d\x03\xf0\xcb\x5d\x85\xb4\xa0\x59\xa9\x5b\x78\x9d\xb3\xe9\x7c\x34\x3a\x9f\x4e\x3f\xcc\x2f\xb4\x53\x1d\x12\xbd\x9d\xdd\xeb\x68\x4f\x36\xd7\xf6\xfe\x61\x5e\x2e\x70\x42\xac\xaa\x70\xa0\xdf\x74\xd9\x0f\xae\x70\x52\x5c\x12\x3c\x99\xf9\x5d\x08\x57\xa3\x40\xaf\xe5\xd8\x35\x45\x99\xca\x0d\x2e\x88\xa9\x6c\xae\xe7\x81\x36\x5f\x7d\x61\xd8\x5e\x1c\x98\xd8\x5b\xea\xcc\x10\x2b\x3c\x68\x95\xd6\x17\xd2\x11\x22\xe4\x97\x3d\x3f\x5a\x5b\x09\xfa\x99\xe0\xfb\x07\xd0\xfb\x41\xd8\xb5\x20\x87\xfb\x80\x9b\x8b\xf6\xa3\x46\x75\x67\xa9\xfb\x75\x2b\x1f\x6a\x29\xe8\x94\xb6\xe0\xf8\xb9\x99\xaa\xb0\xe1\x61\xda\x43\x4a\x03\x23\x5b\xc1\xc8\xdd\xc5\xe9\x5f\x10\x37\xce\xd8\x46\x41\x43\xf2\xc0\x8a\x62\xaa\x8e\x7f\x7f\x06\x08\x9e\x3c\xae\x63\x30\xfe\x1b\xad\xed\x3f\xd6\xdc\xea\xcf\xf1\x1a\x5f\x15\xb2\x2a\x4e\xf7\xc4\xb2\x0d\xea\xb1\xc1\x65\x83\x7e\x8b\x5f\xe7\x57\xdc\x73\xc8\xde\xf4\x31\xf6\xe3\xe5\xf4\xcc\x94\x6e\xdd\xf6\xf9\xe6\xda\x60\xc7\x90\x34\xda\xa4\x99\xa5\xb7\x82\xe4\x79\xbd\x2d\x6e\x1d\x43\x70\xcf\x8e\x38\xe3\x22\x78\x8f\x4f\x23\xf5\x74\xea\x69\x55\x80\xa9\xe4\xde\x1d\x36\x60\x13\x6a\xe2\x25\xc9\xf5\x8a\x86\x7b\xbb\x48\xd5\xcd\x3c\x5a\xf7\xf5\x9e\x38\xb7\xd1\xe5\xc7\x72\x9c\x61\x02\x75\x53\xa9\xea\x77\x87\x9f\x8b\xec\x6f\x1f\x18\x77\x8c\xdf\xa2\x2c\xb8\xd8\xed\xf7\xae\xd7\xf5\xed\xec\x6f\x86\x33\x48\x73\xfc\x60\x83\xe1\xcb\x87\xd3\xf9\xf8\xe2\xec\xf3\xd5\xfc\xf2\xf4\x7c\xf2\xed\xe0\xe5\xc3\xc7\xf1\xec\xf3\xe4\xfc\xd3\x78\x3a\xbe\xbe\xfa\x3f\x83\x2c\x29\x56\x27\xaf\x11\x9d\xdb\x9a\xce\x62\x99\xc7\xf8\x7a\x46\x25\x92\x37\x3a\x40\x66\x05\x6b\xd3\x77\xff\x5d\xac\x7d\xd1\xae\x4e\xb8\x9d\xfa\x82\x62\x23\x2e\x48\x8a\xe1\x0e\x66\xf5\x73\x67\xfa\x3d\x59\x1c\x78\xaf\x82\x63\xf3\xad\x66\xa7\x74\x0d\xb1\x67\x8d\x7b\x3b\x10\x86\xbd\xbf\x03\x00\x00\xff\xff\x8a\xc5\x65\x24\xa0\x15\x00\x00")

func templatesJenkinsMultiJobXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsMultiJobXml,
		"templates/jenkins/multi-job.xml",
	)
}

func templatesJenkinsMultiJobXml() (*asset, error) {
	bytes, err := templatesJenkinsMultiJobXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/multi-job.xml", size: 5536, mode: os.FileMode(420), modTime: time.Unix(1444205499, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsNormalJobXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\xff\x6f\xe3\x36\xb2\xff\x3d\x7f\x85\x91\xb7\xc0\xbe\x57\xd4\x72\x92\x5d\x74\x5b\xc0\x71\x93\xd8\xce\x6e\x5a\xc7\xf1\xb3\x9d\xed\x1d\x0e\x87\x80\x96\x68\x5b\x0d\x25\x0a\x22\x95\x8d\x6f\x6f\xff\xf7\x1b\x7e\x15\x45\xc9\x76\xd2\x2d\x0a\x2c\x2e\x2d\xd0\x5a\x33\xc3\x21\x39\x9c\xf9\xcc\xf0\x4b\xba\x3f\x3f\x26\xa4\xf5\x80\x73\x16\xd3\xf4\xf4\xf5\x71\x70\xf4\xba\x85\xd3\x90\x46\x71\xba\x3a\x7d\x7d\x3b\xbf\x6c\xff\xf8\xfa\xe7\xde\x41\x37\xcb\xe9\xef\x38\xe4\xbd\x83\x56\xab\x8b\x42\x0e\xc2\xac\x23\x3f\x22\xcc\xc2\x3c\xce\x04\x45\x11\x08\x5d\x4d\x29\x47\x9c\xe6\xad\x90\x20\xc6\x4e\x0f\xd7\x45\xc4\x68\x1a\x70\xc4\xee\x59\x30\xb2\xec\x43\x21\x2e\x34\xa0\x0d\x9b\xd3\x5f\x31\xce\x7a\xed\xe3\x6e\xc7\xf9\x54\xfc\xb4\x48\x1c\x76\xf9\xa5\xb8\x28\xe7\xf1\x12\x46\x34\xa8\x6a\x69\x20\x57\xe5\xc7\x56\x8f\x23\x3d\x76\x95\x77\x3b\xe5\x54\xe4\xf7\x3d\x30\x06\x38\xc3\x69\x04\x16\x8a\x31\xeb\x2d\x11\x61\xb8\xdb\xa9\xd1\x85\x30\x18\x2c\xc3\xa0\x56\x7d\x02\x81\xe1\x20\x8a\xd1\x82\x92\xe0\x77\x9c\xde\xc7\x29\x0b\xb2\x38\xc3\x24\x4e\x71\x30\xd1\x3f\x26\xaa\xcd\xa6\x95\x91\x62\x15\xa7\xa7\x87\x11\x90\x61\x6d\x36\x6d\x23\xda\x56\x9c\xb3\xa3\xe0\xc7\xe0\x9d\x36\x20\xe8\x16\xa6\x1d\xa3\x04\xf7\x3e\x7f\x6e\x05\x73\xfd\xd1\xfa\xf2\xa5\xdb\xb1\x1c\x23\xca\x38\x5a\x61\x2b\x3b\x33\x5f\x52\xb8\xe4\xa9\x21\x77\x9e\x31\x66\xdd\x24\xa4\x49\x10\xd2\x1c\x3d\x6c\x02\xbd\xec\x6a\xc4\x2c\x58\xc5\x7c\x5d\x2c\x82\xf7\xf2\x7f\x13\xe5\x4e\xb5\x09\x2b\xa1\xb3\xe3\xe0\xf8\x24\x38\x2a\xe7\xa7\xbd\xef\x36\x27\x72\xd4\x4a\x07\x7c\xc9\x51\x3b\x4c\x3d\xec\x3f\x36\x08\xb5\xe6\xd5\x75\x83\xde\xe2\x65\x2b\xb8\x62\x57\x69\xcc\x63\x44\x7e\xa1\x0b\xe8\x53\x08\xb2\x30\xf1\xfc\xdb\xe9\x43\x74\x30\xeb\x5f\x1f\xba\xf3\x3a\x3b\x09\x4e\x82\x9f\x0e\xad\x9d\xd2\x65\xbc\xfa\xa8\xe2\xae\x77\x22\xc6\xec\x12\x94\x50\xc1\x70\x3e\xc5\x09\xe5\xb8\x2f\xb9\xcc\x1a\xa4\xa1\xcb\x5b\x4f\xd8\xc8\x0a\x3d\xa5\xdd\x6e\xa7\x23\x69\xb4\xc2\x58\x4b\xcc\xf9\xc9\xda\xa0\x5d\xf3\x90\xba\x8b\x1c\xa5\xe1\x1a\xef\x1c\xe1\x85\x94\x99\x65\x38\x74\xc6\x96\x0a\x77\xfb\xae\x23\x86\x57\xf2\xe3\x65\x8c\x73\x39\xce\xd4\xf5\xdd\xa6\x81\xfa\x4a\xbb\x9d\xea\x50\xba\x51\xcc\xd0\x82\xe0\x59\xb1\x48\x68\x54\x90\x32\x6c\xeb\x0c\xd5\x20\xc7\x61\x01\xab\xf0\xe0\x72\x78\x5e\x40\x8b\x26\x8e\xee\x84\xbe\xc7\x29\xce\x11\x2f\x59\xca\x3e\x05\xd0\x04\x58\xda\x4e\xf7\x0a\x6a\x98\x2a\xf8\x9a\xe6\x37\x79\x9f\x26\x49\xcc\x39\xce\x8d\x82\x3a\x43\x3b\x14\xc1\x28\x95\xab\xdc\x17\xbf\x7e\xa3\xf9\x3d\xcb\x50\xa8\x02\x5b\x31\x95\xe0\x27\x08\xdc\x9b\x82\x5b\x01\xa3\xb8\x46\x3f\xd0\xa1\x57\xa4\xf8\xc2\x98\x54\xcb\x56\x89\xc6\x6c\xc2\x2b\x26\x94\x10\x23\xe5\x50\x94\x48\xbc\x4a\x69\x8e\xc7\x14\xc0\x76\xa3\xc6\x6f\x44\x1b\x38\x36\x04\x66\x6b\x44\x08\xfd\xd4\x27\x34\xb5\x83\xf5\xc9\xda\x09\x8b\x98\x44\xfd\x35\xa5\xe0\xa4\x3b\x82\xb3\xe0\x31\x09\x06\x78\x89\x0a\xc2\x2f\x9c\x26\x87\x1d\xad\x07\x84\xe6\x94\x92\x9e\x96\xe9\x76\x0c\x41\x23\xb9\x5d\xb9\xe5\xca\x74\x43\x62\xc6\x6d\xfb\x1c\x13\x58\xcc\x07\x3c\x47\xf9\x0a\xf3\x41\x9c\x97\x8c\x25\xce\x21\x49\x60\x43\xc0\x8f\x21\x29\x22\x1c\x4d\xf1\xca\xa6\x54\x87\x2c\xa2\x90\x39\xa3\x52\xae\x22\x10\xba\x46\x1c\x26\x28\x26\x86\xca\xee\xe3\x6c\x8e\x56\xda\x6d\xcd\x97\x5e\x84\xb4\xd2\x65\x4f\x43\x9c\x58\x77\xc8\xf9\x30\x58\xf0\x18\xe1\x46\x3e\x01\xd2\x9b\xf4\x25\xbf\xbd\xee\x31\x4c\xdc\x61\xfd\xe9\xf1\xb0\xd7\xe6\xf8\x91\xe3\x94\x95\x75\x49\x07\x46\x24\x7f\xf0\x3c\x5e\xad\xc0\x8c\x4a\x4e\xcf\xf6\x36\x63\x3c\xc7\x28\x01\x3c\x67\x0a\xd0\x41\xd2\xe4\x38\xd3\x22\x98\x62\x51\x18\x61\xe9\x23\x73\x45\x2c\xf3\x28\x20\x4e\xc7\x7e\x15\x5a\x9f\x4e\x29\xd2\xaa\x7e\x27\xe0\xb5\xbe\x94\xcd\xdf\xeb\x1c\xb3\x35\x25\x91\x0f\x8c\xb3\xdb\x7e\x7f\x38\x9b\x55\x71\x10\x98\x34\x87\x02\x0d\x91\xde\x51\xb7\x63\x7e\x96\xcc\x90\x12\xa8\x58\x2e\x46\xb7\x43\x91\x56\x08\xcd\x2b\xbc\x24\x23\x98\xab\x39\x69\xff\xa8\xd2\x2c\xd8\x7a\x83\xea\x76\x9e\x6e\x1f\xeb\x2e\xae\xcd\xb5\x04\x8e\xae\x51\x5a\x40\xec\x6e\xb4\x5f\x81\x1f\xd8\x25\x30\xa5\xa2\xe9\x01\x92\x68\x93\xe1\x7b\xdf\xb5\xf4\xbf\xb0\xce\x4e\x3e\xd1\x08\x33\xa1\x8c\x2b\x14\xf9\x40\xe9\x3d\xab\x82\x8c\xcf\x3c\xa8\xa4\x96\xad\x3d\xbb\x53\x02\xdb\x38\x4e\xa5\x60\xe7\xb7\x1c\x65\x99\x75\x33\x3f\xfd\x21\x70\x4d\xb9\x14\xc1\x39\xfc\xea\x8b\x5f\x17\x4e\x2b\x5b\x27\x58\x39\xa8\xf0\xde\xba\x15\x90\x24\x5e\xa3\x4c\x56\x67\xe0\xea\x79\xa2\xd7\xd6\xd0\x0e\x1a\x33\xe4\x9e\x7e\x9f\x5e\x9a\xea\xc2\x04\x62\x13\xa6\xbe\x28\x44\x75\xff\xdc\x22\x55\x6f\x32\xe6\x18\xbc\x0d\xe2\xbd\xf7\xea\xf3\xc5\xed\xd5\x68\x70\x37\xbe\xbd\xbe\x18\x4e\xbf\xb4\x5f\x7d\x7e\x7f\x35\xbf\x9b\x0e\x3f\x5e\xcd\xae\x6e\xc6\xdf\x13\x9c\xae\xf8\xfa\xf4\x1d\xc4\x8d\xdf\xb2\x8c\xba\x08\x3e\x07\x31\x03\xf2\x46\x5a\x41\x39\x74\x9d\xfe\xf4\x7a\xb6\x3e\xd1\xe6\x15\xe5\x71\x82\xa1\x5e\x4e\xc0\x8a\xc1\xbc\xfc\xdd\xb8\xaa\x8e\x2c\x94\xb6\x3f\x04\x27\x87\x1a\xa3\x6a\x9e\x53\x89\x87\x6f\xaa\xc6\x94\x00\x55\xc3\x29\x48\x78\x32\x3e\x45\x31\xb0\x64\xd5\xca\xef\xa5\x2a\x7d\xa9\x4a\x5f\xaa\xd2\x97\xaa\x54\x2d\x42\xda\xd8\xa5\x5b\x56\x96\x25\xdd\xb7\x9d\x70\xb7\xc0\xbe\x2a\x2e\xca\x33\x87\x19\x41\x0f\x78\x84\x16\x98\xe8\x6c\x00\x2b\x0a\x0e\x89\xa3\x31\x8d\xf4\xe1\x8d\x2b\x01\x31\xe8\xf2\x0f\xbc\x8a\x25\x44\xe9\x94\xa2\xc4\x78\xaa\xf9\x3c\x28\xa1\x28\xf2\x10\x28\x52\xa6\x26\x34\xbc\x57\x33\x58\xe3\x74\x40\x3f\xa5\xaa\x84\x95\x24\xd8\x1e\x98\x46\x7b\xe5\xea\xca\x4c\x79\xbc\x5b\x55\x4d\xea\x40\x65\x36\xc0\x3c\xf0\x59\x15\x29\x76\x56\x1e\xf9\x60\x47\xbd\xff\x8c\x6a\xdf\xad\xf5\xbf\xaa\xd2\xaf\xd7\xf9\x3b\xaa\xfc\x1d\x35\xfe\xf6\x0a\xff\xa9\xf5\xbd\x57\xdd\x3f\xbd\xb6\xaf\x38\x95\xf4\x63\x77\x6b\x05\xd8\xbb\xc2\xad\xe0\xdc\x1c\xbe\xe2\xcc\xaf\xec\x4d\x9c\x84\x34\xdb\x98\x53\xd7\xa0\x0f\x1f\xa6\x8d\x8d\x4c\x57\x02\xaa\xa6\x37\x27\xc1\x71\xed\x40\x50\x1a\x5f\xdb\x58\x04\xa5\xac\x10\xdd\x43\x41\xdb\x60\x19\x13\x91\x95\x84\xbc\xed\x49\xc8\x69\xba\xdd\x88\x49\x6c\x2c\xf7\x75\x1a\xf2\x58\x49\x61\x98\x80\xde\xda\xe1\x76\xe3\xbc\xec\x8e\x47\x5a\x71\xa6\x5b\x1e\x3a\x75\x06\x38\x2e\x59\xa0\xf0\x7e\x4e\x47\x88\xf1\x59\x11\x86\x98\xb1\x65\x41\xf4\xca\x6d\x65\x3b\x55\x94\xf6\xb4\x4b\x39\x91\x19\x17\x49\x7c\xb5\xe9\x01\x46\xbf\x27\x74\x81\xc8\x0c\x73\x0e\x61\x53\xba\xa4\x27\x68\xab\x18\x33\x31\x4b\x89\x28\x64\xbe\x4b\x68\x8b\xf3\x2c\x8f\x53\x6e\xec\xe6\x54\x0d\xdb\x04\x9a\xb1\x71\xeb\x9a\x37\x6d\x1a\xbb\x95\x5b\x83\xd9\x1a\x13\xd7\xfd\x93\x04\xa5\xe0\xb9\xff\xd3\x32\xf5\x7b\x2b\x84\xb9\x89\x65\x49\xd0\x2a\x0e\x0f\xf0\x63\x46\x73\xde\x9a\x5c\x4d\x86\xa3\xab\xf1\x50\xef\x31\x4e\x5f\xfd\x2f\x0e\xd7\xb4\x75\xf8\xea\xb3\xe5\x7c\x1c\x4e\xc5\x76\xe3\xcb\x61\xeb\xdf\xad\xb0\xe0\xad\xf6\xf2\xb8\xd5\x8e\x5e\xb7\x5f\xff\x9f\x51\x22\x76\x25\xb3\x0f\xe7\x4f\x6b\x7c\xa2\x1b\x37\x1f\x1c\x3b\xe5\x3d\xa4\xc8\x16\x44\x20\x86\x46\xed\x35\xca\xa3\x96\xda\xfe\x40\x47\xe5\x61\xcb\x81\x2c\x9c\xd4\x64\x8d\x5d\x5a\xea\x7c\x5b\xcd\xbf\x62\x66\xcf\x52\x3a\xcd\x98\x4d\x6a\x56\x2c\xa0\x1a\x58\xfb\x07\x21\xe7\x69\x94\xd3\x38\x1a\xc1\xf2\x05\x13\x24\x2a\xb7\xd4\xae\x00\xcd\x57\x66\x9f\x14\xc6\x4e\x86\x93\x2d\xee\xee\x88\x68\x23\x1a\x4e\x8c\x6a\x27\xab\x4a\x99\xb6\x10\x11\x7b\x92\x32\x70\xd7\x18\x11\xbe\xde\x38\x27\x27\xe9\x07\x9f\x64\xa1\x69\x14\x8b\x92\x0b\xca\x29\x07\xae\x14\xcd\xe2\x80\xec\x50\xe6\xe3\x7f\xb8\x9d\xfe\x13\x10\xa0\x64\x59\x8f\x56\x95\xd3\x50\xdf\x6f\x95\x3d\x8a\x74\x58\xa4\x37\xe9\x25\x54\x2b\x65\x22\xf4\xa8\x76\xc4\x0c\x4f\x72\xfc\x10\xd3\x82\xc9\xb8\x3e\x67\x53\x53\x40\x39\x85\xe0\x56\x11\x47\xcd\x8c\x8b\x44\xbb\x43\xc9\x16\x01\x47\xc5\x00\x13\x8e\x3e\x22\x52\x94\x65\xb0\x47\xad\x59\x95\x39\xcb\x84\xc8\x86\xc5\xac\x1d\x42\x99\x0b\x18\xfb\xce\x59\xa8\x02\x12\xb8\xe8\x7c\x4e\x39\x22\xe7\x84\x74\x9a\x39\x1f\xe2\xd5\x7a\x0b\x6b\x4c\xf3\x04\x6d\x6b\x37\xa2\x9f\x4a\xce\x52\x1a\xb8\xde\x93\x43\x17\xfd\x28\xf4\x76\x1c\xf6\xb2\xca\x57\x80\xee\xb5\x69\xd0\xa5\x06\xb6\x4b\x9b\x92\xf0\xf5\xe9\x76\x0d\x1a\x2b\xb3\x29\x7d\xb5\x34\x3e\x7c\x16\x24\x1a\x40\x12\x0e\xf9\x75\x75\xc3\xd7\xc4\x2a\x21\x38\x15\x67\x55\x59\xc1\xf1\x18\x7f\xd2\x49\xc1\x23\x56\xe0\x7a\x8a\x19\x25\x0f\x78\xaa\x4b\x7d\x88\xe8\x75\x15\xae\x1b\x05\x6c\x34\x29\x00\xa8\x59\xa6\x04\x06\x08\x2b\x2d\xa3\xb1\xe7\xd9\x18\xb1\xe3\x80\x10\x52\x49\xb4\x28\x56\xcc\xf4\xb7\xa5\x74\x58\x1a\x31\x21\x7f\x01\x3f\xea\xf8\x63\x44\xce\xde\x06\x3f\x1c\xff\x25\xe0\x73\x79\x35\x1e\x5c\xdc\xbe\x9f\xbd\x00\xcf\x57\x02\xcf\x2e\xe8\xd9\x09\x3e\x7b\xe0\x67\x17\x00\x6d\x87\xa0\x3a\x08\x6d\x61\xd5\x7b\xfb\x66\xe0\xc1\x34\x7b\x0e\x3a\xd4\x43\xd5\x43\x06\xb1\xa5\x67\x53\x94\xde\x9f\x87\xa0\x09\x4a\x4d\xeb\xdc\x3e\xd9\x2b\xb5\xb5\xc2\xd2\x5e\xfa\x64\xa0\x4a\xaf\xd5\x96\xdb\x41\x61\x07\xe0\x4c\x92\xa8\x56\xf4\x78\x7a\x33\x21\x92\x44\x75\x88\x01\xc6\xd9\x9b\xe0\xed\xd1\x5f\x82\x2e\x93\xeb\xc1\x0b\xb0\xbc\x00\xcb\x7f\x01\xb0\x54\x43\xb2\x56\x6e\xec\x89\xce\x1d\xb1\x2e\x5e\x45\x59\xb9\x7d\x51\xaf\xb6\x52\xa2\x49\x43\x71\x21\x99\x50\x59\xbc\x7d\xfb\x97\xc4\xfe\xfc\x7c\xf6\xeb\x4b\x59\xf1\x12\xfd\xdf\x5a\xf4\x3f\x79\xd7\xb1\x16\xdb\xb4\xcb\xab\xbf\x5d\x0f\x21\xbe\xdd\x2d\x5b\xaa\xf6\x5b\xf3\x9b\xc1\x4d\xb7\x93\x56\x37\x5f\xc4\x9d\xbb\xba\xa7\xe9\x23\x66\x2e\x80\x1d\x82\x91\x41\xe0\x6f\x2b\xfc\x98\xd9\x1b\x2b\xf3\xdd\x84\x42\xdb\xc0\xa2\x5e\xe4\x54\xab\x96\x86\xc6\xc3\x8a\x80\xd4\xe1\xb5\x69\x86\xb6\x26\x08\xda\x01\x6f\x1f\x63\x4a\xd4\x55\xdd\x36\x4c\x7b\xb0\x12\x8e\x70\x1d\xdd\x4a\xb1\xb3\xa3\xe0\x5d\x70\x7c\xec\x5e\x89\x78\x77\xbe\xac\xc8\x32\x70\x3a\xf9\xea\xc6\x9c\x87\x32\x9a\x43\x55\xd7\x66\xd8\x5e\x3c\xa9\x68\xdd\x64\xfe\x05\xb3\xb2\x5f\xca\xf3\x8d\x4b\x11\x6a\x79\x2e\x0e\xfa\xc3\x35\x0e\xef\x19\xdf\x10\xe1\xae\x8a\x54\x95\xdb\x3e\xc1\xb9\xed\xad\xda\x44\x0f\xa4\xa2\x5a\x12\x7c\xa9\x24\x4e\x7b\xc7\x47\xe2\x9f\x6e\x47\xfc\xae\xf1\xd1\xa3\xe2\x1f\x03\x1f\x7e\xfb\x7c\x83\x09\x56\x89\x25\xd4\x24\x99\x75\x04\x07\x6c\xab\x5e\x66\x85\x5d\x1f\x2d\x17\x31\xe8\xdb\xe9\xec\xf2\x55\xad\xc3\x77\xb4\xbd\x66\x03\x87\xad\x2e\x92\xb2\x59\x6d\x35\xbb\x44\xe6\xb0\x63\x31\x5d\xe2\xa6\x33\xb1\xa4\xb4\xc8\x43\x19\xf7\x7e\x7d\x2f\x21\xad\x78\x34\x6f\x71\x41\xc2\x65\x99\xa7\xe8\xbd\xc8\x5c\x7a\x5a\x8a\x05\xbe\xb0\xf2\x14\xe0\x59\x5e\xbf\xab\x5e\xc0\x0c\x60\x4b\x1c\x00\xd7\x22\x4a\x85\xe6\xef\x45\x1a\xf3\xe0\x97\x5b\xf8\x2f\xc0\x1b\x8c\xed\x3c\x0f\xd7\xe2\x21\x8c\x0d\x25\x29\x01\x69\xc8\xd9\x23\x70\xa9\x55\x48\xab\x8b\xa3\x6a\x2f\x60\x58\x87\x6f\xda\x88\xe7\xe5\x23\x9a\xae\x66\x3c\x8a\xa9\xfb\xe6\xbc\x24\xba\xea\x07\x88\x23\x3b\x41\xe7\xe2\x42\x95\x28\xb3\x10\x11\x7c\x89\xe4\x41\x3f\x8c\x0c\xec\x55\x23\x57\x0d\xb9\x67\xb2\x3b\x2c\xa8\xee\xcd\xb7\xc1\x11\x16\x37\xc3\xf8\x91\x03\x40\x72\xf1\x72\x3e\x92\x57\xc5\x75\x3c\x92\x72\x6d\x10\x3c\x3b\x09\xde\xfc\x54\x5a\x32\xc7\x61\x9c\xc5\xe0\x99\xa3\x98\xa9\x7b\xa0\x9b\x4f\x29\xce\xa5\x16\x65\xcb\xaa\x44\x15\xc4\x8a\x1c\x9b\x5b\x2d\xd7\x83\xb7\x8d\xd1\x82\xb2\x6a\x22\x8f\x0a\x41\x85\xf7\x34\x4d\x79\xac\x68\xe3\x85\x5c\x65\x24\x1d\x1f\xed\x8a\x85\xbc\xa9\x7a\x35\x99\xde\xfc\x32\xec\xcf\xef\x06\xc3\xcb\xf3\xdb\xd1\xfc\x6e\x76\x7b\x21\xbe\x01\xfc\xb4\x44\xb5\xdd\x82\x46\x9b\x7a\xa3\xfe\xcd\x78\x3e\x1c\x43\x23\xc9\xde\x32\x0c\x08\xb6\x87\x38\xaa\x4c\xfd\x89\x06\xb0\x2a\x58\x20\xe6\x32\xf5\x35\xfa\x93\xeb\xec\xeb\xb3\x0b\x70\x80\xc2\x75\x22\x54\xd6\xa1\xc1\x91\x90\x45\xe3\x88\xda\x5b\x62\x8f\x5a\x6d\x22\x6e\x3c\x45\x62\xf2\x1b\xd5\xe8\xbe\x81\x32\xb2\x99\xd3\xba\x55\xa7\xc3\xc9\xe8\xef\xf3\x1b\x31\x1d\x25\xe1\x77\x97\x82\x0f\x73\x01\x9f\x3d\x7d\xf1\x28\x61\xc9\x12\xab\x68\x5a\xf5\x90\x1a\x64\x3d\xd3\xeb\x0c\x00\x36\xb9\x74\x65\x64\x1c\x74\x76\xd6\x3c\x21\x8d\x63\x33\x9b\x89\x99\x71\xc7\x9a\x1b\x7a\x02\x5e\xbb\xbe\x52\xd9\x7b\xf5\x79\xd6\x9f\x5e\x4d\xe6\xdf\xb7\xb8\x7e\xae\x77\x7a\xb8\xca\x29\x7d\xd8\xb4\x45\xdf\x81\xa1\x1e\x7e\xb1\x1a\x4d\xd3\x83\xfd\x2e\xd1\x15\xcb\x07\x70\x31\x93\x7f\x73\x54\x0e\x72\x32\x1d\xce\x86\xe3\xc1\x9d\xea\x5b\x5c\xff\xba\x62\x07\x7f\xc0\x93\x9e\xed\x43\xa5\xf7\xec\xf3\x9a\x2e\x43\x0f\xe2\x51\x13\xd4\xd2\xb6\x1c\x2f\x29\xd6\xae\x3b\x9e\x65\xec\xf2\x9a\x66\x3c\xdd\x81\xd3\xce\x7d\x78\x43\x9a\x33\xdc\x2a\xe0\xb7\xca\x3f\xa4\x62\xf5\x4b\x75\x54\xbd\x08\x06\x61\x9a\x92\xcd\xd5\xb2\x76\xbf\x5d\x23\xdb\xf2\x1e\x89\x54\x76\x03\x6c\x2d\xe9\x10\xec\x00\xc4\x43\xab\x61\x92\xf1\x8d\x1e\x9b\x5d\xd0\x1a\xa3\x29\xa5\x35\x4f\xac\x39\x93\x81\x5d\xd5\xa3\xe5\xca\x7b\x71\x54\x04\xf2\x2f\x8d\x44\x79\x54\x24\x6c\xc3\xc0\xb7\x59\xf5\x2f\x8e\x02\x79\x07\x6b\x1f\x99\x9a\x48\x96\xbe\x63\x5e\x9c\xea\xa0\xb5\x19\x4f\x36\xa9\x3d\xa6\x3d\x0e\xde\x06\x6f\xfc\x5a\x7c\x47\xee\xd2\x2f\x44\xa7\xb0\x6b\x17\xf5\xb9\xea\x11\xe5\x28\x81\x2d\x5f\xce\xbc\x47\xa3\xee\xcb\x27\xe3\xfc\x0b\xe8\xfc\xff\x0b\x5c\xe0\x48\x3d\x7d\x63\x4e\x00\xd4\x79\xdb\xe1\x6c\xf7\x40\x7c\x14\x73\x77\xa1\xe6\x0d\x91\xf3\xc0\x43\x39\x5b\x6d\x3d\xc4\x36\xb3\x51\x5a\x2f\xfc\x9f\xbb\x52\x7b\x3c\xa5\xe2\x23\xfe\x81\x95\x99\x78\xfc\x2f\x1c\x55\xfa\xf0\xbd\xa0\x22\xd9\xd6\xa2\xe2\x2e\xfd\xa7\x67\x38\xc1\xde\xee\x1a\xaa\xfd\x9a\xd2\x3f\xdd\xbb\xbe\xd2\xc3\xbe\xc2\xcb\x1a\x3d\x4d\x12\x33\xf7\x39\x97\xb3\x8a\xf6\x25\x11\xf3\x8d\x14\xc5\x62\x2f\x51\xbe\xdd\x2a\x49\xae\xa0\x36\xfa\x6f\x31\x5f\x8f\xa9\x33\x20\x3d\xd3\x6d\xec\xed\xe1\xf4\xcc\x25\xf5\x66\xfb\x7c\x75\x75\x67\x07\x93\x38\x6f\x49\x9c\xa7\x56\xff\x09\x00\x00\xff\xff\x1e\x01\x04\x8e\x4c\x3c\x00\x00")

func templatesJenkinsNormalJobXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsNormalJobXml,
		"templates/jenkins/normal-job.xml",
	)
}

func templatesJenkinsNormalJobXml() (*asset, error) {
	bytes, err := templatesJenkinsNormalJobXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/normal-job.xml", size: 15436, mode: os.FileMode(420), modTime: time.Unix(1444144480, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsPipelineXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x53\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\x08\xa1\x57\x53\x4e\x0f\x45\x0e\x34\xd3\xc2\x6d\x80\x16\x7d\xa4\x68\xda\x6b\xc1\x48\x6b\x9a\x2d\xb5\x24\xf8\xb0\x1d\x04\xf9\xf7\xae\x1e\x4c\xa2\xf4\x01\x04\x3d\x49\x9c\x99\x9d\x9d\xd5\x52\xe2\xec\xd8\x59\xb6\x87\x10\x8d\xc3\x75\x75\xc2\x57\x15\x03\x6c\x5c\x6b\x50\xaf\xab\xaf\x97\xe7\xcb\xd3\xea\x4c\x2e\x44\x04\xde\x1a\x75\xe5\x2c\xff\x01\xf8\xd3\x60\xe4\xde\x78\xb0\x06\x81\xbf\xa6\x07\x19\x5c\x5f\x4c\xc0\x37\x03\x07\xe6\x6d\xd6\x86\x0c\xdb\x89\x5c\x16\xf9\x72\x64\x5e\xae\xf8\x29\x7f\x51\xc9\x05\x63\x02\x55\x07\xf2\xe6\x86\xf1\x8f\xf4\xc2\x6e\x6f\x45\x3d\x20\x3d\xb5\x35\x36\x41\x78\x73\x84\x26\x27\x17\xa2\xdc\x2a\x1b\x41\xd4\x8f\xe1\x7b\xe9\xe7\x0c\x19\xe6\xb2\x11\xea\x25\x3e\x38\x0f\x21\x19\x88\xac\xb1\x2a\xc6\x75\xb5\xcb\x6d\x74\xc8\x3b\x47\x39\x79\x1f\xfc\xd9\xc5\xa8\xb9\x7e\x6f\x62\xaa\xea\xa1\xac\x71\x9d\x77\x08\x98\xbe\x78\x68\x86\x66\x04\x3e\xf1\x83\x7c\x5f\x6e\x1e\xba\x8c\x26\xff\x9c\x7d\xa0\xb7\x26\xc4\xf4\xce\x5d\xcd\x25\x77\xe8\x18\xa5\xfe\xff\x2c\xa2\xfe\x7d\x48\x81\xee\xd3\xb6\xd4\x45\x79\xb2\xa2\x6c\x33\xa4\xd7\xc4\x9d\x3b\xbc\xd2\x3a\x80\x56\x09\xda\xc2\x95\x05\xfc\x85\x2d\xe6\x1b\x67\x73\x87\x64\x3d\x3a\x97\xe3\xe0\xeb\x68\x4f\xa8\x25\x52\x26\xf2\x99\x4e\x77\x1d\xf7\x2a\xa9\xfb\xeb\xf0\x10\xea\x25\xd9\xb7\xd4\xef\x2d\xd2\xf2\xf7\xca\xca\xe7\xa2\x7e\x84\x14\x9f\xcd\x4e\xa1\x86\x99\x4f\x81\x7a\x89\xb2\xd6\x1d\x3e\x28\xcc\xca\x5e\x06\xa3\x35\xfd\x25\x32\x85\x4c\xca\x3f\x31\x7d\x05\x4d\x0a\x47\x7f\x3e\xed\x27\xd2\xfd\x79\xf2\x76\xe4\xe2\x57\x00\x00\x00\xff\xff\x5f\x40\xf2\x3f\x94\x03\x00\x00")

func templatesJenkinsPipelineXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsPipelineXml,
		"templates/jenkins/pipeline.xml",
	)
}

func templatesJenkinsPipelineXml() (*asset, error) {
	bytes, err := templatesJenkinsPipelineXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/pipeline.xml", size: 916, mode: os.FileMode(420), modTime: time.Unix(1443542096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/jenkins/multi-job.xml":  templatesJenkinsMultiJobXml,
	"templates/jenkins/normal-job.xml": templatesJenkinsNormalJobXml,
	"templates/jenkins/pipeline.xml":   templatesJenkinsPipelineXml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"jenkins": &bintree{nil, map[string]*bintree{
			"multi-job.xml":  &bintree{templatesJenkinsMultiJobXml, map[string]*bintree{}},
			"normal-job.xml": &bintree{templatesJenkinsNormalJobXml, map[string]*bintree{}},
			"pipeline.xml":   &bintree{templatesJenkinsPipelineXml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
