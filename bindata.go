// Code generated by go-bindata.
// sources:
// templates/jenkins/multi-job.xml
// templates/jenkins/normal-job.xml
// templates/jenkins/pipeline.xml
// DO NOT EDIT!

package pipeline

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesJenkinsMultiJobXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x18\x69\x6f\xdb\x38\xf6\x73\xfd\x2b\x8c\xa0\x40\x80\x62\x23\x25\xd9\xdd\xb6\x0b\x28\x6e\x1b\x27\xed\x7a\x90\xc3\xe3\xa3\xf9\x58\xd0\x12\x2d\xb3\xa6\x44\x81\xa4\xd2\x78\x82\xfe\xf7\x79\xbc\x24\xea\x48\x93\x74\x8a\xc1\x24\x1f\x2c\xbe\x8b\xef\x7e\x4f\x8a\xde\xdd\x65\x74\x78\x8b\xb9\x20\x2c\x3f\xd9\x3f\x0a\x0e\xf7\x87\x38\x8f\x59\x42\xf2\xf4\x64\x7f\xb9\xf8\x78\xf0\x76\xff\xdd\x68\x10\xc5\x2c\x0b\x24\xd9\x22\x1a\x7c\xc5\xf9\x96\xe4\x22\x28\x68\x99\xaa\xdf\xac\xa4\x92\x7c\x65\xab\xe0\x52\x3d\xfc\xc6\x56\x53\xce\xbe\xe2\x58\x0e\x0d\xc1\xc9\x9e\x65\x38\x70\x84\x07\x06\xf1\xfe\x28\x38\xfa\xef\xde\x68\x30\x1c\x46\x28\x96\x70\xbb\x08\xf5\x21\xc1\x22\xe6\xa4\x50\x90\x51\x14\xfa\x27\x85\xdd\x62\x5c\x9c\xe1\x02\xe7\x09\x68\x49\xb0\x18\xad\x11\x15\x38\x0a\x3b\x70\x45\x5c\x70\x56\x60\x2e\xed\x11\x00\x02\x07\x09\x41\x2b\xe6\x59\x41\x0a\x4c\x49\x8e\x83\xa9\x7d\x98\x1a\x9e\x5d\xa5\x7e\x02\x60\xf0\xcf\xee\xc0\x91\x3a\xfd\x0f\x83\xb7\xc1\xeb\x3d\x23\x19\x64\x4b\x24\xb6\x57\x28\xc3\xa3\x02\x71\x44\x29\xa6\x43\x7c\x87\xe3\x52\x69\x1e\x85\x15\xd2\x51\x0b\x89\x52\xac\x21\xf7\xf7\xc3\x60\xee\x4e\xc3\xef\xdf\xa3\xb0\xc6\x19\xad\xc3\x67\xa8\x6d\x59\x54\xb8\x62\xc6\xd1\xed\x2e\xd8\x94\x89\x60\x79\x15\xae\x94\xc8\x4d\xb9\x0a\x3e\xe9\x1f\x1b\xaa\x8e\xcd\x86\x48\x45\xe8\x38\x38\xac\x4d\x2c\x0c\xf9\x92\x53\xad\xb5\x91\x01\x27\xad\xb5\x87\xb4\x6a\xff\x9c\x12\x3a\x72\x61\x33\x74\x91\x88\xb3\x61\x4c\x91\x10\x27\x7b\x5d\x51\x4a\xce\x7c\x7c\xb9\xe7\xab\xff\xfe\x38\xf8\x8f\x56\xfd\xc5\x0b\x70\x46\xbe\x26\xe9\x67\x93\xe3\xa3\x63\xa5\x98\x0f\x50\x24\xa5\xc0\x7c\x86\x33\x26\xf1\x58\xe3\x84\x82\xbe\x88\x7a\xee\x5a\xb6\x28\x35\x21\x08\xa8\x7d\xb2\x9c\x5d\x68\x87\x28\x90\x96\x12\x3e\x51\x0c\xb0\xf4\xa9\x11\xad\x38\xca\xe3\x0d\x7e\x58\xa7\x53\x4d\x30\x2f\x70\x6c\xb5\xc9\x55\xf2\xbc\x0a\x33\x24\x24\xe6\x51\xa8\x8f\x83\x07\x34\x69\x32\x47\xa1\x7f\x5b\x94\x10\x81\x56\x14\xcf\xcb\x55\xc6\x92\x92\xd6\xf5\xd6\x45\x98\xa0\x73\x48\x79\x70\xeb\xad\x8f\x91\xbc\x04\x8e\x3e\x8c\xe1\x49\xd8\x27\x9c\x63\x8e\x64\x8d\x32\xe6\x97\x00\x53\x8d\xa1\xba\xf4\x51\x42\x23\x10\x95\x72\xc3\xf8\x35\x1f\xb3\x2c\x23\x12\x5c\xe0\x04\x74\x11\xb6\x5c\x28\x46\xb9\x8e\xdf\x58\x3d\xdd\x30\xbe\x15\x05\x8a\x4d\x39\x1a\xa4\x21\xfc\x06\xe5\x76\x5d\xca\x8a\xc0\x09\xee\xc0\x07\xb6\x60\xca\x1c\x9f\x3a\x87\x5a\xda\x26\xd0\xb9\x4d\x05\x7d\xca\x28\x75\x54\x1e\xc4\x90\x90\x34\x67\x1c\x5f\x31\x49\xd6\x3b\xa3\xbf\x23\xed\xc1\x18\x16\x48\xa7\xf9\x06\x7a\x11\xfb\x36\xa6\x2c\xaf\x94\x6d\x83\x0d\xf1\xaa\x24\x34\x19\x6f\x18\x83\x1c\xfc\x41\xad\x41\x43\xa3\xc1\x19\x5e\x23\xe8\xe6\xa7\x1e\xcb\x5e\x68\xe5\x00\xd1\x82\x31\x3a\xb2\x34\x51\xe8\x00\xb6\x05\x57\x91\x5b\xa7\xee\x1a\x4a\x84\xac\xf8\x39\xa6\x10\xcc\x5b\xbc\x40\x3c\xc5\xf2\x8c\xf0\x1a\xb1\xc6\x1c\xba\x3b\x76\x00\x7c\x17\xd3\x32\xc1\xc9\x0c\xa7\xd5\xf8\xf0\xc0\xaa\xc4\x84\xa7\x95\x49\x15\xd5\x57\x3b\xc0\xf3\x0c\x11\xea\xa0\x62\x4b\x8a\x05\x4a\x6d\xda\xba\x93\xc5\xc5\x99\x2f\xe0\x97\x67\xee\xa3\xde\xc1\x77\x12\xe7\xc2\x9a\x0b\xd5\x0a\x0a\x8d\x06\xaa\x43\xc6\x28\x9f\x31\x94\x59\xad\xdd\x49\x0f\x54\x53\xaa\x49\xab\x74\x13\x8d\x5c\x51\x16\x6f\x75\x1c\x6f\x36\x38\x3f\x63\xdf\x72\x21\x39\x46\x99\x06\xc1\x0e\xe0\x98\x1e\xa5\xeb\x0a\x5b\x16\x4f\x11\xd5\xa1\x52\x82\x24\x27\x69\x0a\xd1\x33\x46\x43\x5d\x92\xf5\x30\x98\x88\x49\x4e\x24\x41\x14\x76\x0c\x28\x4c\xe3\x0f\x9b\xa1\x8e\x21\x80\x39\xb0\x30\xcf\xf5\xa8\x55\xad\xed\xd5\xd0\xfe\x83\xcb\x74\xab\xb3\x48\x53\x3b\x53\x26\xa4\xa9\x9c\xff\x33\xb6\x15\xcd\xc2\x6a\x23\xed\x74\x7b\xec\x66\xd0\x1a\xb6\x11\xa3\x28\x2c\x00\x9e\x45\x6a\x20\x41\x2f\x84\x5c\x36\x15\xe4\xae\x6b\x83\x07\xae\x2a\x2b\x4f\x3c\x67\x0d\x3b\x35\x9c\xf5\xf0\xde\x20\x61\xb6\x0a\xfd\x74\x08\x8d\xa8\x82\x34\x68\x80\x57\x38\x88\x36\x03\x5a\x55\x8a\x61\x49\x29\x57\x0a\xe5\x5c\xff\x54\x7d\xa6\x4e\xa6\x1b\x74\xc3\xea\x2f\x02\x7c\xb5\x03\xe9\x5e\xeb\x00\x3e\x91\xf2\xc9\x14\x76\xaa\xcc\x4d\x12\x0f\xe0\xd3\xe1\xbb\x02\x1a\x51\x02\x71\x70\x0e\xf5\x20\x3e\xa1\x2d\x00\xd0\xa9\x55\x12\x0a\xe2\x13\xc2\x26\x27\x20\x25\x67\x6a\x56\x4d\x91\xdc\xc0\x3e\xda\x01\xf9\xf4\x19\xba\x9b\x61\x88\x34\xb4\x75\x70\xaf\x77\x6a\xa8\x99\xab\xab\x14\x66\x37\x97\xaa\x23\xa4\xbb\x4a\xdf\x1e\x54\x97\x15\xfc\x98\x10\xbd\x10\x37\xd8\x6a\xb0\xcf\x02\x5b\x23\x97\x1f\xa8\xaa\x19\xeb\x3d\x1f\xd2\x70\x73\xc5\xaf\x33\xb1\x47\xd6\x96\x50\xaa\xa3\x79\x9d\x03\xf3\x0c\x0b\x08\x71\x7d\xeb\xc7\x0f\x93\x8b\xe5\xec\x1c\x56\xf1\x1f\x92\xf9\x02\x75\x72\x5f\xe7\x74\x37\x59\x43\x8c\xc6\x1b\x95\x67\x55\xf1\xf5\x23\x5b\x1a\x9b\x1d\x69\xe8\xfd\xf5\xed\x47\xb0\x94\xcd\xf0\x2d\x51\x6d\x53\x57\x85\x4e\x1e\x0c\xe3\x5f\xf4\xae\x8c\x0d\x71\x90\xe1\x2b\xd8\xaf\x7f\x2f\x71\x89\x13\xd3\x06\x44\x5d\xb0\x3d\xb8\x26\x7b\xdf\xc6\xf5\xb0\x3a\x0d\xf3\xc2\x8e\x7d\x66\xa5\xfe\xd9\x7a\xf3\x1b\x92\x91\xd6\x29\x77\xe5\x52\x49\xf2\x52\xcf\xa4\x3a\x66\xf3\xe5\x78\x7c\x3e\x9f\x7f\x5c\x5e\x68\xa5\x7a\x28\x06\x4f\x56\xaf\xa7\x3d\xd9\x58\xbb\xee\x58\x94\x2b\x18\x79\x9b\x76\xfb\xbf\x82\xd1\x77\x89\xe0\x66\xea\x77\x21\xd8\xf5\x02\xfd\x9e\x01\x5d\x93\x97\x99\xd8\xc1\xc6\x9b\x89\xe6\xfb\x46\xa0\xc5\x57\xaf\x4c\xb6\x15\x07\xc6\xf7\x16\x6a\x5b\x77\x95\x0f\x9a\xa5\xf3\xca\x77\x04\x19\xf2\xef\x3d\xdf\x5b\xad\x00\xfd\xca\xe4\xfb\x0b\xa9\xf7\x93\x69\xd7\x49\x39\x58\x70\xdc\xa0\xb7\x6f\x69\xaa\x3b\x0b\xdd\xaf\x3b\xf1\x50\x5b\x4e\x2f\xb5\x4d\x8e\x5f\x1b\xa9\xee\x90\x6d\x64\x4a\x23\x47\x5a\xce\x28\x9c\xe1\xe4\x0f\x9c\x34\xee\x68\x67\x41\x83\xf2\xc0\x92\x42\xa8\x8e\xff\xf7\x8c\x24\x78\xf4\xba\x9e\xc1\xf8\x77\xb4\xb6\x7f\x58\x73\xab\xbf\x2f\xd4\xf9\x55\x65\x56\x85\xe9\x9f\x58\xb6\x41\x3d\x34\xb8\xac\xd3\x6f\x88\xdc\x5c\x31\x4f\x21\x6b\xe9\x43\xe8\x87\xcb\xe9\x99\x21\x6d\x59\xfb\x7c\x71\x7d\x1b\x65\xb3\x4d\x9a\x59\x7a\xc3\x51\x51\xd4\xdb\x62\xeb\x1a\x04\x2f\x0e\x31\xa3\x8c\x07\x1f\xe0\x69\xac\x9e\x4e\x3d\xae\x2a\x61\x2a\xba\xf7\x87\x8d\xb4\x89\x34\xf0\x12\x15\x7a\x45\x83\x17\x11\x9e\x29\xcb\x3c\x58\xbf\x79\x8f\xdc\xfb\xf8\x92\xff\x84\xef\x5f\xf6\x63\x0e\xf8\x1d\xfc\xb7\x2a\x25\xe3\x4f\xfb\x80\xf7\xa6\xb6\xce\x7e\x04\x5d\xe0\xac\x80\x37\x50\x3c\x7a\x79\x7f\xba\x9c\x5c\x9c\x7d\xb9\x5a\x5e\x9e\x9e\xcf\xbe\x1f\xbc\xbc\xff\x34\x59\x7c\x99\x9d\x7f\x9e\xcc\x27\xd7\x57\xff\xa2\x38\x4f\xe5\xe6\xe4\x0d\x64\x67\x9b\xd3\x49\x2c\x8b\x04\x8e\x67\x44\x00\x78\xa7\x1d\x64\x56\xb0\x2e\xfc\xe9\x1f\xfa\xba\x86\xf6\x75\xc2\x76\xe8\x25\x81\x46\x2c\x51\x06\xee\x0e\x16\xf5\x73\x6f\xf8\x3d\x5a\x18\x78\xaf\x83\x63\xf3\xf2\x69\xa7\x74\x9d\x62\xcf\x1a\xf7\x76\x20\x8c\x06\x7f\x06\x00\x00\xff\xff\x96\x02\xac\xa2\x71\x16\x00\x00")

func templatesJenkinsMultiJobXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsMultiJobXml,
		"templates/jenkins/multi-job.xml",
	)
}

func templatesJenkinsMultiJobXml() (*asset, error) {
	bytes, err := templatesJenkinsMultiJobXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/multi-job.xml", size: 5745, mode: os.FileMode(420), modTime: time.Unix(1444213539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsNormalJobXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\xff\x6f\xe3\x36\xb2\xff\x3d\x7f\x85\x91\xb7\xc0\xbe\x57\xd4\x72\x92\x5d\x74\x5b\xc0\x71\x93\xd8\xce\x6e\x5a\xc7\xf1\xb3\x9d\xed\x1d\x0e\x87\x80\x96\x68\x5b\x0d\x25\x0a\x22\x95\x8d\x6f\x6f\xff\xf7\x1b\x7e\x15\x45\xc9\x76\xd2\x2d\x0a\x2c\x2e\x2d\xd0\x5a\x33\xc3\x21\x39\x9c\xf9\xcc\xf0\x4b\xba\x3f\x3f\x26\xa4\xf5\x80\x73\x16\xd3\xf4\xf4\xf5\x71\x70\xf4\xba\x85\xd3\x90\x46\x71\xba\x3a\x7d\x7d\x3b\xbf\x6c\xff\xf8\xfa\xe7\xde\x41\x37\xcb\xe9\xef\x38\xe4\xbd\x83\x56\xab\x8b\x42\x0e\xc2\xac\x23\x3f\x22\xcc\xc2\x3c\xce\x04\x45\x11\x08\x5d\x4d\x29\x47\x9c\xe6\xad\x90\x20\xc6\x4e\x0f\xd7\x45\xc4\x68\x1a\x70\xc4\xee\x59\x30\xb2\xec\x43\x21\x2e\x34\xa0\x0d\x9b\xd3\x5f\x31\xce\x7a\xed\xe3\x6e\xc7\xf9\x54\xfc\xb4\x48\x1c\x76\xf9\xa5\xb8\x28\xe7\xf1\x12\x46\x34\xa8\x6a\x69\x20\x57\xe5\xc7\x56\x8f\x23\x3d\x76\x95\x77\x3b\xe5\x54\xe4\xf7\x3d\x30\x06\x38\xc3\x69\x04\x16\x8a\x31\xeb\x2d\x11\x61\xb8\xdb\xa9\xd1\x85\x30\x18\x2c\xc3\xa0\x56\x7d\x02\x81\xe1\x20\x8a\xd1\x82\x92\xe0\x77\x9c\xde\xc7\x29\x0b\xb2\x38\xc3\x24\x4e\x71\x30\xd1\x3f\x26\xaa\xcd\xa6\x95\x91\x62\x15\xa7\xa7\x87\x11\x90\x61\x6d\x36\x6d\x23\xda\x56\x9c\xb3\xa3\xe0\xc7\xe0\x9d\x36\x20\xe8\x16\xa6\x1d\xa3\x04\xf7\x3e\x7f\x6e\x05\x73\xfd\xd1\xfa\xf2\xa5\xdb\xb1\x1c\x23\xca\x38\x5a\x61\x2b\x3b\x33\x5f\x52\xb8\xe4\xa9\x21\x77\x9e\x31\x66\xdd\x24\xa4\x49\x10\xd2\x1c\x3d\x6c\x02\xbd\xec\x6a\xc4\x2c\x58\xc5\x7c\x5d\x2c\x82\xf7\xf2\x7f\x13\xe5\x4e\xb5\x09\x2b\xa1\xb3\xe3\xe0\xf8\x24\x38\x2a\xe7\xa7\xbd\xef\x36\x27\x72\xd4\x4a\x07\x7c\xc9\x51\x3b\x4c\x3d\xec\x3f\x36\x08\xb5\xe6\xd5\x75\x83\xde\xe2\x65\x2b\xb8\x62\x57\x69\xcc\x63\x44\x7e\xa1\x0b\xe8\x53\x08\xb2\x30\xf1\xfc\xdb\xe9\x43\x74\x30\xeb\x5f\x1f\xba\xf3\x3a\x3b\x09\x4e\x82\x9f\x0e\xad\x9d\xd2\x65\xbc\xfa\xa8\xe2\xae\x77\x22\xc6\xec\x12\x94\x50\xc1\x70\x3e\xc5\x09\xe5\xb8\x2f\xb9\xcc\x1a\xa4\xa1\xcb\x5b\x4f\xd8\xc8\x0a\x3d\xa5\xdd\x6e\xa7\x23\x69\xb4\xc2\x58\x4b\xcc\xf9\xc9\xda\xa0\x5d\xf3\x90\xba\x8b\x1c\xa5\xe1\x1a\xef\x1c\xe1\x85\x94\x99\x65\x38\x74\xc6\x96\x0a\x77\xfb\xae\x23\x86\x57\xf2\xe3\x65\x8c\x73\x39\xce\xd4\xf5\xdd\xa6\x81\xfa\x4a\xbb\x9d\xea\x50\xba\x51\xcc\xd0\x82\xe0\x59\xb1\x48\x68\x54\x90\x32\x6c\xeb\x0c\xd5\x20\xc7\x61\x01\xab\xf0\xe0\x72\x78\x5e\x40\x8b\x26\x8e\xee\x84\xbe\xc7\x29\xce\x11\x2f\x59\xca\x3e\x05\xd0\x04\x58\xda\x4e\xf7\x0a\x6a\x98\x2a\xf8\x9a\xe6\x37\x79\x9f\x26\x49\xcc\x39\xce\x8d\x82\x3a\x43\x3b\x14\xc1\x28\x95\xab\xdc\x17\xbf\x7e\xa3\xf9\x3d\xcb\x50\xa8\x02\x5b\x31\x95\xe0\x27\x08\xdc\x9b\x82\x5b\x01\xa3\xb8\x46\x3f\xd0\xa1\x57\xa4\xf8\xc2\x98\x54\xcb\x56\x89\xc6\x6c\xc2\x2b\x26\x94\x10\x23\xe5\x50\x94\x48\xbc\x4a\x69\x8e\xc7\x14\xc0\x76\xa3\xc6\x6f\x44\x1b\x38\x36\x04\x66\x6b\x44\x08\xfd\xd4\x27\x34\xb5\x83\xf5\xc9\xda\x09\x8b\x98\x44\xfd\x35\xa5\xe0\xa4\x3b\x82\xb3\xe0\x31\x09\x06\x78\x89\x0a\xc2\x2f\x9c\x26\x87\x1d\xad\x07\x84\xe6\x94\x92\x9e\x96\xe9\x76\x0c\x41\x23\xb9\x5d\xb9\xe5\xca\x74\x43\x62\xc6\x6d\xfb\x1c\x13\x58\xcc\x07\x3c\x47\xf9\x0a\xf3\x41\x9c\x97\x8c\x25\xce\x21\x49\x60\x43\xc0\x8f\x21\x29\x22\x1c\x4d\xf1\xca\xa6\x54\x87\x2c\xa2\x90\x39\xa3\x52\xae\x22\x10\xba\x46\x1c\x26\x28\x26\x86\xca\xee\xe3\x6c\x8e\x56\xda\x6d\xcd\x97\x5e\x84\xb4\xd2\x65\x4f\x43\x9c\x58\x77\xc8\xf9\x30\x58\xf0\x18\xe1\x46\x3e\x01\xd2\x9b\xf4\x25\xbf\xbd\xee\x31\x4c\xdc\x61\xfd\xe9\xf1\xb0\xd7\xe6\xf8\x91\xe3\x94\x95\x75\x49\x07\x46\x24\x7f\xf0\x3c\x5e\xad\xc0\x8c\x4a\x4e\xcf\xf6\x36\x63\x3c\xc7\x28\x01\x3c\x67\x0a\xd0\x41\xd2\xe4\x38\xd3\x22\x98\x62\x51\x18\x61\xe9\x23\x73\x45\x2c\xf3\x28\x20\x4e\xc7\x7e\x15\x5a\x9f\x4e\x29\xd2\xaa\x7e\x27\xe0\xb5\xbe\x94\xcd\xdf\xeb\x1c\xb3\x35\x25\x91\x0f\x8c\xb3\xdb\x7e\x7f\x38\x9b\x55\x71\x10\x98\x34\x87\x02\x0d\x91\xde\x51\xb7\x63\x7e\x96\xcc\x90\x12\xa8\x58\x2e\x46\xb7\x43\x91\x56\x08\xcd\x2b\xbc\x24\x23\x98\xab\x39\x69\xff\xa8\xd2\x2c\xd8\x7a\x83\xea\x76\x9e\x6e\x1f\xeb\x2e\xae\xcd\xb5\x04\x8e\xae\x51\x5a\x40\xec\x6e\xb4\x5f\x81\x1f\xd8\x25\x30\xa5\xa2\xe9\x01\x92\x68\x93\xe1\x7b\xdf\xb5\xf4\xbf\xb0\xce\x4e\x3e\xd1\x08\x33\xa1\x8c\x2b\x14\xf9\x40\xe9\x3d\xab\x82\x8c\xcf\x3c\xa8\xa4\x96\xad\x3d\xbb\x53\x02\xdb\x38\x4e\xa5\x60\xe7\xb7\x1c\x65\x99\x75\x33\x3f\xfd\x21\x70\x4d\xb9\x14\xc1\x39\xfc\xea\x8b\x5f\x17\x4e\x2b\x5b\x27\x58\x39\xa8\xf0\xde\xba\x15\x90\x24\x5e\xa3\x4c\x56\x67\xe0\xea\x79\xa2\xd7\xd6\xd0\x0e\x1a\x33\xe4\x9e\x7e\x9f\x5e\x9a\xea\xc2\x04\x62\x13\xa6\xbe\x28\x44\x75\xff\xdc\x22\x55\x6f\x32\xe6\x18\xbc\x0d\xe2\xbd\xf7\xea\xf3\xc5\xed\xd5\x68\x70\x37\xbe\xbd\xbe\x18\x4e\xbf\xb4\x5f\x7d\x7e\x7f\x35\xbf\x9b\x0e\x3f\x5e\xcd\xae\x6e\xc6\xdf\x13\x9c\xae\xf8\xfa\xf4\x1d\xc4\x8d\xdf\xb2\x8c\xba\x08\x3e\x07\x31\x03\xf2\x46\x5a\x41\x39\x74\x9d\xfe\xf4\x7a\xb6\x3e\xd1\xe6\x15\xe5\x71\x82\xa1\x5e\x4e\xc0\x8a\xc1\xbc\xfc\xdd\xb8\xaa\x8e\x2c\x94\xb6\x3f\x04\x27\x87\x1a\xa3\x6a\x9e\x53\x89\x87\x6f\xaa\xc6\x94\x00\x55\xc3\x29\x48\x78\x32\x3e\x45\x31\xb0\x64\xd5\xca\xef\xa5\x2a\x7d\xa9\x4a\x5f\xaa\xd2\x97\xaa\x54\x2d\x42\xda\xd8\xa5\x5b\x56\x96\x25\xdd\xb7\x9d\x70\xb7\xc0\xbe\x2a\x2e\xca\x33\x87\x19\x41\x0f\x78\x84\x16\x98\xe8\x6c\x00\x2b\x0a\x0e\x89\xa3\x31\x8d\xf4\xe1\x8d\x2b\x01\x31\xe8\xf2\x0f\xbc\x8a\x25\x44\xe9\x94\xa2\xc4\x78\xaa\xf9\x3c\x28\xa1\x28\xf2\x10\x28\x52\xa6\x26\x34\xbc\x57\x33\x58\xe3\x74\x40\x3f\xa5\xaa\x84\x95\x24\xd8\x1e\x98\x46\x7b\xe5\xea\xca\x4c\x79\xbc\x5b\x55\x4d\xea\x40\x65\x36\xc0\x3c\xf0\x59\x15\x29\x76\x56\x1e\xf9\x60\x47\xbd\xff\x8c\x6a\xdf\xad\xf5\xbf\xaa\xd2\xaf\xd7\xf9\x3b\xaa\xfc\x1d\x35\xfe\xf6\x0a\xff\xa9\xf5\xbd\x57\xdd\x3f\xbd\xb6\xaf\x38\x95\xf4\x63\x77\x6b\x05\xd8\xbb\xc2\xad\xe0\xdc\x1c\xbe\xe2\xcc\xaf\xec\x4d\x9c\x84\x34\xdb\x98\x53\xd7\xa0\x0f\x1f\xa6\x8d\x8d\x4c\x57\x02\xaa\xa6\x37\x27\xc1\x71\xed\x40\x50\x1a\x5f\xdb\x58\x04\xa5\xac\x10\xdd\x43\x41\xdb\x60\x19\x13\x91\x95\x84\xbc\xed\x49\xc8\x69\xba\xdd\x88\x49\x6c\x2c\xf7\x75\x1a\xf2\x58\x49\x61\x98\x80\xde\xda\xe1\x76\xe3\xbc\xec\x8e\x47\x5a\x71\xa6\x5b\x1e\x3a\x75\x06\x38\x2e\x59\xa0\xf0\x7e\x4e\x47\x88\xf1\x59\x11\x86\x98\xb1\x65\x41\xf4\xca\x6d\x65\x3b\x55\x94\xf6\xb4\x4b\x39\x91\x19\x17\x49\x7c\xb5\xe9\x01\x46\xbf\x27\x74\x81\xc8\x0c\x73\x0e\x61\x53\xba\xa4\x27\x68\xab\x18\x33\x31\x4b\x89\x28\x64\xbe\x4b\x68\x8b\xf3\x2c\x8f\x53\x6e\xec\xe6\x54\x0d\xdb\x04\x9a\xb1\x71\xeb\x9a\x37\x6d\x1a\xbb\x95\x5b\x83\xd9\x1a\x13\xd7\xfd\x93\x04\xa5\xe0\xb9\xff\xd3\x32\xf5\x7b\x2b\x84\xb9\x89\x65\x49\xd0\x2a\x0e\x0f\xf0\x63\x46\x73\xde\x9a\x5c\x4d\x86\xa3\xab\xf1\x50\xef\x31\x4e\x5f\xfd\x2f\x0e\xd7\xb4\x75\xf8\xea\xb3\xe5\x7c\x1c\x4e\xc5\x76\xe3\xcb\x61\xeb\xdf\xad\xb0\xe0\xad\xf6\xf2\xb8\xd5\x8e\x5e\xb7\x5f\xff\x9f\x51\x22\x76\x25\xb3\x0f\xe7\x4f\x6b\x7c\xa2\x1b\x37\x1f\x1c\x3b\xe5\x3d\xa4\xc8\x16\x44\x20\x86\x46\xed\x35\xca\xa3\x96\xda\xfe\x40\x47\xe5\x61\xcb\x81\x2c\x9c\xd4\x64\x8d\x5d\x5a\xea\x7c\x5b\xcd\xbf\x62\x66\xcf\x52\x3a\xcd\x98\x4d\x6a\x56\x2c\xa0\x1a\x58\xfb\x07\x21\xe7\x69\x94\xd3\x38\x1a\xc1\xf2\x05\x13\x24\x2a\xb7\xd4\xae\x00\xcd\x57\x66\x9f\x14\xc6\x4e\x86\x93\x2d\xee\xee\x88\x68\x23\x1a\x4e\x8c\x6a\x27\xab\x4a\x99\xb6\x10\x11\x7b\x92\x32\x70\xd7\x18\x11\xbe\xde\x38\x27\x27\xe9\x07\x9f\x64\xa1\x69\x14\x8b\x92\x0b\xca\x29\x07\xae\x14\xcd\xe2\x80\xec\x50\xe6\xe3\x7f\xb8\x9d\xfe\x13\x10\xa0\x64\x59\x8f\x56\x95\xd3\x50\xdf\x6f\x95\x3d\x8a\x74\x58\xa4\x37\xe9\x25\x54\x2b\x65\x22\xf4\xa8\x76\xc4\x0c\x4f\x72\xfc\x10\xd3\x82\xc9\xb8\x3e\x67\x53\x53\x40\x39\x85\xe0\x56\x11\x47\xcd\x8c\x8b\x44\xbb\x43\xc9\x16\x01\x47\xc5\x00\x13\x8e\x3e\x22\x52\x94\x65\xb0\x47\xad\x59\x95\x39\xcb\x84\xc8\x86\xc5\xac\x1d\x42\x99\x0b\x18\xfb\xce\x59\xa8\x02\x12\xb8\xe8\x7c\x4e\x39\x22\xe7\x84\x74\x9a\x39\x1f\xe2\xd5\x7a\x0b\x6b\x4c\xf3\x04\x6d\x6b\x37\xa2\x9f\x4a\xce\x52\x1a\xb8\xde\x93\x43\x17\xfd\x28\xf4\x76\x1c\xf6\xb2\xca\x57\x80\xee\xb5\x69\xd0\xa5\x06\xb6\x4b\x9b\x92\xf0\xf5\xe9\x76\x0d\x1a\x2b\xb3\x29\x7d\xb5\x34\x3e\x7c\x16\x24\x1a\x40\x12\x0e\xf9\x75\x75\xc3\xd7\xc4\x2a\x21\x38\x15\x67\x55\x59\xc1\xf1\x18\x7f\xd2\x49\xc1\x23\x56\xe0\x7a\x8a\x19\x25\x0f\x78\xaa\x4b\x7d\x88\xe8\x75\x15\xae\x1b\x05\x6c\x34\x29\x00\xa8\x59\xa6\x04\x06\x08\x2b\x2d\xa3\xb1\xe7\xd9\x18\xb1\xe3\x80\x10\x52\x49\xb4\x28\x56\xcc\xf4\xb7\xa5\x74\x58\x1a\x31\x21\x7f\x01\x3f\xea\xf8\x63\x44\xce\xde\x06\x3f\x1c\xff\x25\xe0\x73\x79\x35\x1e\x5c\xdc\xbe\x9f\xbd\x00\xcf\x57\x02\xcf\x2e\xe8\xd9\x09\x3e\x7b\xe0\x67\x17\x00\x6d\x87\xa0\x3a\x08\x6d\x61\xd5\x7b\xfb\x66\xe0\xc1\x34\x7b\x0e\x3a\xd4\x43\xd5\x43\x06\xb1\xa5\x67\x53\x94\xde\x9f\x87\xa0\x09\x4a\x4d\xeb\xdc\x3e\xd9\x2b\xb5\xb5\xc2\xd2\x5e\xfa\x64\xa0\x4a\xaf\xd5\x96\xdb\x41\x61\x07\xe0\x4c\x92\xa8\x56\xf4\x78\x7a\x33\x21\x92\x44\x75\x88\x01\xc6\xd9\x9b\xe0\xed\xd1\x5f\x82\x2e\x93\xeb\xc1\x0b\xb0\xbc\x00\xcb\x7f\x01\xb0\x54\x43\xb2\x56\x6e\xec\x89\xce\x1d\xb1\x2e\x5e\x45\x59\xb9\x7d\x51\xaf\xb6\x52\xa2\x49\x43\x71\x21\x99\x50\x59\xbc\x7d\xfb\x97\xc4\xfe\xfc\x7c\xf6\xeb\x4b\x59\xf1\x12\xfd\xdf\x5a\xf4\x3f\x79\xd7\xb1\x16\xdb\xb4\xcb\xab\xbf\x5d\x0f\x21\xbe\xdd\x2d\x5b\xaa\xf6\x5b\xf3\x9b\xc1\x4d\xb7\x93\x56\x37\x5f\xc4\x9d\xbb\xba\xa7\xe9\x23\x66\x2e\x80\x1d\x82\x91\x41\xe0\x6f\x2b\xfc\x98\xd9\x1b\x2b\xf3\xdd\x84\x42\xdb\xc0\xa2\x5e\xe4\x54\xab\x96\x86\xc6\xc3\x8a\x80\xd4\xe1\xb5\x69\x86\xb6\x26\x08\xda\x01\x6f\x1f\x63\x4a\xd4\x55\x5d\xd0\x5f\xe3\xf0\x9e\xf1\x0d\xc1\xfb\x60\xee\xa1\x6c\x54\xb6\xaf\x03\x5e\x29\x76\x76\x14\xbc\x0b\x8e\x8f\xdd\x5b\x12\xef\x1a\x98\x15\x59\x06\x7e\x28\x1f\xe2\x98\x23\x52\x46\x73\x28\xf4\xda\x0c\xdb\xbb\x28\x15\xc0\x9b\xcc\xbf\x73\x56\x26\x4d\x79\xbe\x71\x29\x42\x2d\xcf\xc5\xd9\x7f\x68\xa7\x26\x1e\xab\xe6\xfa\x3a\xc0\x91\xdb\x3e\xc1\xb9\xed\xad\xda\x44\x0f\xa4\xa2\x5a\x12\x7c\xa9\x24\x4e\x7b\xc7\x47\xe2\x9f\x6e\x47\xfc\xae\xf1\xd1\xa3\xe2\x1f\x03\x1f\x7e\xfb\x7c\x03\x13\x56\x89\x25\xd4\x24\x99\xf5\x0d\x07\x7f\xab\x8e\x67\x85\x5d\xb7\xdd\xe7\x04\x35\xf7\xd5\x3a\x7c\xdf\xdb\x6b\x36\xf0\xe1\xea\x22\x29\x9b\xd5\x56\xb3\x4b\x64\x5a\x3b\x16\xd3\x25\x6e\x86\x13\x4b\x4a\x8b\x3c\x94\x50\xe0\x97\xfc\x12\xe5\x8a\x47\xf3\x3c\x17\x24\x5c\x96\x79\x9d\xde\x8b\xcc\x3d\xa8\xa5\x58\x2c\x0c\x2b\xaf\x03\x9e\xe5\xf5\xbb\x4a\x08\xcc\x00\xc9\xc4\x99\x30\x6b\x3e\xa5\xfe\xbd\x48\x63\x1e\xfc\x72\x0b\xff\x05\xc4\x83\xb1\x9d\xe7\xe1\x5a\xbc\x8d\xb1\xa1\x24\x25\x20\x33\x39\xdb\x06\x2e\xb5\x0a\x69\x75\x97\x54\xed\x05\x0c\xeb\xf0\x4d\x1b\xf1\xe2\x7c\x44\xd3\xd5\x8c\x47\x31\x75\x9f\xa1\x97\x44\x57\xfd\x00\x71\x64\x27\xe8\xdc\x65\xa8\xaa\x65\x16\x22\x82\x2f\x91\x3c\xfb\x87\x91\x81\xbd\x6a\xe4\xaa\x21\xf7\x4c\x76\x87\x05\xd5\x55\xfa\x36\x38\xc2\xe2\xb2\x18\x3f\x72\xc0\x4c\x2e\x1e\xd3\x47\xf2\xf6\xb8\x8e\x47\x52\xae\x0d\x82\x67\x27\xc1\x9b\x9f\x4a\x4b\xe6\x38\x8c\xb3\x18\x3c\x73\x14\x33\x75\x35\x74\xf3\x29\xc5\xb9\xd4\xa2\x6c\x59\x95\xa8\x82\x58\x91\x63\x73\xd1\xe5\x7a\xf0\xb6\x31\x5a\x9c\x56\x4d\xe4\xe9\x21\xa8\xf0\x5e\xab\x29\x8f\x15\x6d\xbc\x90\xab\x8c\xa4\xe3\xa3\x5d\xb1\x90\x97\x57\xaf\x26\xd3\x9b\x5f\x86\xfd\xf9\xdd\x60\x78\x79\x7e\x3b\x9a\xdf\xcd\x6e\x2f\xc4\x37\x80\x9f\x96\xa8\xb6\x5b\xd0\x68\x53\x6f\xd4\xbf\x19\xcf\x87\x63\x68\x24\xd9\x5b\x86\x01\xc1\xf6\x10\x47\x95\xa9\x3f\xd1\x00\x56\x05\x0b\xc4\x5c\xa6\xbe\x46\x7f\x72\x9d\x7d\x7d\x76\x01\x0e\x50\xb8\x4e\x84\xca\x3a\x34\x38\x12\xb2\x8e\x1c\x51\x7b\x71\xec\x51\xab\x4d\xc4\x25\xa8\x48\x4c\x7e\xa3\x1a\xdd\x37\x50\x46\x36\x73\x5a\xb7\xea\x74\x38\x19\xfd\x7d\x7e\x23\xa6\xa3\x24\xfc\xee\x52\xf0\x61\x2e\xe0\xb3\xa7\xef\x22\x25\x2c\x59\x62\x15\x4d\xab\x1e\x52\x83\xac\x67\x7a\x9d\x01\xc0\x26\x97\xae\x8c\x8c\x83\xce\xce\x9a\x27\xa4\x71\x6c\x66\x7f\x31\x33\xee\x58\x73\x43\x4f\xc0\x6b\xd7\x57\x2a\x7b\xaf\x3e\xcf\xfa\xd3\xab\xc9\xfc\xfb\x16\xd7\x2f\xf8\x4e\x0f\x57\x39\xa5\x0f\x9b\xb6\xe8\x3b\x30\xd4\xc3\x2f\x56\xa3\x69\x7a\xb0\xdf\x25\xba\x62\xf9\x00\x2e\x66\xf2\xcf\x90\xca\x41\x4e\xa6\xc3\xd9\x70\x3c\xb8\x53\x7d\x8b\x1b\x61\x57\xec\xe0\x0f\x78\xd2\xb3\x7d\xa8\xf4\x9e\x7d\x5e\xd3\x65\xe8\x41\xbc\x73\x82\xf2\xda\x56\xe8\x25\xc5\xda\x75\xc7\x4b\x8d\x5d\x5e\xd3\x8c\xa7\x3b\x70\xda\xb9\x22\x6f\x48\x73\x86\x5b\x05\xfc\x56\xf9\xb7\x55\xac\x7e\xcf\x8e\xaa\x77\xc3\x20\x4c\x53\xb2\xb9\x5a\xd6\xae\xbc\x6b\x64\x5b\xf1\x23\x91\xca\x6e\x80\xad\x25\x1d\x82\x1d\x80\x78\x7b\x35\x4c\x32\xbe\xd1\x63\xb3\x0b\x5a\x63\x34\xa5\xb4\xe6\x89\x35\x67\x32\xb0\xab\x7a\xc7\x5c\x79\x42\x8e\x8a\x40\xfe\xf1\x91\x28\x8f\x8a\x84\x6d\x18\xf8\x36\xab\xfe\x11\x52\x20\xaf\x65\xed\xbb\x53\x13\xc9\xd2\x77\xcc\x23\x54\x1d\xb4\x36\xe3\xc9\x26\xb5\xf7\xb5\xc7\xc1\xdb\xe0\x8d\x5f\x8b\xef\xc8\x5d\xfa\xd1\xe8\x14\x36\xf2\xa2\x3e\x57\x3d\xa2\x1c\x25\xb0\x0b\xcc\x99\xf7\x8e\xd4\x7d\x0c\x65\x9c\x7f\x01\x9d\xff\x7f\x81\x0b\x1c\xa9\xd7\x70\xcc\x09\x80\x3a\x6f\x3b\x9c\xed\x1e\x88\x8f\x62\xee\xc6\xd4\x3c\x2b\x72\xde\x7c\x28\x67\xab\xad\x87\xd8\x79\x36\x4a\xeb\x85\xff\x73\x57\x6a\x8f\xa7\x54\x7c\xc4\x3f\xc3\x32\x13\x8f\xff\x85\xa3\x4a\x1f\xbe\x17\x54\x24\xdb\x5a\x54\x5c\xaf\xff\xf4\x0c\x27\xd8\xdb\x5d\x43\xb5\x5f\x53\xfa\xa7\x7b\xd7\x57\x7a\xd8\x57\x78\x59\xa3\xa7\x49\x62\xe6\xbe\xf0\x72\x56\xd1\x3e\x2e\x62\xbe\x91\xa2\x58\xec\x25\xca\xe7\x5c\x25\xc9\x15\xd4\x46\xff\x2d\xe6\xeb\x31\x75\x06\xa4\x67\xba\x8d\xbd\x3d\x9c\x9e\xb9\xa4\xde\x6c\x9f\xaf\xae\xee\xec\x60\x12\xe7\x79\x89\xf3\xfa\xea\x3f\x01\x00\x00\xff\xff\x04\xce\x9e\x30\x5f\x3c\x00\x00")

func templatesJenkinsNormalJobXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsNormalJobXml,
		"templates/jenkins/normal-job.xml",
	)
}

func templatesJenkinsNormalJobXml() (*asset, error) {
	bytes, err := templatesJenkinsNormalJobXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/normal-job.xml", size: 15455, mode: os.FileMode(420), modTime: time.Unix(1444215995, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsPipelineXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x53\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\x08\xa1\x57\x53\x4e\x0f\x45\x0e\x34\xd3\xc2\x6d\x80\x16\x7d\xa4\x68\xda\x6b\xc1\x48\x6b\x9a\x2d\xb5\x24\xf8\xb0\x1d\x04\xf9\xf7\xae\x1e\x4c\xa2\xf4\x01\x04\x3d\x49\x9c\x99\x9d\x9d\xd5\x52\xe2\xec\xd8\x59\xb6\x87\x10\x8d\xc3\x75\x75\xc2\x57\x15\x03\x6c\x5c\x6b\x50\xaf\xab\xaf\x97\xe7\xcb\xd3\xea\x4c\x2e\x44\x04\xde\x1a\x75\xe5\x2c\xff\x01\xf8\xd3\x60\xe4\xde\x78\xb0\x06\x81\xbf\xa6\x07\x19\x5c\x5f\x4c\xc0\x37\x03\x07\xe6\x6d\xd6\x86\x0c\xdb\x89\x5c\x16\xf9\x72\x64\x5e\xae\xf8\x29\x7f\x51\xc9\x05\x63\x02\x55\x07\xf2\xe6\x86\xf1\x8f\xf4\xc2\x6e\x6f\x45\x3d\x20\x3d\xb5\x35\x36\x41\x78\x73\x84\x26\x27\x17\xa2\xdc\x2a\x1b\x41\xd4\x8f\xe1\x7b\xe9\xe7\x0c\x19\xe6\xb2\x11\xea\x25\x3e\x38\x0f\x21\x19\x88\xac\xb1\x2a\xc6\x75\xb5\xcb\x6d\x74\xc8\x3b\x47\x39\x79\x1f\xfc\xd9\xc5\xa8\xb9\x7e\x6f\x62\xaa\xea\xa1\xac\x71\x9d\x77\x08\x98\xbe\x78\x68\x86\x66\x04\x3e\xf1\x83\x7c\x5f\x6e\x1e\xba\x8c\x26\xff\x9c\x7d\xa0\xb7\x26\xc4\xf4\xce\x5d\xcd\x25\x77\xe8\x18\xa5\xfe\xff\x2c\xa2\xfe\x7d\x48\x81\xee\xd3\xb6\xd4\x45\x79\xb2\xa2\x6c\x33\xa4\xd7\xc4\x9d\x3b\xbc\xd2\x3a\x80\x56\x09\xda\xc2\x95\x05\xfc\x85\x2d\xe6\x1b\x67\x73\x87\x64\x3d\x3a\x97\xe3\xe0\xeb\x68\x4f\xa8\x25\x52\x26\xf2\x99\x4e\x77\x1d\xf7\x2a\xa9\xfb\xeb\xf0\x10\xea\x25\xd9\xb7\xd4\xef\x2d\xd2\xf2\xf7\xca\xca\xe7\xa2\x7e\x84\x14\x9f\xcd\x4e\xa1\x86\x99\x4f\x81\x7a\x89\xb2\xd6\x1d\x3e\x28\xcc\xca\x5e\x06\xa3\x35\xfd\x25\x32\x85\x4c\xca\x3f\x31\x7d\x05\x4d\x0a\x47\x7f\x3e\xed\x27\xd2\xfd\x79\xf2\x76\xe4\xe2\x57\x00\x00\x00\xff\xff\x5f\x40\xf2\x3f\x94\x03\x00\x00")

func templatesJenkinsPipelineXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsPipelineXml,
		"templates/jenkins/pipeline.xml",
	)
}

func templatesJenkinsPipelineXml() (*asset, error) {
	bytes, err := templatesJenkinsPipelineXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/pipeline.xml", size: 916, mode: os.FileMode(420), modTime: time.Unix(1443542096, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/jenkins/multi-job.xml":  templatesJenkinsMultiJobXml,
	"templates/jenkins/normal-job.xml": templatesJenkinsNormalJobXml,
	"templates/jenkins/pipeline.xml":   templatesJenkinsPipelineXml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"jenkins": &bintree{nil, map[string]*bintree{
			"multi-job.xml":  &bintree{templatesJenkinsMultiJobXml, map[string]*bintree{}},
			"normal-job.xml": &bintree{templatesJenkinsNormalJobXml, map[string]*bintree{}},
			"pipeline.xml":   &bintree{templatesJenkinsPipelineXml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
