// Code generated by go-bindata.
// sources:
// templates/jenkins/multi-job.xml
// templates/jenkins/normal-job.xml
// templates/jenkins/pipeline.xml
// DO NOT EDIT!

package pipeline

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesJenkinsMultiJobXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x58\xeb\x6f\xdb\x38\x12\xff\x5c\xff\x15\x46\x50\x20\x40\x71\x91\x93\xdc\x5d\xdb\x03\x14\xb7\x8d\x93\xf6\xbc\xc8\xc3\xeb\x47\xf3\xb1\xa0\x25\x5a\x66\x4d\x89\x02\x49\xa5\xf1\x06\xfd\xdf\x77\xf8\x92\xa8\x87\x1b\xa7\x5b\x2c\x36\xf9\x60\x69\x5e\x1c\xce\x0c\x7f\x33\x54\xf8\xee\x21\xa5\xfd\x7b\xcc\x05\x61\xd9\xd9\xe1\x49\x70\x7c\xd8\xc7\x59\xc4\x62\x92\x25\x67\x87\x8b\xf9\xc7\xa3\xb7\x87\xef\x86\xbd\x30\x62\x69\x20\xc9\x06\xd1\xe0\x2b\xce\x36\x24\x13\x41\x4e\x8b\x44\xfd\xa6\x05\x95\xe4\x2b\x5b\x06\xd7\xea\xe1\x37\xb6\x9c\x70\xf6\x15\x47\xb2\x6f\x04\xce\x0e\xac\xc2\x91\x13\x3c\x32\x8c\xf7\x27\xc1\xc9\x7f\x0f\x86\xbd\x7e\x3f\x44\x91\x84\xd5\xc5\x40\xbf\xc4\x58\x44\x9c\xe4\x8a\x32\x0c\x07\xfe\x9b\xe2\x6e\x30\xce\x2f\x70\x8e\xb3\x18\xbc\x24\x58\x0c\x57\x88\x0a\x1c\x0e\x5a\x74\x25\x9c\x73\x96\x63\x2e\xed\x2b\x10\x04\x0e\x62\x82\x96\xcc\xdb\x05\xc9\x31\x25\x19\x0e\x26\xf6\x61\x62\x74\xb6\xa5\xfb\x31\x90\x21\x3e\xdb\x23\x27\xea\xfc\x3f\x0e\xde\x06\xaf\x0f\x8c\x65\xb0\x2d\x91\xd8\xdc\xa0\x14\x0f\x73\xc4\x11\xa5\x98\xf6\xf1\x03\x8e\x0a\xe5\x79\x38\x28\x99\x4e\x5a\x48\x94\x60\x4d\x79\x7c\xec\x07\x33\xf7\xd6\xff\xfe\x3d\x1c\x54\x3c\xe3\xf5\xe0\x19\x6e\x5b\x15\x95\xae\x88\x71\x74\xbf\x0d\xd6\x45\x2c\x58\x56\xa6\x2b\x21\x72\x5d\x2c\x83\x4f\xfa\xc7\xa6\xaa\xb5\x67\x23\xa4\x32\x74\x1a\x1c\x57\x5b\xcc\x8d\xf8\x82\x53\xed\xb5\xb1\x01\x6f\xda\x6b\x8f\x69\xdd\xfe\x39\x27\x74\xe6\x06\xf5\xd4\x85\x22\x4a\xfb\x11\x45\x42\x9c\x1d\xb4\x4d\x29\x3b\xb3\xd1\xf5\x81\xef\xfe\xfb\xd3\xe0\x3f\xda\xf5\x17\x2f\x20\x18\xd9\x8a\x24\x9f\x4d\x8d\x0f\x4f\x95\x63\x3e\x41\x89\x14\x02\xf3\x29\x4e\x99\xc4\x23\xcd\x13\x8a\xfa\x22\xec\x58\x6b\xd1\x90\xd4\x82\x60\xa0\x8a\xc9\x62\x7a\xa5\x03\xa2\x48\xda\xca\x60\x4f\x33\xa0\xd2\xe5\x46\xb8\xe4\x28\x8b\xd6\x78\xb7\x4f\xe7\x5a\x60\x96\xe3\xc8\x7a\x93\xa9\xe2\x79\x35\x50\x0e\x55\x3c\xb2\x22\x98\x6b\xcf\x34\xbb\xb7\xc3\xb3\xba\xb1\x70\xe0\xaf\x1e\xc6\x44\xa0\x25\xc5\xb3\x62\x99\xb2\xb8\xa0\xd5\xf9\x6b\x33\x4c\x11\x70\x38\x02\x10\xe6\x7b\x9f\x23\x79\x01\x1a\x5d\x1c\xa3\x13\xb3\x4f\x38\xc3\x1c\xc9\x8a\x65\xc2\x51\x00\x4d\x01\x45\xb9\xe8\x93\x82\xc6\x20\x2a\xe4\x9a\xf1\x5b\x3e\x62\x69\x4a\xa4\xc4\xdc\x19\x68\x33\xec\xf1\xa1\x18\x65\x3a\x9f\x23\xf5\x74\xc7\xf8\x46\xe4\x28\x32\xc7\xd3\x30\x8d\xe0\x37\x38\x7e\xb7\x85\x2c\x05\x9c\xe1\x16\xbd\x67\x0f\x50\x91\xe1\x73\x17\x50\x2b\x5b\x27\xba\xb0\xa9\x22\x98\x30\x4a\x9d\x94\x47\x31\x22\x24\xc9\x18\xc7\x37\x4c\x92\xd5\xd6\xf8\xef\x44\x3b\x38\x46\x05\xca\x6b\xb6\x06\x6c\x62\xdf\x46\x94\x65\xa5\xb3\x4d\xb2\x11\x5e\x16\x84\xc6\xa3\x35\x63\x50\x93\x3f\x38\x7b\x00\x70\x34\xb8\xc0\x2b\x04\xe8\x7e\xee\xa9\x1c\x0c\xac\x1d\x10\x9a\x33\x46\x87\x56\x26\x1c\x38\x82\x85\xe4\x32\x73\xab\xc4\x2d\x43\x89\x90\xa5\x3e\xc7\x14\x92\x79\x8f\xe7\x88\x27\x58\x5e\x10\x5e\x31\x56\x98\x03\xda\x63\x47\xc0\x0f\x11\x2d\x62\x1c\x4f\x71\x52\xb6\x13\x8f\xac\x8e\x9c\xf0\xbc\x32\xa5\xa2\x70\xb6\x45\xbc\x4c\x11\xa1\x8e\x2a\x36\x24\x9f\xa3\xc4\x96\xad\x7b\xb3\xbc\x28\xf5\x0d\xfc\xf2\xca\x7d\x32\x3a\xf8\x41\xe2\x4c\x54\x1a\xfd\x3e\x54\x2d\x59\xf5\x83\x2b\x16\x21\x6a\xaa\x0a\xaa\xd6\x21\x78\x47\x02\x2b\x0b\x01\x49\x73\xea\x2b\x3a\x93\xa0\x48\x3d\xea\x2e\x58\xa1\x6d\xcd\x4e\x84\xd9\x63\x45\x58\x02\x5a\xb9\x73\x3c\x1c\xf8\xdb\xec\x01\x28\x41\xdc\xe1\x41\x9d\x54\x94\x4d\x19\x4a\x6d\x72\xdc\x9b\x9e\x23\x0c\x22\xc5\x0d\x84\x8a\x35\x73\x09\xbe\x6e\x74\xb9\xde\xad\x71\x76\xc1\xbe\x65\x42\x72\x8c\x52\x4d\x82\xd1\xc7\x29\x3d\x29\xd7\x36\xb6\xc8\xf7\x31\xd5\x92\x52\x86\x24\x27\x49\x02\x45\x6a\xa2\x60\x13\x39\x16\xe3\x8c\x48\x82\x28\x8c\x56\x65\x40\x6c\x54\x9d\x42\x00\xed\x6f\x6e\x9e\xab\x09\x43\x21\xf8\xab\xbe\xfd\x87\x90\x69\x44\xb7\x4c\x03\x11\x13\x26\xa4\x01\x88\xff\x33\xb6\x11\x75\xfc\x68\x32\x7b\xb5\x7c\xee\x5c\xd9\xcf\x1c\xcc\x3d\xde\x8e\x54\x1f\x06\xc8\x87\x23\x6b\x80\xc2\x2d\xd7\x24\xf7\x1c\xf8\x94\x91\x78\xce\xf4\x79\x6e\x34\xab\x99\x65\x8d\x84\x19\xa6\xf4\xd3\x31\xe0\x6d\x49\xa9\xc9\x80\xae\xa8\x0a\x1e\xb6\x01\x05\x99\x60\x98\xcd\x8a\xa5\x62\x55\x87\x68\x3f\x7f\x26\xce\xa6\xeb\xef\xfd\xf2\x2f\x04\x7e\x39\xfa\xe9\x93\xe3\x08\xbe\x90\x8a\xc9\x04\x46\xc9\xd4\x35\x4c\x8f\xe0\xcb\xe1\x87\x1c\xf0\x36\x86\x3c\xb8\x80\x7a\x14\x5f\xd0\x1e\x00\xf0\xa9\x71\x24\x14\xc5\x17\x84\x01\x56\x40\x49\x4e\x55\x4b\x9e\x20\xb9\x86\x31\xbc\x45\xf2\xe5\x53\xf4\x30\xc5\x90\x69\xe8\x5e\x10\x5e\xef\xad\xe6\x66\xa6\x96\x52\x9c\xed\x4c\x2a\xe0\x4b\xb6\xa5\xbf\x1d\xac\xb6\x2a\xc4\x31\x26\xfa\x1e\x50\x53\xab\xc8\xbe\x0a\x0c\xcb\x5c\x7e\xa0\xea\xcc\xd8\xe8\xf9\x94\x5a\x98\x4b\x7d\x5d\x89\x1d\xb6\x36\x84\x52\x9d\xcd\xdb\x0c\x94\xa7\x58\x40\x8a\xab\x55\x3f\x7e\x18\x5f\x2d\xa6\x97\x70\x03\xf9\xa1\x98\x6f\x50\x17\xf7\x6d\x46\xb7\xe3\x15\xe4\x68\xb4\x56\x75\x56\x1e\xbe\x6e\x66\xc3\x63\x33\x1a\xf6\xbd\xbf\x2e\x64\x87\x59\x74\x8a\xef\x89\x82\x4d\x7d\x2a\x74\xf1\x60\x98\x72\x44\xe7\xa4\x5c\x33\x07\x15\xbe\x84\x6b\xc5\xef\x05\x2e\x70\x6c\x60\x40\x54\x07\xb6\x83\x57\x57\xef\x82\xfd\xdd\xee\xd4\xb6\x37\x68\xed\xcf\xdc\x24\x7e\xf6\xbc\xd5\x5b\x89\xbe\x5b\x34\x8f\xbb\x0a\xa9\x24\x59\xa1\x5b\x6f\x95\xb3\xd9\x62\x34\xba\x9c\xcd\x3e\x2e\xae\xb4\x53\x1d\x12\xbd\xbd\xdd\xeb\x80\x27\x9b\x6b\x87\x8e\x79\xb1\x84\xce\xbe\x6e\xc2\xff\x0d\xb4\xbe\x6b\x04\x2b\x53\x1f\x85\x60\xa4\x0d\xf4\xf5\x0a\x50\x93\x17\xa9\xd8\x0a\x89\x53\x51\xbf\x66\x05\xda\x7c\x79\x53\xb4\x50\x1c\x98\xd8\x5b\xaa\x85\xee\xb2\x1e\xb4\x4a\xeb\xa6\x7b\x02\x15\xf2\xef\x03\x3f\x5a\x8d\x04\xfd\xca\xe2\xfb\x0b\xa5\xf7\x93\x65\xd7\x2a\x39\x98\xe3\x5c\xa3\xb7\x97\x53\x85\xce\x42\xe3\x75\x2b\x1f\x6a\x98\xeb\x94\xb6\xc5\xf1\x6b\x33\xd5\x6e\xb2\xb5\x4a\xa9\xd5\x48\x23\x18\xb9\xdb\x38\xf9\x03\xc7\xb5\x35\x9a\x55\x50\x93\x3c\xb2\xa2\x90\xaa\xd3\xff\x3d\xa3\x08\x9e\x5c\xae\xa3\x31\xfe\x1d\xd0\xf6\x0f\x03\xb7\xea\xb3\x4a\x55\x5f\x65\x65\x95\x9c\xee\x8e\x65\x01\x6a\x57\xe3\xb2\x41\xbf\x23\x72\x7d\xc3\x3c\x87\xec\x4e\x77\xb1\x77\x1f\xa7\x67\xa6\xb4\xb1\xdb\xe7\x9b\xeb\x9a\x28\xeb\x30\x69\x7a\xe9\x1d\x47\x79\x5e\x4d\x8b\x8d\x65\x10\x5c\x1c\x22\x46\x19\x0f\x3e\xc0\xd3\x48\x3d\x9d\x7b\x5a\x65\xc1\x94\x72\xef\x8f\x6b\x65\x13\x6a\xe2\x35\xca\xf5\x88\x06\x17\x11\x9e\xaa\x9d\x79\xb4\xee\xed\x3d\xb1\xee\xd3\x43\xfe\x1e\x9f\xfd\xec\x37\x2c\x88\x3b\xc4\x6f\x59\x48\xc6\xf7\xfb\x6e\xf9\xa6\xda\x9d\xfd\xf6\x3b\xc7\x70\x15\x83\xd9\x6b\xf8\xf2\xf1\x7c\x31\xbe\xba\xf8\x72\xb3\xb8\x3e\xbf\x9c\x7e\x3f\x7a\xf9\xf8\x69\x3c\xff\x32\xbd\xfc\x3c\x9e\x8d\x6f\x6f\xfe\x45\x71\x96\xc8\xf5\xd9\x1b\xa8\xce\xa6\xa6\xb3\x58\xe4\x31\xbc\x5e\x10\x01\xe4\xad\x0e\x90\x19\xc1\xda\xf4\xfd\xbf\x6f\xb6\x37\xda\x85\x84\xcd\xd4\x4b\x02\x40\x2c\x51\x0a\xe1\x0e\xe6\xd5\x73\x67\xfa\x3d\x59\x68\x78\xaf\x83\x53\x73\xc7\xb6\x5d\xba\x2a\xb1\x67\xb5\x7b\xdb\x10\x86\xbd\x3f\x03\x00\x00\xff\xff\xba\x0c\x6b\x22\x68\x17\x00\x00")

func templatesJenkinsMultiJobXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsMultiJobXml,
		"templates/jenkins/multi-job.xml",
	)
}

func templatesJenkinsMultiJobXml() (*asset, error) {
	bytes, err := templatesJenkinsMultiJobXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/multi-job.xml", size: 5992, mode: os.FileMode(420), modTime: time.Unix(1444898661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsNormalJobXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5b\xff\x6f\xdb\xb6\xb6\xff\x3d\x7f\x45\x10\x14\x28\x30\x2c\x72\xd3\xf6\xad\x1b\xe0\x7a\x4d\x6c\xa7\xcd\xe6\x38\x7e\xb6\xd3\xbd\x87\x8b\x8b\x80\x96\x68\x5b\x0b\x25\x0a\x22\x95\xc4\xb7\xd8\xff\x7e\x0f\xbf\x8a\xa4\x64\x3b\x59\x87\x01\xc5\xb2\x01\x9b\x75\xbe\x91\x3c\x3c\xfc\xf0\x1c\x92\xe9\xfe\xfc\x90\x91\xc3\x3b\x5c\xb2\x94\xe6\xef\x5f\x9e\x44\xaf\x5e\x1e\xe2\x3c\xa6\x49\x9a\xaf\xde\xbf\xbc\x9e\x9f\x1f\xff\xf8\xf2\xe7\xde\x41\xb7\x28\xe9\xef\x38\xe6\xbd\x83\xc3\xc3\x2e\x8a\x39\x08\xb3\x8e\xfc\x48\x30\x8b\xcb\xb4\x10\x14\x45\x20\x74\x35\xa5\x1c\x71\x5a\x1e\xc6\x04\x31\xf6\xfe\x68\x5d\x25\x8c\xe6\x11\x47\xec\x96\x45\x23\xcb\x3e\x12\xe2\xc2\x02\xda\xb0\x39\xfd\x15\xe3\xa2\x77\x7c\xd2\xed\x38\x9f\x8a\x9f\x57\x99\xc3\xae\xbf\x14\x17\x95\x3c\x5d\x42\x8f\x06\xbe\x95\x16\xb2\x2f\x3f\xb6\x76\x1c\xe9\xb1\x6b\xbc\xdb\xa9\x87\x22\xbf\x6f\x81\x31\xc0\x05\xce\x13\xf0\x50\x8a\x59\x6f\x89\x08\xc3\xdd\x4e\x83\x2e\x84\xc1\x61\x05\x06\xb3\xea\x13\x08\x0c\x47\x49\x8a\x16\x94\x44\xbf\xe3\xfc\x36\xcd\x59\x54\xa4\x05\x26\x69\x8e\xa3\x89\xfe\x31\x51\x3a\x9b\xc3\x82\x54\xab\x34\x7f\x7f\x94\x00\x19\xe6\x66\x73\x6c\x44\x8f\x15\xe7\xc3\xab\xe8\xc7\xe8\x9d\x76\x20\xd8\x16\xae\x1d\xa3\x0c\xf7\xbe\x7c\x39\x8c\xe6\xfa\xe3\xf0\x8f\x3f\xba\x1d\xcb\x31\xa2\x8c\xa3\x15\xb6\xb2\x33\xf3\x25\x85\x6b\x9e\xea\x72\xe7\x09\x7d\xd6\x2a\x31\xcd\xa2\x98\x96\xe8\x6e\x13\xe9\x69\x57\x3d\x66\xd1\x2a\xe5\xeb\x6a\x11\x7d\x94\xff\x9b\xa8\x70\x6a\x0c\x58\x09\x7d\x38\x89\x4e\x5e\x47\xaf\xea\xf1\xe9\xe8\xbb\x2e\x89\xec\xb5\xb2\x01\x5f\xb2\xd7\x0e\x53\x77\xfb\xcf\x75\x42\xcd\xb9\x3f\x6f\xd0\x5a\xba\x3c\x8c\x2e\xd8\x45\x9e\xf2\x14\x91\x5f\xe8\x02\xda\x14\x82\x2c\xce\x82\xf8\x76\xda\x10\x0d\xcc\xfa\x97\x47\xee\xb8\x3e\xbc\x8e\x5e\x47\x3f\x1d\x59\x3f\xe5\xcb\x74\xf5\x59\xad\xbb\xde\x6b\xd1\x67\x97\xa0\x84\x2a\x86\xcb\x29\xce\x28\xc7\x7d\xc9\x65\xd6\x21\x2d\x4d\x5e\x07\xc2\x46\x56\xd8\xa9\xfd\x76\x3d\x1d\x49\xa7\x55\xc6\x5b\x62\xcc\x8f\xb6\x06\x7a\xed\x5d\xea\x2e\x4a\x94\xc7\x6b\xbc\xb3\x87\x67\x52\x66\x56\xe0\xd8\xe9\x5b\x2e\xc2\xed\xbb\x8e\xe8\x5e\xcd\x4f\x97\x29\x2e\x65\x3f\x73\x37\x76\xdb\x3a\x1a\x1a\xed\x76\xfc\xae\x74\x93\x94\xa1\x05\xc1\xb3\x6a\x91\xd1\xa4\x22\xf5\xb2\x6d\x32\x94\x42\x89\xe3\x0a\x66\xe1\xce\xe5\xf0\xb2\x02\x8d\x36\x8e\x6e\x84\x7e\xc4\x39\x2e\x11\xaf\x59\xca\x3f\x15\xd0\x04\x58\xda\x46\xf7\x0a\x6a\x98\xaa\xf8\x9a\x96\x57\x65\x9f\x66\x59\xca\x39\x2e\x8d\x81\x26\x43\x07\x14\xc1\x28\x97\xb3\xdc\x17\xbf\x7e\xa3\xe5\x2d\x2b\x50\xac\x16\xb6\x62\x2a\xc1\x7b\x58\xb8\x57\x15\xb7\x02\xc6\x70\x83\x7e\xa0\x97\x5e\x95\xe3\x33\xe3\x52\x2d\xeb\x13\x8d\xdb\x44\x54\x4c\x28\x21\x46\xca\xa1\x28\x91\x74\x95\xd3\x12\x8f\x29\x80\xed\x46\xf5\xdf\x88\xb6\x70\xec\x12\x98\xad\x11\x21\xf4\xbe\x4f\x68\x6e\x3b\x1b\x92\x75\x10\x56\x29\x49\xfa\x6b\x4a\x21\x48\x77\x2c\xce\x8a\xa7\x24\x1a\xe0\x25\xaa\x08\x3f\x73\x54\x8e\x3a\xda\x0e\x08\xcd\x29\x25\x3d\x2d\xd3\xed\x18\x82\x46\x72\x3b\x73\xcb\x95\x69\x86\xa4\x8c\x5b\xfd\x12\x13\x98\xcc\x3b\x3c\x47\xe5\x0a\xf3\x41\x5a\xd6\x8c\x25\x2e\x61\x93\xc0\x86\x80\x1f\x62\x52\x25\x38\x99\xe2\x95\xdd\x52\x1d\xb2\x58\x85\xcc\xe9\x95\x0a\x15\x81\xd0\x0d\xe2\x30\x43\x29\x31\x54\x76\x9b\x16\x73\xb4\xd2\x61\x6b\xbe\xf4\x24\xe4\x5e\x93\x3d\x0d\x71\x62\xde\x61\xcf\x87\xce\x42\xc4\x88\x30\x0a\x09\xb0\xbd\xc9\x58\x0a\xf5\x75\x8b\x71\xe6\x76\xeb\x2f\x5f\x0f\x7b\x7d\x8e\x1f\x38\xce\x59\xad\x61\xb1\x7b\x44\x63\x44\x54\xac\x2a\xe8\xde\x06\x4f\xb5\x85\x28\xcd\x0a\xe2\x2a\x3a\x78\x45\x1c\xea\x36\xd0\x22\x4d\xcd\x56\xec\x7a\x44\x8b\xd6\xf1\x1a\xdc\xfc\x61\xc2\xdc\xc6\x99\xfc\xc1\xcb\x74\xb5\x82\x60\x51\x7a\x7a\xe8\xd7\x05\xe3\x25\x46\x19\xec\x5a\xcc\x9a\x30\x3b\xb9\xd1\x88\xa6\x58\xa4\x7f\x58\xae\x84\xb9\x22\xd6\xd9\x02\x8c\xab\x63\xbf\x2a\x6d\x4f\x6f\x9c\x32\x76\xc2\x46\x60\x6d\x86\x52\x36\x4b\x59\x97\x98\xad\x29\x49\x42\xf8\x9f\x5d\xf7\xfb\xc3\xd9\xcc\x47\x7b\x60\xd2\x12\xd2\x50\x44\x7a\xaf\xba\x1d\xf3\xb3\x66\xc6\x94\x40\x5e\x76\x36\xba\x1e\x8a\xcd\x93\xd0\xd2\xe3\x81\x3b\x31\x57\x63\xd2\xab\xc0\xa7\xd9\x69\x09\x3a\xd5\xed\x3c\xde\x3f\xfe\xdc\x68\x9f\x6b\x09\x9c\x5c\xa2\xbc\x02\x84\xda\xe8\xd5\x03\xd1\x6e\xa7\xc0\x24\xc4\xa6\x05\x48\x15\xda\x1c\xdf\xfb\xee\x50\xff\x0b\xf3\xec\xec\x9a\x1a\x47\x27\x94\x71\x85\x95\x9f\x28\xbd\x65\x3e\x94\x86\xcc\x03\x2f\x08\xb7\xb6\xec\x0e\x09\x7c\xe3\x04\x95\x02\xd7\xdf\x4a\x54\x14\x36\xcc\xc2\x55\x84\x20\x32\xe5\x54\x44\xa7\xf0\xab\x2f\x7e\x9d\x39\x5a\x36\x1b\xb2\x72\x90\xc7\xbe\x75\xf3\x3c\x49\xbc\x44\x85\xcc\x41\x21\xd2\xcb\x4c\xcf\xad\xa1\x1d\xb4\xae\xa5\x3d\xed\x3e\x3e\x01\xd7\xe9\x17\x20\x10\x0c\x7d\x51\x89\x1a\xe6\xa9\xa9\xb8\x2e\xa5\xe6\x18\xa2\x0d\x50\xad\xf7\xe2\xcb\xd9\xf5\xc5\x68\x70\x33\xbe\xbe\x3c\x1b\x4e\xff\x38\x7e\xf1\xe5\xe3\xc5\xfc\x66\x3a\xfc\x7c\x31\xbb\xb8\x1a\x7f\x4f\x70\xbe\xe2\xeb\xf7\xef\x60\xdd\x84\x9a\xf5\xaa\x4b\xe0\x73\x90\x32\x20\x6f\xa4\x17\x54\x40\x37\xe9\x8f\xcf\xda\x9b\x03\x6d\x9f\x51\x9e\x66\x18\xaa\x82\x0c\xbc\x18\xcd\xeb\xdf\xad\xb3\xea\xc8\x42\x02\xff\x43\xf4\x5a\x61\x33\x24\x64\x61\xe4\x78\xeb\xe1\x9b\xca\xa4\x25\x40\x35\x70\x0a\xb6\x75\xb9\x3e\x45\xca\xb3\x64\x7e\x7e\xfb\x9c\x7b\x3f\xe7\xde\xcf\xb9\xf7\x73\xee\xad\x26\x21\x6f\x6d\x32\x48\x9e\xff\xe1\xa9\xec\xb7\x9d\x68\x6c\xd9\xee\xcc\xc0\xf5\x4c\xce\x60\xf1\x8a\x28\xd6\x5b\xa0\x9f\xbd\x37\xf2\x43\xb1\xf3\x96\xad\x19\xa2\x3c\xc3\xab\x6d\xb9\x79\x62\x33\xd9\x0b\xcd\xf8\x09\x5e\x5b\x2f\x09\xba\xc3\x23\xb4\xc0\x44\xf7\x13\x96\x1b\xa0\x05\x4e\xc6\x34\xd1\xe7\x87\xae\x04\x00\xa4\xcb\x0f\x6c\x76\x63\x94\x4f\x29\xca\x0c\x8c\x98\xcf\x83\x7a\x9f\x48\x82\xed\x21\x51\xf1\x00\x31\x78\xab\xdc\xbc\xc6\xf9\x80\xde\xe7\xaa\xbe\x90\x24\xa8\x50\x8d\xd2\x5e\xb9\xa6\x31\x53\xbb\xec\x36\xd5\x90\x3a\x50\x69\x07\x6c\x48\x00\x28\x0a\xc6\xec\xa8\x02\xf2\xc1\x8e\x62\xec\x09\xa5\x98\x5b\x88\x7d\x55\x19\xd6\x2c\xc2\x76\x94\x60\x3b\x0a\xb0\xed\xe5\xd7\x63\x8b\xaf\xa0\xf4\x7a\x7c\xe1\xe5\x05\x95\x5c\x6c\x6e\xdd\x0b\x90\xb3\xc2\x87\xd1\xa9\x39\xff\xc7\x45\x58\x76\x99\xc5\x1c\xd3\x62\x63\x0e\xfe\xa3\x3e\x7c\x18\x1d\x0b\x1f\xae\x04\xa4\xb4\x6f\x5e\x47\x27\x8d\x33\x69\xe9\x7c\xed\x63\x81\x1c\x32\x7d\x77\xcf\xa5\xad\xc2\x32\x25\x22\x65\x10\xf2\xb6\x25\x21\xa7\xe9\xb6\x4a\x96\x1b\x57\x5d\x74\xeb\xfd\x88\xd5\x14\x86\x09\xd8\x6d\xdc\xaf\xb4\x8e\xcb\x96\xa3\xd2\x8b\x33\xad\x79\xe4\xec\x02\x10\xb8\x64\x81\xe2\xdb\x39\x1d\x21\xc6\x67\x55\x1c\x63\xc6\x96\x15\xd1\x33\xb7\x95\xed\xa4\xb8\x3a\xd2\xce\xe5\x40\x66\x5c\x64\x58\xab\x4d\x0f\x36\xd0\x8f\x84\x2e\x10\x99\x61\xce\x61\xd9\xd4\x21\x19\x08\xda\x7d\xc5\x0c\xcc\x52\x12\x0a\x69\xc9\x39\xe8\xe2\xb2\x28\xd3\x9c\x1b\xbf\x39\x29\xdd\x36\x81\x76\x00\xdf\x3a\xe7\x6d\x15\x7d\xd7\xbb\xb8\x9a\xad\x31\x71\xc3\x3f\xcb\x50\x9e\xa8\xa4\x4f\xfd\x56\xd9\x9e\xa6\x07\x10\xec\x5b\xd0\x7b\x84\xa9\xac\x8b\x6a\x01\x29\xcc\x3a\x3c\xbd\xf9\xc4\x33\x32\xc5\x05\x2d\x79\x7d\x78\xb3\x06\x9a\x15\x97\x12\x13\xf3\x65\xa3\xd6\x93\x81\xb0\xfd\x9f\x3a\x66\x4b\x69\x4e\xa5\x46\xac\x9e\xc1\x7a\xd9\xb4\xb4\xb9\xaf\x5d\x65\xad\x36\x66\x9b\xb1\x97\x4c\x53\xfb\x29\x5d\xe4\x70\x9b\x4a\x90\xb0\x39\x3a\xea\xf0\xd1\xa8\x08\x5e\x53\x03\x82\x09\x33\x47\x47\x7e\x3b\x5a\x8a\xef\xea\x21\x72\x8f\x36\x6c\x94\xe6\x3a\xa8\x3d\x00\x6f\x67\xba\xea\xe2\xba\xef\x94\x98\xf5\x61\xbe\xfc\x06\x20\x39\xbe\x4c\x61\x33\xcc\x4d\x1e\xe8\x91\x6a\xbf\x76\x9e\xe0\x58\x3f\x38\x85\x72\xcb\x74\xee\xb4\xb8\xe3\xd8\xea\x34\x4f\x4a\x9a\x26\x30\x6e\x1e\x4d\x90\xa8\x6d\x72\x1b\x74\xb4\x5c\x99\x93\x84\x38\x75\x72\x21\xa9\x71\x73\x43\x84\x8e\x50\x6c\x86\xa2\x96\x39\x16\x22\xa2\x6a\xaf\x23\x71\x8d\x11\xe1\xeb\x8d\x73\xb6\x98\x7f\x0a\x49\x76\x7f\x18\xa5\xa2\x28\x01\x07\x3a\x7b\x86\xa2\x59\x30\x96\x0d\xca\x98\xfa\x97\xdb\xe8\xbf\x01\x86\x6b\x96\x85\x15\x55\x5b\x0c\xf5\x3d\x77\xdd\xa2\xc8\x49\xaa\xfc\x2a\x3f\x87\x7c\xbe\xce\x46\x02\xaa\xed\x31\xc3\x93\x12\xdf\xa5\xb4\x62\x32\x48\x4e\xd9\xd4\x94\x18\x4e\xa9\xb4\x55\xc4\x31\x33\xe3\x22\xdb\xd9\x61\x64\x8b\x80\x63\x62\x80\x09\x47\x9f\x11\xa9\xea\x42\x31\xa0\x36\xbc\xca\x9c\x69\x42\x64\xc3\x52\x76\x1c\x43\x21\x08\x88\xf1\xce\x99\xa8\x0a\xb2\x28\xd1\xf8\x9c\x72\x44\x20\xd0\x3b\xed\x9c\x4f\xe9\x6a\xbd\x85\x35\xa6\x65\x86\xb6\xe9\x8d\xe8\x7d\xcd\x59\x4a\x07\x37\x5b\x72\xe8\xa2\x1d\xb5\x85\x3a\x01\x7b\xee\xf3\xd5\xae\x1a\xe8\xb4\xd8\x52\x1d\xdb\x65\x4d\x49\x84\xf6\xb4\x5e\x8b\x45\x6f\x34\x75\xac\xd6\xce\x87\xcf\x8a\x24\x03\xc8\x84\x62\x7e\xe9\x1f\x89\xb4\xb1\xea\x7d\x30\x17\xa7\xb9\x45\xc5\xf1\x18\xdf\x6b\x48\x09\x88\xde\x9e\x39\xc5\x8c\x92\x3b\x3c\xd5\xc5\x30\xac\xe8\xb5\xbf\x67\xb6\x0a\xd8\xd5\xa4\x00\xa0\xe1\x99\x1a\x18\x60\x59\x69\x19\x8d\x3a\x4f\xc6\x88\x1d\x58\x04\xfb\x79\xb2\xa8\x56\xcc\xb4\xb7\x25\x7f\x5b\x1a\x31\x21\x7f\x06\x3f\x9a\xf8\x63\x44\x3e\xbc\x8d\x7e\x38\xf9\x5b\xc0\xe7\xfc\x62\x3c\x38\xbb\xfe\x38\x7b\x06\x9e\xaf\x04\x9e\x5d\xd0\xb3\x13\x7c\xf6\xc0\xcf\x2e\x00\xda\x0e\x41\x4d\x10\xda\xc2\x6a\xb6\xf6\xcd\xc0\x83\x51\x7b\x0a\x3a\x34\x97\x6a\x80\x0c\xe2\xd0\x8b\x4d\x51\x7e\x7b\x1a\x83\x25\xc8\xf7\x6d\x70\x87\xe4\xa0\xde\xd1\x06\x6b\x7f\xe9\xb3\x33\x9f\xde\x48\xf0\xb7\x83\xc2\x0e\xc0\x99\x64\x49\x23\xe9\x09\xec\x16\x42\x24\x4b\x9a\x10\x03\x8c\x0f\x6f\xa2\xb7\xaf\xfe\x16\x74\x99\x5c\x0e\x9e\x81\xe5\x19\x58\xfe\x01\xc0\xe2\x2f\xc9\x46\xba\xb1\x67\x75\xee\x58\xeb\xe2\x75\xa4\x95\xdb\xb7\xea\x55\xdd\x2e\x54\x5a\x92\x0b\xc9\x84\xcc\xe2\xed\xdb\xbf\x65\xed\xcf\x4f\x67\xbf\x3e\xa7\x15\xcf\xab\xff\x5b\x5b\xfd\x8f\xae\x3a\xd6\xa2\x4c\x3b\xbf\xf8\xbf\xcb\x21\xac\x6f\xb7\x64\xcb\x55\xbd\x35\xbf\x1a\x5c\x75\x3b\xb9\x5f\x7c\x11\x77\xec\xea\x26\xb3\x8f\x98\x79\x22\xe1\x10\x8c\x0c\x82\x78\x5b\xe1\x87\xc2\x9e\xf7\x98\xef\x36\x14\xda\x06\x16\xcd\x24\xc7\xcf\x5a\x5a\x94\x87\x9e\x80\xb4\x11\xe8\xb4\x43\x5b\x1b\x04\xed\x80\xb7\xcf\x29\x25\xea\x32\x3b\xea\xaf\x71\x7c\xcb\xf8\x86\xe0\x7d\x30\x77\x57\x2b\xd5\xfa\x4d\xc0\xab\xc5\x3e\xbc\x8a\xde\x45\x27\x27\xee\x7d\x5a\xf0\x50\x82\x55\x45\x01\x71\x28\xaf\xf7\xcc\x39\x35\xa3\x25\x24\x7a\xc7\x0c\xdb\xdb\x5a\xb5\x80\x37\x45\xf8\x2a\x43\xb9\x34\xe7\xe5\xc6\xa5\x08\xb3\xbc\x14\x07\x68\xb1\x1d\x9a\x78\xb4\x5e\x7a\x67\x6a\x7b\x06\x38\xb7\xad\xf9\x2a\xba\x23\x9e\x69\x49\x08\xa5\xb2\x34\xef\x9d\xbc\x12\xff\x74\x3b\xe2\x77\x83\x8f\x1e\x14\xff\x04\xf8\xf0\x3b\xe4\x1b\x98\xb0\x46\x2c\xa1\x21\xc9\x6c\x6c\x38\xf8\xeb\x07\x9e\x15\x76\xc3\x76\x5f\x10\x34\xc2\x57\xdb\x08\x63\x6f\xaf\xdb\x20\x86\xfd\x49\x52\x3e\x6b\xcc\x66\x97\xc8\x6d\xed\x44\x0c\x97\xb8\x3b\x9c\x98\x52\x5a\x95\xb1\x84\x82\x30\xe5\x97\x28\x57\x3d\x98\x67\xfa\x20\xe1\xb2\xcc\x5f\xa9\xf4\x12\xf3\x52\xc0\x52\x2c\x16\xc6\xde\xfb\x99\x27\x45\xfd\xae\x14\x02\x33\xde\x38\x98\x77\x0f\xfa\x7f\xaf\xf2\x94\x47\xbf\x5c\xc3\x7f\x01\xf1\xa0\x6f\xa7\x65\xbc\x16\xaf\xc7\xec\x52\x92\x12\xb0\x33\x39\x65\x03\x97\x56\x85\xb4\x3a\xcd\xf6\x5b\x01\xc7\x3a\x7c\xa3\x23\x0e\x9f\x47\x34\x5f\xcd\x78\x92\x52\xf7\xcf\x51\x6a\xa2\x6b\x7e\x80\x38\xb2\x03\x74\x2e\x94\x54\xd6\x32\x8b\x11\xc1\xe7\x48\x5e\xc0\x40\xcf\xc0\x5f\x0d\xb2\xef\xc8\x3d\x83\xdd\xe1\x41\xf5\xd8\x64\x1b\x1c\x61\xf1\x9c\x02\x3f\x70\xc0\x4c\x2e\xfe\xa8\x26\x91\xef\x2b\x9a\x78\x24\xe5\x8e\x41\xf0\xc3\xeb\xe8\xcd\x4f\xee\x2d\x47\x9c\x16\x29\x44\xe6\x28\x65\xea\x7e\xee\xea\x3e\xc7\xa5\xb4\x62\x6e\x06\x5c\x09\x1f\xc4\xaa\x12\x9b\xdb\x46\x37\x82\xb7\xf5\xd1\xe2\xb4\x52\x91\xa7\x87\x60\x22\xb8\xad\x57\x11\x2b\x74\x82\x25\xe7\xf5\xa4\x13\xa2\x5d\xb5\x90\x37\x88\x2f\x26\xd3\xab\x5f\x86\xfd\xf9\xcd\x60\x78\x7e\x7a\x3d\x9a\xdf\xcc\xae\xcf\xc4\x37\x80\x9f\x96\xf0\xf5\x16\x34\xd9\x34\x95\xfa\x57\xe3\xf9\x70\x0c\x4a\x92\xbd\xa5\x1b\xb0\xd8\xee\xd2\xc4\x1b\xfa\x23\x1d\x60\x4d\xb0\x48\x8c\x65\x1a\x5a\x0c\x07\xd7\xd9\xd7\x66\x17\xe0\x00\xc5\xeb\x4c\x98\x6c\x42\x83\x23\x21\xf3\xc8\x11\xb5\xb7\xf7\x01\xd5\x57\x11\x37\xd1\x62\x63\x0a\x95\x1a\xf4\xd0\x41\x05\xd9\xcc\x69\xd3\xab\xd3\xe1\x64\xf4\xff\xf3\x2b\x79\x19\x23\x25\xc2\xe6\x72\x88\x61\x2e\xe0\xb3\xa7\x2f\x84\x25\x2c\x59\xa2\x8f\xa6\x7e\x84\x34\x20\xeb\x89\x51\x67\x00\xb0\x2d\xa4\xbd\x9e\x71\xb0\x29\x2f\x8e\x5a\xfb\x66\xea\x8b\x99\x09\xc7\x46\x18\x06\x02\x5a\x0f\x56\x9e\x5c\xed\xb0\x8c\xe5\xda\x8b\xfa\xca\xb6\x73\x85\xa5\x15\x35\x43\xae\xd5\x16\x69\xdb\x80\x91\xab\x1b\x70\xdf\x55\x37\xed\xbd\xf8\x32\xeb\x4f\x2f\x26\xf3\xef\x0f\xb9\x7e\x55\xfb\xfe\x68\x55\x52\x7a\xb7\x39\x16\xa3\x8d\x0c\xf5\x68\x67\x13\xde\xa5\xdb\x8e\xa0\xec\x8a\x00\x02\xe9\x99\xfc\x83\xc8\xda\x4d\x93\xe9\x70\x36\x1c\x0f\x6e\x54\x5f\xc4\xc3\x00\x57\xec\xe0\x4f\xc4\xf2\x93\xa3\xb8\x8e\xdf\x7d\x71\xdb\x65\xe8\x4e\xbc\x45\x84\x04\xdf\xd6\x08\x35\xc5\xfa\x79\xc7\x83\x9d\x5d\x71\xdb\x8e\xe8\x3b\x76\x0a\xe7\xa5\x44\xcb\x46\x6b\xb8\xfe\x96\x73\x58\xff\x95\x27\x6b\x3e\xb7\x40\xfe\x13\x01\x10\xa6\x39\xd9\x5c\x2c\x1b\x2f\x1f\x1a\x64\x5b\x73\x20\xb1\x99\x5e\x01\x5b\x4b\x3a\x04\xdb\x01\x71\xdf\x3b\xcc\x0a\xbe\xd1\x7d\xab\xef\x97\x43\x46\xdb\xa6\xda\x3e\xb0\xf6\xbd\x14\xfc\xaa\xfe\xd6\xc0\xfb\x33\x0f\x54\x45\xf2\xcf\x20\x45\x82\x56\x65\x6c\xc3\x20\xd6\x99\xff\xe7\x90\x91\x7c\x85\x60\xdf\x86\x1b\x2c\x91\xb1\x63\x1e\x8a\x6b\xd8\xb0\x7b\xae\x54\x69\xbc\x81\x3f\x89\xde\x46\x6f\xc2\x6a\x60\xc7\xee\xa9\x1f\x76\x4f\xf1\x5d\x2a\x2a\x04\xd5\x22\x2a\x51\x06\x75\x68\xc9\x82\xb7\xde\xee\xc3\x3d\x13\xfc\x0b\x68\xfc\x7f\x2b\x5c\xe1\x44\xbd\x58\x65\xce\x02\x68\xf2\xb6\x03\xea\xee\x8e\x84\x38\xea\x96\xc6\xe6\x75\x99\xf3\xf4\x47\x05\x5b\x63\x3e\x44\xed\xdb\x2a\xad\x27\xfe\xaf\x9d\xa9\x3d\x91\xe2\xc5\x48\x78\x8a\x66\x06\x9e\xfe\x07\x27\x5e\x1b\x61\x14\x78\x92\xc7\x5a\x54\x5c\xf0\xff\xf4\x84\x20\xd8\xdb\x5c\x4b\xbd\xd1\x30\xfa\x97\x47\xd7\x57\x46\xd8\x57\x44\x59\x6b\xa4\x49\x62\xe1\x3e\xf4\x73\x66\xd1\xbe\x31\x63\xa1\x93\x92\x54\x54\x33\xf5\xab\xbe\x9a\xe4\x0a\x6a\xa7\xff\x96\xf2\xf5\x98\x3a\x1d\xd2\x23\xdd\xc6\xde\xbe\x9c\x9e\x38\xa5\xc1\x68\x9f\x6e\xae\x19\xec\xe0\x12\xe7\x35\x95\xf3\x08\xef\xbf\x01\x00\x00\xff\xff\xf8\xdf\x11\x1b\xe9\x40\x00\x00")

func templatesJenkinsNormalJobXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsNormalJobXml,
		"templates/jenkins/normal-job.xml",
	)
}

func templatesJenkinsNormalJobXml() (*asset, error) {
	bytes, err := templatesJenkinsNormalJobXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/normal-job.xml", size: 16617, mode: os.FileMode(420), modTime: time.Unix(1444914676, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsPipelineXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x93\x4f\x6f\x13\x31\x10\xc5\xef\xf9\x14\xd6\x8a\x6b\xbc\x29\x07\xd4\x83\xe3\x82\x02\x95\x40\x05\x8a\x28\x5c\x91\xbb\x3b\x71\x0c\xde\xb1\xe5\x3f\x49\xaa\xaa\xdf\x9d\xd9\xdd\x38\x69\xca\x1f\x29\xea\x29\xf1\x7b\x3f\x3f\xcf\x78\xbc\xe2\x62\xdb\x59\xb6\x86\x10\x8d\xc3\x79\x75\xc6\x67\x15\x03\x6c\x5c\x6b\x50\xcf\xab\x6f\x37\x97\xd3\xf3\xea\x42\x4e\x44\x04\xde\x1a\x75\xeb\x2c\xff\x09\xf8\xcb\x60\xe4\xde\x78\xb0\x06\x81\xbf\xa5\x1f\x0a\xb8\xbb\xde\x09\xdf\x0d\x6c\x98\xb7\x59\x1b\x0a\x6c\x77\xe6\xb4\xe0\xd3\xd1\x79\x3d\xe3\xe7\xfc\x55\x25\x27\x8c\x09\x54\x1d\xc8\xfb\x7b\xc6\x3f\xd1\x1f\xf6\xf0\x20\xea\x41\xe9\xad\xa5\xb1\x09\xc2\xbb\x2d\x34\x39\xb9\x10\xe5\x52\xd9\x08\xa2\x7e\x2a\x1f\xd0\x2f\x19\x32\x1c\x63\xa3\xd4\x23\x3e\x38\x0f\x21\x19\x88\xac\xb1\x2a\xc6\x79\xb5\xca\x6d\x74\xc8\x3b\x47\x75\xf2\xbe\xf0\x17\xd7\x23\x73\x77\x65\x62\xaa\xea\x61\x5b\xe3\x3a\xef\x10\x30\x7d\xf5\xd0\x0c\x87\x91\x78\xe2\x85\xfc\x98\x2e\x1e\xa7\x8c\x21\xff\xed\x7d\xb0\x97\x26\xc4\xf4\xc1\xdd\x0e\xc8\xe5\x6e\x31\x60\x7b\xa7\xa0\xd4\xd0\x9e\xbc\x52\x07\xb0\xe8\x63\xd9\xf5\xf3\xeb\x16\xf5\x9f\x17\x22\xd0\x7d\x5e\x96\x7d\x51\x9e\xcd\xa8\x8f\x23\xa5\x67\xe2\xca\x6d\xde\x68\x1d\x40\xab\x04\x6d\xf1\xca\xb0\xfe\xe1\x96\xf0\x85\xb3\xb9\x43\x8a\x1e\x93\xcb\x72\xc8\x75\x34\x53\xd4\x12\xa9\x26\xca\xd9\xad\xf6\x27\xae\x55\x52\x87\xa7\xf3\x58\xea\x91\xec\x5b\x3a\xef\x3d\xd2\x43\x59\x2b\x2b\x5f\x8a\xfa\x89\x52\x72\x16\x2b\x85\x1a\x8e\x72\x8a\xd4\x23\xca\x5a\xb7\xf9\xa8\x30\x2b\x7b\x13\x8c\xd6\xf4\x45\xc9\x14\x32\x91\x7f\x73\xfa\x1d\xd4\x29\x6c\x7d\x19\x6a\xa4\xb7\x76\xf2\x74\xe4\xe4\x77\x00\x00\x00\xff\xff\x31\x82\x93\x82\xc0\x03\x00\x00")

func templatesJenkinsPipelineXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsPipelineXml,
		"templates/jenkins/pipeline.xml",
	)
}

func templatesJenkinsPipelineXml() (*asset, error) {
	bytes, err := templatesJenkinsPipelineXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/pipeline.xml", size: 960, mode: os.FileMode(420), modTime: time.Unix(1444285629, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/jenkins/multi-job.xml":  templatesJenkinsMultiJobXml,
	"templates/jenkins/normal-job.xml": templatesJenkinsNormalJobXml,
	"templates/jenkins/pipeline.xml":   templatesJenkinsPipelineXml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"jenkins": &bintree{nil, map[string]*bintree{
			"multi-job.xml":  &bintree{templatesJenkinsMultiJobXml, map[string]*bintree{}},
			"normal-job.xml": &bintree{templatesJenkinsNormalJobXml, map[string]*bintree{}},
			"pipeline.xml":   &bintree{templatesJenkinsPipelineXml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
