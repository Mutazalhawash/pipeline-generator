// Code generated by go-bindata.
// sources:
// templates/jenkins/.normal-job.xml.swp
// templates/jenkins/multi-job.xml
// templates/jenkins/normal-job.xml
// templates/jenkins/pipeline.xml
// DO NOT EDIT!

package pipeline

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesJenkinsNormalJobXmlSwp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x9c\x7b\x88\x25\x47\xf5\xc7\x2b\xbb\x79\x67\x37\x09\x49\x7e\xbf\xfc\x61\xc0\x9b\xc9\xc2\x64\x83\xd3\x3d\x33\x9b\xc7\x8a\x77\x27\xbb\xf3\xd8\xdd\x89\x33\xb3\xc3\xdc\xb9\x1b\xa3\x21\x4b\xdd\xee\xba\xf7\xd6\x4e\x75\x57\xd3\x5d\xbd\xbb\xe3\x3a\x59\xdd\xbf\xc4\x08\x06\x8c\x20\x24\x11\x04\x63\x20\x82\xcf\x44\x10\x11\x45\xd1\x04\x04\xc5\xc4\x07\x46\x04\x49\x88\x51\xd4\x48\x10\x1f\x44\x89\x7e\xbb\xbb\xfa\x71\xfb\xde\x79\xc4\xc7\xc6\xc5\x3e\xcb\x67\x6f\x77\xd5\xa9\xea\xaa\xd3\x55\xa7\xaa\xab\x6a\xb7\x35\x7a\x74\x76\xbe\x76\x87\x71\x2b\x81\x5c\x4d\xc8\xd3\x7b\xbe\xdc\x7c\xe0\xee\x33\xe4\x61\x9b\x90\x15\x16\x04\x4c\xb4\xa4\xef\x92\x0d\x25\xd5\x93\x2b\xe3\xa3\xa3\xa3\x86\x90\x16\x15\x83\xf4\xee\xcf\x33\x34\x4f\x4a\x7f\xc5\xec\xc8\x11\x8f\x5a\x2b\xb4\xc3\x02\x33\xf0\x2d\xb3\xc3\x55\x37\x6c\x19\x96\x74\xcc\x40\x86\xae\x6d\x09\x19\xda\xa6\xc7\x3d\x26\xb8\xcb\x46\x3a\xcc\x65\x3e\x55\xd2\x37\x15\x73\x3c\x41\x15\x92\x1d\x67\xee\x0a\x77\x03\xd3\x95\xbe\x43\xc5\xc8\x71\xd9\x32\x4e\x39\x03\x9f\x5e\x49\x25\xff\xc3\x12\xaa\xf6\xc8\xde\x9d\x64\xcf\xf8\xd8\x68\x74\x7b\xd3\xd0\x8d\xb5\x6b\xaf\x69\xbe\xd9\xa5\xaa\xa4\x92\x4a\x2a\xa9\xa4\x92\x4a\x2a\xa9\xa4\x92\x4a\xce\xa1\x28\x6f\x3b\x39\x83\xdf\x6d\xfa\xbe\xa5\x7f\x2f\x28\xfd\x5e\xa8\x7f\x99\xfe\xb5\x4a\xf1\xdb\xf5\xef\xb5\xfa\xf7\x99\x52\x7c\x25\x95\x54\x52\x49\x25\x95\x54\x52\x49\x25\x95\x54\x52\x49\x25\x95\x54\xf2\xe6\x09\xb5\xe3\x6d\x7f\xf2\x64\xf4\xa1\x7e\x75\xfe\xfd\xff\xd3\xab\x08\xf9\x3e\xf8\x26\xf8\x02\x38\x0b\x5a\x60\x1a\x5c\x07\x5e\xbe\x92\x90\x9f\x80\x27\xc0\xc3\xe0\x00\xf8\x7f\xf0\xab\x9d\x84\x3c\x05\x1e\x03\x1f\x06\x47\xc0\x2d\xe0\x1a\xf0\xcb\x1d\x84\x7c\x1b\x7c\x1c\x9c\x01\x1e\xb8\x0b\xdc\x00\xfe\x78\x05\x21\x2f\x81\x27\xc1\xfb\x81\x09\x5e\xbf\x9c\x90\x1f\x81\x4f\x83\x35\xf0\x6e\x30\x0c\x5e\xbb\x8c\x90\x2f\x82\x8f\x02\x1f\xdc\x03\x0e\x83\x31\x70\x03\xb8\x04\xbc\x7a\x29\xd2\x82\x33\xc0\x03\x6f\x05\xaf\x5f\x42\xc8\x6f\xc1\x8b\xe0\xc7\xe0\xab\xe0\x41\x70\x16\x4c\x81\x31\x70\x1d\xf8\xf3\xc5\x84\xfc\x0c\x7c\x0e\x3c\x02\x3c\xd0\x02\x7b\xc1\xf5\xe0\xb5\x8b\x08\xf9\x3a\x78\x14\x7c\x04\x7c\x00\x48\x70\x23\xf8\xcb\x85\xb0\x19\xb8\x0f\xec\x00\xcf\x6f\x87\x1e\x38\x0c\x6e\x03\x37\x83\xdf\x6c\x23\xe4\x3b\xe0\xb3\xe0\x2c\x10\x60\x11\x98\x60\x1b\xf8\x35\xde\xc5\xf3\x17\x24\xef\xe4\x4b\x03\x16\x50\x6a\xb1\xd4\xbb\xa1\x1d\x48\xd7\xf0\x44\xd8\xe1\x6e\x60\x74\xb8\x32\x26\x7d\xea\x5a\xdd\x86\xc7\xac\x89\x58\xab\xde\x8a\x03\x58\xa0\x6f\xcd\x30\x60\xfe\x12\x73\xa4\x62\x53\xd2\x6d\xf3\x8e\x8e\x88\xa2\x06\x64\xd7\x2c\x69\xa7\xca\x50\x0f\x7d\x31\x71\xfa\x74\xcd\x38\xc4\x55\x73\x69\xae\xb6\xb6\x86\xbc\x11\x94\x2b\xf8\xac\x1d\x44\xe5\xa8\x9b\xe9\x55\x1e\xe7\x52\x87\x21\x22\xfe\xd9\xa0\x36\x83\x1f\x5f\x5f\xa7\x0e\x75\x2b\xbe\x3b\xca\xfc\x80\x4b\x77\x62\xbc\x6e\xf6\x06\x40\xa9\x1e\x58\x4e\xcd\x12\x34\x08\xf6\x0d\x0d\x78\x1e\xea\xd2\x98\x9a\x1f\xaa\x25\x61\xfb\x86\x10\xb6\x7f\xdc\x18\x37\xde\x3e\x14\x25\x46\x6d\x99\x08\x18\xaa\x1a\xe5\x64\xb6\x42\x2e\xec\xbb\x7d\xea\x79\xc8\x5f\x97\xa0\x94\xa7\xe2\x0e\x0b\x14\x75\xa0\x61\x2c\xe7\xd7\x93\x85\x94\xd9\xb3\x0a\xba\xfb\xc7\x8c\xdb\x8d\xf1\x21\x33\x7d\x67\x01\x33\x6c\x4e\x5b\x52\x18\xfa\xb0\x8b\x91\x9e\x88\x31\x16\xf5\x85\xae\x23\xec\xa1\x7c\xde\x0a\x95\xf4\x33\xbb\x86\x9e\x4d\x15\x9b\xe6\x81\x27\xe8\xea\x42\x64\x71\xe5\x87\x0c\x6f\xab\x2f\x3c\x4d\x71\x22\xc9\x6c\x59\x9f\xb1\x99\xd8\x75\x7a\xb2\x39\x3b\x37\x7d\x6c\xa1\x39\x3f\x39\xb3\xb4\x36\xb2\xeb\xf4\xa1\xd9\xe5\x63\x4b\x33\x47\x67\x1b\xb3\x47\x16\xde\x26\x98\xdb\x51\xdd\x7d\x77\xa0\x05\x94\x53\x26\x15\xf8\xa7\xca\x9f\x19\xc6\x86\x02\xf2\x5d\x1d\xc9\x8e\x01\x25\x31\xfb\x47\x8d\xbd\xc6\x1d\x43\xa9\x91\x4a\xa6\xa7\x6e\xc0\x2d\x29\xa4\x6f\x1c\xc0\xd5\x54\x74\x55\x34\x7b\x56\xd7\x58\x67\x9e\x7a\xb1\x01\x4e\x29\xe6\x3b\x51\xb3\x29\x84\x0d\x7c\xb1\x9b\xe4\x9e\x95\x3d\xd3\x43\x61\x6f\x35\x46\xe3\xc2\xd6\xfb\x1a\x4e\xdd\x44\xa5\x3b\x9d\xac\x19\x45\x0d\xcd\xb5\x93\x76\x56\xa8\x5a\xaa\x64\xa0\x8d\x2e\x27\xd7\x59\x35\x78\xc7\x95\x3e\x5b\x94\x81\x9a\x92\x8e\xc3\xd5\x61\x29\x57\x82\x89\x36\x45\x7b\xad\x9b\x83\x23\xd3\xa4\x71\xd7\xbc\xa5\xa6\xff\xa0\xb5\xe5\xce\x63\xb3\x07\xa3\xa0\xbc\x5d\x33\x74\x18\xb3\xe7\xa9\x1b\x52\x21\x56\x51\xf4\x9e\xce\xd2\x5f\xa5\xb4\x21\x64\x59\x2f\xb1\xa8\xed\xb0\xd8\x8a\xe5\xca\x99\xaa\xeb\xb3\xa0\x2b\x85\x5d\x70\x21\x96\x44\x1b\x63\x2a\x49\xa1\x9b\x74\x6f\x58\x51\x17\xaf\x60\x62\x72\xae\x39\xa3\x5f\x6e\x21\x4e\xfa\x36\x77\xa9\x98\x18\xad\x9b\xe9\x65\xc9\x4f\x35\x9a\x53\x53\x33\x8d\x46\xc9\x5d\xf5\x95\x09\x1d\x2d\x50\x3e\xa3\xce\xa2\x2f\x8f\x33\x4b\x05\xb1\x7b\x6c\xea\xc0\xbb\x64\x2b\x48\x9c\x64\x59\xab\xf8\x1e\xd2\x2e\xbf\x75\xf3\xe8\x57\x50\x7a\x4c\xd4\xa8\x8a\x6d\x0a\x6f\xd5\x72\x74\xde\x0c\xad\xdc\x8d\x3a\x5b\x90\x3e\x2d\x08\x5b\x8e\xb4\x43\xc1\xa6\xda\x9d\xd4\x3b\x0a\x1e\xa8\xcc\x03\xd9\xf2\x50\x72\xf2\x8e\x35\x32\xd5\xd8\xb5\x86\x08\x8b\x72\x4a\x5b\xda\xe6\x8a\xfa\x89\x96\x13\x75\xae\x34\x7f\xee\x5a\x22\xb4\x99\xbd\xc4\x3a\xb1\x92\xae\xd4\xdd\xd2\x87\x15\x3a\xd3\xdc\x4f\x1a\x54\x5f\x40\xd2\xa4\xd0\xc0\x4b\xe9\xf5\x43\x56\xb8\xb7\x4c\x3b\xba\x6d\xa4\x77\x49\x1c\x3c\x7b\x52\xb0\x19\x87\x72\x61\x96\x43\x8b\x85\x63\xa7\x92\xcc\xa3\xc1\x28\x28\x07\xea\x27\xa6\xc1\x18\xe9\xd0\x0f\x5c\x8b\xe5\x01\xf0\x83\x70\x5f\xcb\xd4\xef\x30\x85\x82\x6f\xd9\xe6\x28\xcb\xb2\x94\x62\x62\x9a\xb5\x69\x28\x54\xdd\x4c\x03\x92\xe8\xd8\x89\x4c\x75\xa5\x44\xa9\x36\x18\xd1\x42\xc5\x85\xa1\xb3\x98\x2c\x24\xc9\x1e\x83\xb1\xb4\xd1\x45\x9f\x95\x27\xa7\x84\x74\x59\xfa\x22\xcb\xc1\xa4\xe0\x65\x16\xa4\xe2\xed\xd5\xc4\x95\xf4\xba\x98\x9e\x98\xd4\x00\xd1\x38\xbd\x28\x85\x48\x55\x0b\x21\x89\x8a\xe7\x87\x2e\x9b\x4c\xe7\x29\x5a\xab\x37\x30\x51\x3c\x89\x01\xe0\x48\xa8\xa2\x56\x10\x78\xd4\xca\x0a\xdb\x17\x9e\xa8\x5b\x82\x51\x37\xee\x84\x53\xd1\x55\x16\x1d\x37\x99\x24\x32\x51\xa4\xa1\xea\x4a\xff\x88\x9f\x14\x1c\x63\x40\x9a\x71\x7f\xc4\x7f\xa8\x3f\xf8\xcc\x0a\x31\x00\x9e\xc8\xd5\x02\xdd\x6c\x07\xc5\xe8\x42\xf0\x80\xb6\x44\x31\x3c\x7d\x68\x5f\x44\x92\xc0\xec\x9d\x0b\xae\x33\xe5\x2b\xcf\x20\x73\x3f\x78\x8b\x19\xd9\x32\x8f\xe7\x6d\xce\xfc\xd8\x98\x9b\xcd\xe3\xfe\x5b\x66\xa5\xe7\xc5\x1c\x33\xf2\x7c\xb3\xc1\xac\xcb\x15\xa7\x02\xfe\x3c\x9d\x6f\x7a\xbe\xc4\x84\x41\xf1\xdc\x6a\x5b\x98\x57\x2d\x26\x89\x56\xf3\x51\x46\xd1\x0e\x8b\x27\x36\x91\x99\x1a\xe9\x5d\x6c\xa9\x3c\x2e\xd5\x56\x34\x58\xc9\x94\x97\xf5\x4d\xac\x9b\xc5\x68\x77\xb6\xf5\xa2\xbc\x91\x89\x5d\xbd\xb7\xd2\xf5\x15\xc6\xbc\x69\xe6\xc1\xef\xc3\xc9\xf2\xbc\xc9\xf7\x85\xc7\x16\x13\xb2\xb3\x24\x15\xcd\x26\xc3\x75\x8a\x9c\xda\xd4\x52\x0b\xa1\xb3\x2c\xdf\x89\x34\x13\x63\xe8\xe4\x7d\x81\xbd\xca\xd3\x74\x35\xd0\x11\x23\x05\xf5\x42\x70\xa2\xef\x66\xe9\x23\x35\xb7\x94\x9b\xdd\x9b\x8b\xdd\x93\xba\x9e\x97\xb4\xd4\x72\x22\x33\x07\xc6\x5c\x16\x9d\x58\xc5\x66\x81\xe5\x73\x2f\xf2\x20\xb1\x1f\xaf\xa3\x3c\x7a\x18\x8a\x2c\x16\xcd\x2b\x70\x75\xe7\x29\x47\xd4\xf4\x8c\x7c\xdf\xf0\x98\x31\x3a\x8c\x01\xd3\x92\x98\xe3\x74\xf6\x0d\x37\x97\x0f\x8e\xec\x1d\xbe\x73\x22\xfe\xfe\x7f\x21\xfa\x0e\xdf\x99\x7c\xff\xa7\xfb\xf7\x2f\xe2\x1b\x9f\x83\x77\x81\x2b\xc0\x53\xf8\xb6\x7f\x1c\x3c\x08\x3c\xf0\x0e\xb0\x1b\xec\x00\xbf\x47\xda\xe7\xc0\xe3\xe0\x21\x10\x00\x06\x9a\x3b\x93\x7c\x67\x77\x9e\x93\xa5\x8c\x4a\x2a\xa9\xa4\x92\x4a\x2a\xa9\xa4\x92\x4a\x2a\xa9\xa4\x92\x73\x24\xf1\x27\x7a\xf2\xed\x15\x7f\xaf\x87\x2d\xc1\x83\xee\xa6\xab\xfa\xf1\x17\xde\xf9\xbc\xee\x6d\x75\xf1\xd4\x9e\x45\xef\x05\x76\x4a\x65\x0b\xde\xbd\xd1\xa4\xb8\x0e\xb3\x5e\xdd\xf5\x2a\x48\x21\x9b\x81\x16\xa4\x61\xf4\x2f\xc5\x0d\x8b\xb9\x30\x83\x13\xac\x06\x8a\x39\x81\xd1\xb3\xe6\x62\xc4\xeb\xa4\xd9\x5a\x84\x5e\x13\x4f\x1e\x99\x2e\x4c\x94\xcd\x6e\xcb\x93\x6e\xcf\x1a\x7d\xb4\xce\x91\x57\x2c\xd9\xe4\xc8\xaa\xb7\x8e\x76\x66\x9c\x64\xf5\xc8\xcc\x96\x1a\xff\x9d\x45\xce\x96\x52\xe2\x24\x7d\xeb\x28\x63\xc6\xad\xc6\x9e\xa1\x3e\x93\xf6\x54\x20\xfe\xfe\x8f\xbe\xf9\xbf\xa5\xf7\xff\xd3\xf3\xfd\xcf\xe2\x9b\xff\x33\xe0\x61\x70\x1c\xdc\x0e\x5e\xc2\xb7\xfe\x93\xe0\x01\x70\x2f\xd8\x03\xae\x06\x3f\xc7\xf7\xfd\xe7\x41\x57\x7f\xeb\xdf\x0c\xae\x02\xaf\xef\x20\xe4\x65\xf0\x2c\xf8\x1a\x78\x1c\x3c\x00\x14\x60\xe0\x5e\xbd\xff\xff\xb7\x2b\x08\x79\x0e\x3c\x0a\x3e\x04\xee\x07\x6b\xa0\x0d\x6e\x03\xbb\xc1\x95\xe0\xd5\xcb\x09\xf9\x14\x78\x0f\x18\x05\xd7\x83\x57\x2e\x23\xe4\x05\xf0\x18\xf8\x18\x78\x2f\x38\x06\x66\xc0\x5b\xc0\xe5\xe0\x17\x97\x12\xf2\x43\xf0\x34\x78\x02\xdc\x07\x6e\x07\x57\x81\xbf\x5f\x42\xc8\xef\xc0\x27\xc1\x31\xf0\x7f\x60\x3b\xf8\xc6\xc5\x84\x3c\x08\xce\x02\x0e\xee\x01\xfb\xc1\x5f\x2f\x22\xe4\x13\x60\x15\x1c\x07\xf7\x80\x3b\xc1\x18\x18\x02\x97\x82\x67\x2e\x24\xe4\x21\xc0\xc1\x3c\xb8\x01\xbc\xb2\x1d\xe5\x00\xdf\x05\x8f\x80\x0f\x82\xfd\xe0\x4a\xf0\x87\x6d\xb0\x2d\xf8\x1e\x78\x02\xac\x81\x79\xb0\x1b\xfc\x09\xef\xe5\x07\x17\x24\xef\xe7\x2b\x3d\x67\x01\xb2\x2e\xb1\xa9\x77\x39\xa0\xd7\xac\x0e\xf8\xe8\x8c\x27\x0a\x4d\x3d\x5e\xe1\x9f\x71\x3c\xb5\xaa\xa3\xb2\x95\xef\xbe\x88\x34\x49\xfc\xbf\x2e\xa8\x23\xae\x58\xd5\xce\xa7\x10\x90\xea\x48\xdc\xcc\xb6\x1b\xa1\x65\xb1\x20\x68\x87\x42\x6b\xf6\x05\x67\xc5\xd0\xe5\x4b\x3a\x59\x5a\xda\xb8\x7b\xe5\x51\x03\x3c\xc7\xe0\x7a\xe9\xa6\x5e\xc8\x66\x73\xff\x3b\x4f\xb9\x28\xd8\x25\x80\xe6\xb2\x9c\x75\x6d\x7e\x82\xdb\xe8\x2c\xe9\x6a\x7c\x7f\x78\xee\x34\x5c\x95\x6c\x7f\xcc\x44\x6b\x9a\x4d\xf8\x84\x68\x11\xbe\xe8\xa5\x37\x54\x49\xf3\xf1\x99\xc5\x3d\x0e\xf7\x90\xb9\x8c\x01\xe5\xcc\xfa\xbd\x13\xdf\xa2\xa3\x8f\x8d\x96\xfa\x79\xfc\x9c\x2d\x55\xfd\x78\xe8\x72\x65\xdc\xd5\xc4\xdf\x4b\x2c\x08\x45\x7f\x2b\xe9\x32\x2a\x54\xb7\x61\x51\xc1\x0e\xc2\xa0\x18\x46\xc6\x0c\x0c\x1b\xfd\xc1\xd9\x18\x81\x06\x31\x4d\x15\x5d\xcc\x86\x40\x33\x8b\x8b\x96\x6a\xe7\xa4\xdb\x69\x28\x9b\xcb\xe2\xfa\x6d\x1e\x58\xcc\x26\x29\x52\xd2\x30\x96\xe3\x7b\x4f\xfa\x2a\x71\xbd\xc5\xf8\x01\xb6\x5a\xb7\x62\x99\xf9\x62\x0d\x58\xaf\x64\xbc\xde\xe7\x90\x68\x19\xba\x67\x2c\xd7\x67\x3f\xf2\x63\x1f\xbd\x06\x6d\x74\x99\xc8\xdb\x76\x34\x38\x3b\xd4\xc5\x1b\x8e\x77\xa2\x92\x9b\x28\xdb\x0e\x57\x35\x0c\xa5\x4c\xd5\x46\x46\xba\xd4\xb7\x6b\xc9\xb1\x8a\xc6\xe1\x03\xf9\xd6\x26\x61\xa7\xa2\x62\xd4\x74\xc4\xbe\x5d\x37\x33\xab\x2b\x6b\x43\xbb\x4e\x2f\xce\x2e\xce\xcc\xcd\x2e\xcc\x1c\x3b\x3a\xb3\x14\x9d\xc2\x58\x1b\xaa\xbd\xaf\x66\x85\xc8\xac\x3d\x5e\x1b\xb1\x87\x47\x86\x77\x0f\xde\x4b\x28\x6c\xcc\xeb\xcc\xb3\xac\x92\xf3\x1d\x5b\x7b\xc8\x98\x7e\x08\xb9\xa9\x96\x0e\x3b\x35\x0b\xa3\x60\xb4\x84\xed\xd0\x0e\xb7\xf2\x01\x50\x57\xbf\xff\x05\x15\x0c\xb5\x4e\x0b\x4d\x37\x4e\x2c\xe9\xad\xa6\x9e\x00\x36\xf4\x56\xd3\xce\x5d\xe8\x7f\x68\xf2\x07\xb9\x8b\x51\xd1\xf3\xb9\xab\x0e\x64\x7e\x23\xdb\x8a\x5b\x4f\x21\x7b\x53\x01\x13\xac\xd8\x8e\x0b\x7b\xfa\x07\xb9\x50\xcc\x6f\xa8\x68\x2b\xaf\xb3\x3a\xd1\x0c\xd8\x21\x21\x5b\x54\x34\x98\x52\xc8\x33\xdf\xd6\x2f\x29\xe6\x39\xa1\x18\xa2\x45\xad\x95\x65\x39\x47\x03\xd5\xe7\x1b\xd7\x8d\xce\x5d\x52\x52\xb8\x75\xb6\x96\x7a\x2c\x94\x1d\xc8\x88\x7d\x4b\x43\xa7\x1c\xca\xf2\xd2\xbb\xd7\x85\x5e\xa9\xe2\xfd\xe9\xfc\xbe\x1d\x57\xa3\xdf\x1d\xeb\xf0\x54\x2d\x9d\xf0\x46\x7a\x68\x5e\xd9\xee\x50\x61\x22\xdc\xbf\xeb\xb6\xee\xcb\xcc\xfa\x65\x51\x03\xdd\x73\xcf\xb8\x31\x96\xf7\x50\x9f\xe2\x1d\xe6\xc5\x9a\x66\x9e\xee\xa4\xc5\x4e\x59\x6c\x4f\x6f\xe4\xb4\xc9\x80\x39\xf7\xd6\x67\xdc\xeb\xcf\xb7\x37\x98\x6d\xaf\x3b\xd7\x2e\xcf\xb4\xff\xa5\xf3\x25\xf9\xe9\x92\x2d\x9f\x2d\x59\xff\x64\x09\xe6\xb4\x56\xe8\xfb\x18\xa4\x92\xea\xeb\x1e\x56\x0e\x8e\xdf\x89\x90\xd6\x4a\x72\x34\xaa\xcb\xdc\x34\xaf\x38\x00\xdd\x26\x4d\xb9\x89\x56\x7f\x46\xd3\xd9\xa4\x7b\xe3\xac\x06\xe8\x91\x7c\xeb\xdc\x2e\xed\x98\x27\x45\xb6\xa8\xbb\x24\xa9\x93\xd5\x4a\xdf\x96\x1b\x15\x3a\x21\xef\xb8\xcc\x5e\x90\xb6\xde\x4b\x15\xf4\x04\x9b\xa3\x2d\x26\x92\x89\x4b\x31\x3e\x37\x67\x8f\x16\xe9\x6b\xa9\x83\x0e\x15\x9e\xdf\x47\xdb\xf2\x83\x47\x1b\x1f\xfa\x31\xab\x53\x3b\xd5\xa9\x9d\xea\xd4\xce\x39\x3f\xb5\xf3\x8f\x00\x00\x00\xff\xff\x1d\xbd\xaf\xd5\x00\x50\x00\x00")

func templatesJenkinsNormalJobXmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsNormalJobXmlSwp,
		"templates/jenkins/.normal-job.xml.swp",
	)
}

func templatesJenkinsNormalJobXmlSwp() (*asset, error) {
	bytes, err := templatesJenkinsNormalJobXmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/.normal-job.xml.swp", size: 20480, mode: os.FileMode(420), modTime: time.Unix(1440422383, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsMultiJobXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x4b\x6f\xdb\x38\x10\xbe\xe7\x57\x08\xbe\xe4\x14\x2a\xc1\x3e\xd0\x83\xe2\x6e\xe3\x26\x40\x17\x49\x6a\xd8\x35\x7a\xa6\xa5\x89\xc4\x98\x22\x05\x92\xda\xb5\x51\xf4\xbf\xef\xf0\x21\x8a\x8a\x8d\x4d\x82\xdd\x93\xc4\x6f\x1e\x1c\x7e\xfc\x66\x58\x7c\xdc\xb7\x3c\xfb\x0b\x94\x66\x52\x5c\x9f\x5f\x91\xcb\xf3\x0c\x44\x29\x2b\x26\xea\xeb\xf3\xcd\xb7\xbb\x8b\x0f\xe7\x1f\xe7\x67\x45\x29\x5b\x62\xd8\x8e\x72\xf2\x0c\x62\xc7\x84\x26\x1d\xef\x6b\xfb\x6d\x7b\x6e\xd8\xb3\xdc\x92\x07\xfb\xf3\xa7\xdc\x2e\x95\x7c\x86\xd2\x64\xde\xe1\x7a\x16\x02\x2e\x06\xc7\x0b\x6f\xf8\xe3\x8a\x5c\xfd\x36\x9b\x9f\x65\x59\x41\x4b\x83\xbb\xeb\xdc\x2d\x2a\xd0\xa5\x62\x9d\x45\xe6\x45\x9e\xae\xac\x75\x07\xd0\x7d\x86\x0e\x44\x85\x55\x32\xd0\xf3\x27\xca\x35\x14\xf9\x11\x6e\x9d\x3b\x25\x3b\x50\x26\x2c\x11\xd0\x40\x2a\x46\xb7\x32\x39\x05\xeb\x80\x33\x01\x64\x19\x7e\x96\x3e\xe6\x10\xcb\xaf\x10\x46\x7e\x0e\x17\x83\xeb\x50\xff\x25\xf9\x40\x7e\x9f\xf9\xcc\x98\xdb\x50\xbd\x7b\xa4\x2d\xcc\x3b\xaa\x28\xe7\xc0\x33\xd8\x43\xd9\xdb\xca\x8b\x3c\x1a\x07\x6f\x6d\x68\x0d\x0e\xf9\xf1\x23\x23\xeb\x61\x95\xfd\xfc\x59\xe4\xa3\xcd\x57\x9d\xbf\xa3\x6c\x77\xee\x7c\x7a\xf0\x42\x97\x6d\x56\x72\xaa\xf5\xf5\xac\xe9\x2b\x2d\x05\x41\x84\x3c\xf6\x9c\xaf\x17\x0f\x33\x4f\x7b\x49\xc5\x4a\xd2\x76\x6e\x54\x8f\x74\x0e\x2b\x77\x21\x4c\xd3\x2d\x87\x6a\xa0\x3a\xae\xad\x71\xcb\x65\xb9\xbb\xe9\x19\xaf\xbe\x37\x20\x3e\xcb\xbf\x85\x36\x0a\x68\xeb\x20\xd4\xd0\x10\xf4\xaa\xdf\x71\xb2\x4d\xf7\x96\x54\x47\x5e\x36\x91\x51\xac\xae\x51\xd3\xe1\x68\x52\x94\xbd\x52\x20\x8c\x73\x1a\xf2\xbc\x84\x5d\x05\xf6\x0f\x03\x03\xf3\xef\x50\xfd\x8d\x8f\x8c\x17\xdc\x35\x54\xfb\x4b\x74\x7f\x97\x78\x29\x11\x99\xf8\x60\xac\x1e\x90\x2c\x43\x35\x28\x2a\x6a\x40\x4d\xf4\x5b\x6b\x42\x45\x44\xe3\x5b\xea\x59\x0e\x39\x17\x52\x3c\xb1\x7a\xcc\x8c\xe1\x68\x8f\x92\x73\x4a\x1b\x80\xd4\xc9\x72\xb2\x44\x09\xb7\x7a\xd0\xc2\x08\xa4\x7e\xb0\xef\xa4\x86\x0a\x15\x34\x10\x9a\x20\xa9\x63\xd0\x0b\xd6\xf4\x42\x41\x16\x49\x1d\xb1\x71\x34\xde\xe0\xaa\xe7\xa0\x97\xd4\x34\xd8\xfe\x47\x50\xea\xdf\xd2\xfd\x0a\xf0\xaa\x51\xe5\x48\x6f\xb2\x9a\x94\x29\xec\x56\xd6\x72\x58\x1b\x45\x0d\xd4\x87\x58\xef\x09\xd3\x71\x28\xf2\x58\x31\x37\x7f\x26\x61\x23\x9c\x86\x60\x93\x2a\xf3\x89\x73\x7b\x34\xcf\x5e\x8a\x4c\x68\x8e\xf1\x4e\x89\x27\x72\xed\x18\xe7\xee\x36\xbf\x0a\x0c\x5e\x81\xc6\x2b\x1e\x77\xbd\xfb\xf4\xe5\x7e\xb3\xba\xc5\xc9\xf7\xaf\x6e\x69\x42\x27\xee\xaf\x82\x1f\xbe\x3c\xe1\x1d\x2d\x1a\xab\xb3\x38\x40\x4f\x1b\x47\xe9\xe5\xff\x45\x7b\x28\x38\x9c\xcc\xa3\x94\x43\x33\xa4\xd2\xb7\x84\x18\x26\x7a\x6a\xcb\x1e\xeb\x5f\x6f\x16\x8b\xdb\xf5\xfa\x6e\x73\xef\x68\x3a\xe1\x71\xf6\xe6\xf2\x4e\xb4\x6a\x38\x77\xe8\xf8\xa2\xeb\xb7\x9c\xe9\x26\x0e\x00\xac\x9b\x3d\x65\xe4\x11\xf6\xe6\x81\xe2\xce\x3c\xed\xc8\x82\xf6\xc4\xee\x5a\xe2\x04\x51\x7d\xab\x0f\xda\x40\xab\x49\x98\xb0\x7e\x77\xe2\xd2\xc7\x69\x1d\xe6\x12\x71\x15\x0c\xa3\xfb\x9b\x07\xe3\x83\xe3\x42\x8e\x5e\x9b\x2b\xf2\x2b\xf9\x65\x96\xb2\x85\x0c\xfb\x01\xe7\xbb\x2c\x8e\xd4\xf0\xfe\xda\xc6\xd6\xae\xd5\x8f\xca\xc7\x0e\x3c\xed\x1d\xb8\xfc\x7f\x0f\x16\xa9\x4c\x24\x90\x10\x3b\xa1\x34\xec\x61\x9f\x4b\xed\x93\x4d\x92\xd8\x83\x37\x76\x07\x5f\xf4\x78\xbc\x78\xb0\xa9\x39\xbe\xcd\x8d\x02\xdd\x48\x3f\xe4\x03\x26\xec\xe0\x0b\xf2\x2a\x72\x31\x19\x83\x85\x54\xf8\x96\x50\x6e\xe7\xca\xf0\x9b\x4e\x61\x2e\xd5\xfc\xe6\x7e\x73\x6b\x65\x67\xff\x27\x13\xba\xe3\x60\xc0\x3f\x29\x61\x80\x4e\xb0\xd8\x02\x2f\x8a\x2a\xf2\x57\x0e\x9f\x32\x88\x0d\x34\x91\xaa\xef\xed\xef\x8a\x76\x9d\x7f\xf6\xde\xd5\x10\x81\xaf\xf9\xd9\x3f\x01\x00\x00\xff\xff\x3f\xad\x12\x33\x0e\x0a\x00\x00")

func templatesJenkinsMultiJobXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsMultiJobXml,
		"templates/jenkins/multi-job.xml",
	)
}

func templatesJenkinsMultiJobXml() (*asset, error) {
	bytes, err := templatesJenkinsMultiJobXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/multi-job.xml", size: 2574, mode: os.FileMode(420), modTime: time.Unix(1439987274, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsNormalJobXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x59\xeb\x6f\xdb\x38\x12\xff\xee\xbf\x42\xc8\x15\xc8\xdd\xe2\x22\x37\xd9\xc3\xed\x1e\xe0\x78\xdb\x38\x6e\xd7\x7b\x49\x1a\x58\x76\xf7\xe3\x82\x96\xc6\x32\x1b\x4a\x14\x44\x2a\x8d\x91\xeb\xff\x7e\x43\xf1\x21\xea\x11\x27\xc5\xee\x97\x02\x45\x80\x40\x9c\x19\x3e\xe6\xfd\x23\x3d\xf9\xe5\x21\x63\xc1\x3d\x94\x82\xf2\xfc\xfc\xf8\x34\x7c\x7d\x1c\x40\x1e\xf3\x84\xe6\xe9\xf9\xf1\x7a\xf5\xee\xe4\xe7\xe3\x5f\xa6\xa3\x49\x51\xf2\x4f\x10\xcb\xe9\x28\x08\x26\x24\x96\x28\x2c\xc6\xf5\x20\x01\x11\x97\xb4\x50\x14\x4d\x60\x3c\x5d\x72\x49\x24\x2f\x83\x98\x11\x21\xce\x8f\x76\x55\x22\x78\x1e\x4a\x22\xee\x44\x78\xe5\xd8\x47\x4a\x5c\xad\x40\xf6\x62\xc5\xff\x0b\x50\x4c\x4f\x4e\x27\x63\x6f\xa8\xf9\x79\x95\x79\xec\x66\xa4\xb9\xa4\x94\x74\x8b\x27\xba\x6c\xaf\x32\x40\x6e\xcb\xdf\xb8\x75\x3c\xe9\x1b\x7f\xf1\xc9\xb8\x51\xa5\x1e\xdf\x21\xe3\x12\x0a\xc8\x13\xb4\x10\x05\x31\xdd\x12\x26\x60\x32\xee\xd1\x95\x30\x1a\xac\x00\x5c\x56\x0f\x91\x20\x20\x4c\x28\xd9\x70\x16\x7e\x82\xfc\x8e\xe6\x22\x2c\x68\x01\x8c\xe6\x10\xde\x9a\x8f\x5b\x3d\x67\x1f\x14\xac\x4a\x69\x7e\x7e\x94\x20\x19\x7d\xb3\x3f\xb1\xa2\x27\x9a\xf3\xe6\x75\xf8\x73\xf8\x93\x31\x20\xae\xad\x4c\x7b\x43\x32\x98\x3e\x3e\x06\xe1\xca\x0c\x82\x2f\x5f\x26\x63\xc7\xb1\xa2\x42\x92\x14\x9c\x6c\x64\x47\xb5\x70\xc3\xd3\x47\x1e\x7f\xc5\x99\xb5\xc5\xda\x5a\xe3\x0e\x74\x1b\x84\x0b\xb1\xc8\xa9\xa4\x84\xfd\xc6\x37\xb8\x8f\x12\x14\x71\xd6\x89\x0e\xad\x98\x08\x53\x2a\xc3\xf7\x54\x46\xb3\xeb\x23\x67\x06\xa4\xbd\x39\x0b\xcf\xc2\xff\xd8\x90\x89\x79\xbe\xa5\xe9\x47\x1d\xb5\xd3\xb3\xc9\xb8\x4d\xd0\x42\x95\x80\x72\x09\x19\x97\x30\xab\xb9\xc2\xd9\x60\x60\xcb\x75\x47\xd8\xca\xaa\x75\x4a\x56\xdb\x0a\x4f\xb5\x5e\x5e\xd5\x86\x52\x24\xbb\xd8\xf8\xc5\xab\xe1\xbc\xe1\x23\x4d\x36\x25\xc9\xe3\x1d\x1c\x3c\xe1\x45\x2d\x13\x15\x10\x7b\x67\xcb\x95\xb3\x7e\x18\xab\xe3\x35\x7c\xba\xa5\x50\xd6\xe7\xcc\x7d\xcf\x0f\x1d\xb4\xbb\xe8\x64\xdc\x3e\xca\x24\xa1\x82\x6c\x18\x44\xd5\x26\xe3\x49\xc5\x9a\xa0\xef\x33\xf4\x84\x12\xe2\x0a\xbd\x70\xef\x73\x64\x59\xe1\x8c\x21\x8e\xd9\x84\xbf\x87\x1c\x4a\x22\x1b\x96\xb6\x4f\x85\x34\x55\x6a\xdc\xa6\xcf\x0a\x9a\x24\xaf\xe4\x8e\x97\x1f\xca\x19\xcf\x32\x2a\x25\x94\x76\x81\x3e\xc3\x04\x14\x03\x92\xd7\x5e\x9e\xa9\xaf\xdf\x79\x79\x27\x0a\x12\xeb\xb4\xd0\x4c\x2d\xf8\x19\xc3\xfe\x43\x25\x9d\x80\x5d\xb8\x47\xd7\xe2\x45\x59\xe5\x70\x61\x4d\x6a\x64\xdb\x44\x6b\x36\x15\x15\xb7\x9c\x31\x2b\xe5\x51\xb4\x08\x4d\x73\x5e\xc2\x0d\xc7\x52\xb5\xd7\xe7\xb7\xa2\x03\x1c\x97\x02\xd1\x8e\x30\xc6\x3f\xcf\x18\xcf\xdd\x61\xbb\x64\x13\x84\x15\x65\xc9\x6c\xc7\x39\x06\xe9\x81\xe4\xac\x24\x65\xe1\x25\x6c\x49\xc5\xe4\x85\x37\xe5\x68\x6c\xd6\x41\xa1\x15\xe7\x6c\x6a\x64\x26\x63\x4b\x30\x75\xd0\x79\x6e\x9b\xda\x6d\x18\x15\xd2\xcd\x2f\x81\xa1\x33\xef\x61\x45\xca\x14\xe4\x25\x2d\x1b\xc6\x16\x4a\x2c\xb1\x60\x09\xf0\x10\xb3\x2a\x81\x64\x09\xa9\x6b\x48\x1e\x59\x65\xa1\xf0\x4e\xa5\x43\x45\xd5\xb7\x1e\x71\x9e\x11\xca\x2c\x55\xdc\xd1\x62\x45\x52\x13\xb6\x76\x64\x9c\x90\xb7\xb6\x9c\x9a\x12\xa7\xfc\x8e\x1d\x13\x0f\x8b\x11\xa3\xc2\xa8\x4b\xc0\xe6\x50\xc7\x52\x77\xbe\xd9\x31\xce\xfc\x63\xfd\xe5\xf9\xf0\xac\xcd\xe1\x41\x42\x2e\x9a\xae\x3e\xc6\x13\xd5\x1f\xb2\xa4\x69\x8a\x66\xd4\x72\x46\xdb\x75\x21\x64\x09\x24\xc3\x7a\x2e\x74\x41\x47\x49\xdb\x21\xec\x8c\x70\x09\x0a\x56\x40\x1d\x23\x2b\x4d\x6c\xba\x10\x56\x9c\xb1\x1b\x55\x66\xbd\x5b\x0d\x32\x6a\xab\x76\x37\xc1\xa8\xed\x4a\xb9\xee\xb7\x2b\x41\xec\x38\x4b\xba\x85\x31\x5a\xcf\x66\xf3\x28\x6a\xd7\x41\x64\xf2\x12\xe1\x0d\x61\xd3\xd7\x93\xb1\xfd\x6c\x98\x31\x67\xd8\xef\x2f\xae\xd6\x73\xd5\x56\x18\x2f\x5b\xbc\xac\x60\x20\xb5\x4e\x26\x3e\xda\x34\x57\x6c\x3b\x87\x9a\x8c\x5f\x6e\x1f\x17\x2e\xbe\xcd\x8d\x04\x24\xd7\x24\xaf\x30\x77\xf7\x26\xae\x30\x0e\x9c\x0b\x2c\xd0\xb2\x3b\x60\x13\x1d\x32\xfc\xf4\x87\xc0\xfc\xa1\x9f\xbd\x7e\x62\x2a\xcc\x2d\x17\x52\x57\x91\x5f\x39\xbf\x13\xed\x22\xd3\x65\x8e\x5a\xad\xe5\xc9\x9d\x7d\x95\xd0\x36\x5e\x50\xe9\xb2\xf3\x7b\x49\x8a\xc2\x85\x59\xb7\xfd\x11\x0c\xcd\xda\x15\xe1\x5b\xfc\x9a\xa9\xaf\x0b\x6f\x96\xc3\x09\x4e\x0e\xf1\xd1\xbf\xc2\xd7\x0d\x3e\xaa\x89\xd7\xa4\xa8\xb1\x0d\x86\x7a\x99\x19\xdf\x5a\xda\x68\xb0\x43\x3e\xb3\xef\xcb\x81\x9d\x01\x26\x98\x9b\xa8\xfa\xa6\x52\xd8\xf8\x6b\x21\x9e\x81\xe8\x2b\xc0\x68\xc3\x7c\x9f\xbe\x7a\xbc\x58\x2f\xae\x2e\xff\xb8\x59\x5f\x5f\xcc\x97\x5f\x4e\x5e\x3d\xbe\x5f\xac\xfe\x58\xce\x3f\x2e\xa2\xc5\x87\x9b\x7f\x32\xc8\x53\xb9\x3b\xff\x09\xf3\xa6\x3b\xb3\xc9\xba\x04\x87\x97\x54\x20\x79\x5f\x5b\x41\x07\x74\x9f\xfe\x72\x34\xd8\x57\x74\xd8\xa3\x92\x66\x80\x68\x33\x43\x2b\x86\xab\xe6\x7b\xd0\xab\x9e\xec\x9b\xd3\xf0\xdf\xe1\xd9\x91\xa9\x51\xbd\xc8\x69\xe5\xc3\x37\x85\x31\xeb\x02\xd5\xab\x53\xd8\xf0\xea\xfc\x54\x60\x60\x2b\xda\xc8\xef\x3b\x2a\xfd\x8e\x4a\xbf\xa3\xd2\xef\xa8\x54\x3b\x21\x1f\xdc\xd2\x87\x95\x0d\xa4\xfb\xb6\x1b\xee\x13\x65\x5f\x83\x8b\xe6\xcd\x21\x62\xe4\x1e\xae\xc8\x06\x98\xe9\x06\xe8\x51\x0c\x48\x48\x6e\x78\x62\x9e\x3e\x7c\x09\xcc\x41\x9f\x3f\xea\x20\x96\x98\xe4\x4b\x4e\x32\x1b\xa9\x76\x38\x6a\x4a\x51\xd2\xa9\x40\x89\x36\x35\xe3\xf1\x9d\xd6\x60\x07\xf9\x25\xff\x9c\x6b\x08\x5b\x93\xf0\x7a\x60\x27\x3d\x2b\xd7\x5f\xcc\xc2\xe3\xc3\x4b\xf5\xa4\x46\xba\xb3\x61\xcd\xc3\x98\xd5\x99\xe2\xb4\xea\x90\x47\x07\xf0\xfe\x57\xa0\x7d\x1f\xeb\xff\x29\xa4\xdf\xc7\xf9\x07\x50\xfe\x01\x8c\xff\x34\xc2\x7f\x29\xbe\xef\xa0\xfb\x97\x63\xfb\x56\x50\xd5\x71\xec\x5f\xad\xb0\xf6\xa6\x10\x84\x6f\xed\xd3\x25\x14\x5d\x64\x6f\xf3\x24\xe6\xc5\xde\xbe\x59\x86\x33\x1c\xd8\x39\x2e\x33\x7d\x09\x44\x4d\x3f\x9e\x85\xa7\x4d\x76\xda\xc7\x5c\x65\x7c\x34\xba\x7b\xff\xf3\x1e\x79\x6b\xb9\x2d\x65\xaa\x19\x29\x31\xb7\x81\x92\x33\x74\x77\xff\xaa\x4b\x62\x73\x9d\x33\x95\x4e\x34\x14\x01\x0c\xd7\xed\xbd\x08\x0f\xaa\xe3\x2e\x3a\xb5\xf1\x22\x33\xf3\xc8\x83\x17\x18\xaf\x6c\x43\xe2\xbb\x15\xbf\x22\x42\x46\x55\x1c\x83\x10\xdb\x8a\x19\x87\x3d\xc9\xf6\xc0\x93\x09\xb0\x77\xb5\x22\x91\x54\xbd\x3b\xdd\x4f\xb1\x34\xbf\x67\x7c\x43\x58\x04\x52\x62\xb6\x34\x91\xd8\x11\x74\xe0\xc5\x2a\xe6\x28\x09\xc7\x86\xf7\x0e\xe7\x42\x59\x94\x34\x97\xd6\x6e\x1e\x58\x78\x4a\x60\xb8\x24\x3e\xe9\xea\xa1\xbb\xe2\xa4\xf5\xd4\x1e\xed\x80\xf9\x51\x9f\x65\x24\xc7\x80\xfd\x5b\x60\x61\x7b\x10\xa3\x6e\xca\x2d\x19\x49\x69\x3c\x82\x87\x82\x97\x32\xb8\x5d\xdc\xce\xaf\x16\x37\x73\x73\xb5\x38\x7f\xf5\x77\x88\x77\x3c\x38\x7a\xf5\xe8\x38\x1f\xe7\x4b\x75\xcb\xf8\x72\x14\xfc\x2f\x88\x2b\x19\x9c\x6c\x4f\x83\x93\xe4\xf8\xe4\xf8\x1f\x76\x11\x75\x19\x89\x7e\x7d\xfb\xb2\xc9\x67\x66\xf2\xf0\x7b\xb1\x87\xea\xb1\x33\x06\x98\x78\x80\x93\x4e\x76\xa4\x4c\x02\x7d\xeb\xc1\x8d\x9a\x37\x96\x51\x8d\x97\xb4\xb2\xd6\x2e\xca\xae\x4e\xff\x96\x99\x3b\x96\x32\xdd\xc5\xde\x4d\x8b\x6a\x83\x20\x60\xd7\x7d\xff\x58\xe1\x7d\x64\x09\x4a\x4f\x31\x6c\xf9\x4f\x15\x2a\x10\xfe\xb6\xc6\xff\x4b\x10\x08\x37\xde\x96\xf1\x4e\x5d\xf3\x5c\x7e\xd6\x12\x98\x98\x5e\xcf\x94\xf5\xaa\x4a\x5a\x97\xc5\xf6\x2e\x58\x73\x3c\xbe\x9d\xa3\x7e\x7a\xb8\xe2\x79\x1a\xc9\x84\x72\xff\xf7\x88\x86\xe8\x2f\x7f\x49\x24\xb9\x75\x3a\x35\xf9\xb9\x03\xc2\xe4\x2e\x8a\x09\x83\x77\xa4\x8e\x67\x3c\x19\xda\xa8\x47\x1e\x32\xde\x93\xca\x1e\x78\xcd\xd0\xa8\x70\xd8\x78\xd7\x08\x7a\x3c\x4b\x65\xf5\x10\x4d\x75\xea\xd9\x0a\x51\x3b\x2d\x28\xb6\x2a\x4f\x89\x04\x2f\x9d\x7a\xdd\xb9\xba\x50\xaf\xb1\x87\xaa\x4e\xec\xd7\xf2\x83\x22\x4d\xb1\xca\x93\x15\x5f\xe4\x09\xbd\xa7\x49\x85\x26\xb5\x90\xab\x47\x1f\xb2\x86\x3e\xfd\x01\xd5\xbd\x4a\x3a\xa0\xbc\xe5\xb6\x6d\x18\x34\xbf\x5b\x89\x7e\x39\x26\xed\x12\xa2\x9a\x5f\xce\xf6\x8b\x6d\xaf\x32\xf6\xc8\x56\x5e\xbd\x0b\x08\xf9\x01\xd9\x46\xd2\x23\xb8\x03\x28\x64\x3e\xcf\x0a\xb9\x37\x67\x73\xb7\x97\x1e\x63\xc8\x2e\xc3\x8a\x0d\x07\x07\x3c\x48\xfd\xca\xd5\x7a\x60\x24\x15\x16\xc3\x2c\x8c\xd1\xeb\x65\x95\x89\xbd\x90\x90\x89\xb0\x55\x2e\xc3\x3a\x7b\xdd\xab\x84\x69\xc7\x61\xed\x5f\xfb\x44\x61\xfa\x8b\x8b\xaf\x7a\x4a\xef\xf5\xe5\x14\xf1\xec\x8f\x3e\x9e\xad\x2f\xc6\x7e\xb0\x59\x8c\x66\x40\x8a\x6a\xa2\xda\x37\xbd\xe3\xab\xb8\x1b\x94\x36\x76\xfa\x6b\x15\x7b\xc6\xb0\x2d\x93\xb6\x3c\x34\xf8\x50\x8b\xce\xc2\x1d\x7c\xb4\xe6\x2d\x82\x45\xb5\xc5\x76\xa5\xe6\x9b\x78\x90\x7d\x46\xf9\xf6\x93\xa5\xdf\x09\x3c\xa0\xf4\xff\x00\x00\x00\xff\xff\x87\xcc\x04\xe0\x3f\x1f\x00\x00")

func templatesJenkinsNormalJobXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsNormalJobXml,
		"templates/jenkins/normal-job.xml",
	)
}

func templatesJenkinsNormalJobXml() (*asset, error) {
	bytes, err := templatesJenkinsNormalJobXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/normal-job.xml", size: 7999, mode: os.FileMode(420), modTime: time.Unix(1440422371, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsPipelineXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x53\xcb\x6e\xdb\x30\x10\xbc\xfb\x2b\x08\xa1\x57\x53\x4e\x0f\x45\x0e\x34\xd3\xc2\x6d\x80\x16\x7d\xa4\x68\xda\x6b\xc1\x48\x6b\x9a\x2d\xb5\x24\xf8\xb0\x1d\x04\xf9\xf7\xae\x1e\x4c\xa2\xf4\x01\x04\x3d\x49\x9c\x99\x9d\x9d\xd5\x52\xe2\xec\xd8\x59\xb6\x87\x10\x8d\xc3\x75\x75\xc2\x57\x15\x03\x6c\x5c\x6b\x50\xaf\xab\xaf\x97\xe7\xcb\xd3\xea\x4c\x2e\x44\x04\xde\x1a\x75\xe5\x2c\xff\x01\xf8\xd3\x60\xe4\xde\x78\xb0\x06\x81\xbf\xa6\x07\x19\x5c\x5f\x4c\xc0\x37\x03\x07\xe6\x6d\xd6\x86\x0c\xdb\x89\x5c\x16\xf9\x72\x64\x5e\xae\xf8\x29\x7f\x51\xc9\x05\x63\x02\x55\x07\xf2\xe6\x86\xf1\x8f\xf4\xc2\x6e\x6f\x45\x3d\x20\x3d\xb5\x35\x36\x41\x78\x73\x84\x26\x27\x17\xa2\xdc\x2a\x1b\x41\xd4\x8f\xe1\x7b\xe9\xe7\x0c\x19\xe6\xb2\x11\xea\x25\x3e\x38\x0f\x21\x19\x88\xac\xb1\x2a\xc6\x75\xb5\xcb\x6d\x74\xc8\x3b\x47\x39\x79\x1f\xfc\xd9\xc5\xa8\xb9\x7e\x6f\x62\xaa\xea\xa1\xac\x71\x9d\x77\x08\x98\xbe\x78\x68\x86\x66\x04\x3e\xf1\x83\x7c\x5f\x6e\x1e\xba\x8c\x26\xff\x9c\x7d\xa0\xb7\x26\xc4\xf4\xce\x5d\xcd\x25\x77\xe8\x18\xa5\xfe\xff\x2c\xa2\xfe\x7d\x48\x81\xee\xd3\xb6\xd4\x45\x79\xb2\xa2\x6c\x33\xa4\xd7\xc4\x9d\x3b\xbc\xd2\x3a\x80\x56\x09\xda\xc2\x95\x05\xfc\x85\x2d\xe6\x1b\x67\x73\x87\x64\x3d\x3a\x97\xe3\xe0\xeb\x68\x4f\xa8\x25\x52\x26\xf2\x99\x4e\x77\x1d\xf7\x2a\xa9\xfb\xeb\xf0\x10\xea\x25\xd9\xb7\xd4\xef\x2d\xd2\xf2\xf7\xca\xca\xe7\xa2\x7e\x84\x14\x9f\xcd\x4e\xa1\x86\x99\x4f\x81\x7a\x89\xb2\xd6\x1d\x3e\x28\xcc\xca\x5e\x06\xa3\x35\xfd\x25\x32\x85\x4c\xca\x3f\x31\x7d\x05\x4d\x0a\x47\x7f\x3e\xed\x27\xd2\xfd\x79\xf2\x76\xe4\xe2\x57\x00\x00\x00\xff\xff\x5f\x40\xf2\x3f\x94\x03\x00\x00")

func templatesJenkinsPipelineXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsPipelineXml,
		"templates/jenkins/pipeline.xml",
	)
}

func templatesJenkinsPipelineXml() (*asset, error) {
	bytes, err := templatesJenkinsPipelineXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/pipeline.xml", size: 916, mode: os.FileMode(420), modTime: time.Unix(1432204627, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/jenkins/.normal-job.xml.swp": templatesJenkinsNormalJobXmlSwp,
	"templates/jenkins/multi-job.xml":       templatesJenkinsMultiJobXml,
	"templates/jenkins/normal-job.xml":      templatesJenkinsNormalJobXml,
	"templates/jenkins/pipeline.xml":        templatesJenkinsPipelineXml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"jenkins": &bintree{nil, map[string]*bintree{
			".normal-job.xml.swp": &bintree{templatesJenkinsNormalJobXmlSwp, map[string]*bintree{}},
			"multi-job.xml":       &bintree{templatesJenkinsMultiJobXml, map[string]*bintree{}},
			"normal-job.xml":      &bintree{templatesJenkinsNormalJobXml, map[string]*bintree{}},
			"pipeline.xml":        &bintree{templatesJenkinsPipelineXml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
