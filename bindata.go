// Code generated by go-bindata.
// sources:
// templates/jenkins/multi-job.xml
// templates/jenkins/normal-job.xml
// templates/jenkins/pipeline.xml
// DO NOT EDIT!

package pipeline

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesJenkinsMultiJobXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x18\x69\x6f\xdb\x38\xf6\x73\xfd\x2b\x8c\xa0\x40\x80\x62\x23\x25\xd9\xdd\xb6\x0b\x28\x6e\x1b\x27\xed\x7a\x90\xc3\xe3\xa3\xf9\x58\xd0\x12\x2d\xb3\xa6\x44\x81\xa4\xd2\x78\x82\xfe\xf7\x79\xbc\x24\xea\x48\x93\x74\x8a\xc1\x24\x1f\x2c\xbe\x8b\xef\x7e\x4f\x8a\xde\xdd\x65\x74\x78\x8b\xb9\x20\x2c\x3f\xd9\x3f\x0a\x0e\xf7\x87\x38\x8f\x59\x42\xf2\xf4\x64\x7f\xb9\xf8\x78\xf0\x76\xff\xdd\x68\x10\xc5\x2c\x0b\x24\xd9\x22\x1a\x7c\xc5\xf9\x96\xe4\x22\x28\x68\x99\xaa\xdf\xac\xa4\x92\x7c\x65\xab\xe0\x52\x3d\xfc\xc6\x56\x53\xce\xbe\xe2\x58\x0e\x0d\xc1\xc9\x9e\x65\x38\x70\x84\x07\x06\xf1\xfe\x28\x38\xfa\xef\xde\x68\x30\x1c\x46\x28\x96\x70\xbb\x08\xf5\x21\xc1\x22\xe6\xa4\x50\x90\x51\x14\xfa\x27\x85\xdd\x62\x5c\x9c\xe1\x02\xe7\x09\x68\x49\xb0\x18\xad\x11\x15\x38\x0a\x3b\x70\x45\x5c\x70\x56\x60\x2e\xed\x11\x00\x02\x07\x09\x41\x2b\xe6\x59\x41\x0a\x4c\x49\x8e\x83\xa9\x7d\x98\x1a\x9e\x5d\xa5\x7e\x02\x60\xf0\xcf\xee\xc0\x91\x3a\xfd\x0f\x83\xb7\xc1\xeb\x3d\x23\x19\x64\x4b\x24\xb6\x57\x28\xc3\xa3\x02\x71\x44\x29\xa6\x43\x7c\x87\xe3\x52\x69\x1e\x85\x15\xd2\x51\x0b\x89\x52\xac\x21\xf7\xf7\xc3\x60\xee\x4e\xc3\xef\xdf\xa3\xb0\xc6\x19\xad\xc3\x67\xa8\x6d\x59\x54\xb8\x62\xc6\xd1\xed\x2e\xd8\x94\x89\x60\x79\x15\xae\x94\xc8\x4d\xb9\x0a\x3e\xe9\x1f\x1b\xaa\x8e\xcd\x86\x48\x45\xe8\x38\x38\xac\x4d\x2c\x0c\xf9\x92\x53\xad\xb5\x91\x01\x27\xad\xb5\x87\xb4\x6a\xff\x9c\x12\x3a\x72\x61\x33\x74\x91\x88\xb3\x61\x4c\x91\x10\x27\x7b\x5d\x51\x4a\xce\x7c\x7c\xb9\xe7\xab\xff\xfe\x38\xf8\x8f\x56\xfd\xc5\x0b\x70\x46\xbe\x26\xe9\x67\x93\xe3\xa3\x63\xa5\x98\x0f\x50\x24\xa5\xc0\x7c\x86\x33\x26\xf1\x58\xe3\x84\x82\xbe\x88\x7a\xee\x5a\xb6\x28\x35\x21\x08\xa8\x7d\xb2\x9c\x5d\x68\x87\x28\x90\x96\x12\x3e\x51\x0c\xb0\xf4\xa9\x11\xad\x38\xca\xe3\x0d\x7e\x58\xa7\x53\x4d\x30\x2f\x70\x6c\xb5\xc9\x55\xf2\xbc\x0a\x33\x24\x24\xe6\x51\xa8\x8f\x83\x07\x34\x69\x32\x47\xa1\x7f\x5b\x94\x10\x81\x56\x14\xcf\xcb\x55\xc6\x92\x92\xd6\xf5\xd6\x45\x98\xa0\x73\x48\x79\x70\xeb\xad\x8f\x91\xbc\x04\x8e\x3e\x8c\xe1\x49\xd8\x27\x9c\x63\x8e\x64\x8d\x32\xe6\x97\x00\x53\x8d\xa1\xba\xf4\x51\x42\x23\x10\x95\x72\xc3\xf8\x35\x1f\xb3\x2c\x23\x12\x5c\xe0\x04\x74\x11\xb6\x5c\x28\x46\xb9\x8e\xdf\x58\x3d\xdd\x30\xbe\x15\x05\x8a\x4d\x39\x1a\xa4\x21\xfc\x06\xe5\x76\x5d\xca\x8a\xc0\x09\xee\xc0\x07\xb6\x60\xca\x1c\x9f\x3a\x87\x5a\xda\x26\xd0\xb9\x4d\x05\x7d\xca\x28\x75\x54\x1e\xc4\x90\x90\x34\x67\x1c\x5f\x31\x49\xd6\x3b\xa3\xbf\x23\xed\xc1\x18\x16\x48\xa7\xf9\x06\x7a\x11\xfb\x36\xa6\x2c\xaf\x94\x6d\x83\x0d\xf1\xaa\x24\x34\x19\x6f\x18\x83\x1c\xfc\x41\xad\x41\x43\xa3\xc1\x19\x5e\x23\xe8\xe6\xa7\x1e\xcb\x5e\x68\xe5\x00\xd1\x82\x31\x3a\xb2\x34\x51\xe8\x00\xb6\x05\x57\x91\x5b\xa7\xee\x1a\x4a\x84\xac\xf8\x39\xa6\x10\xcc\x5b\xbc\x40\x3c\xc5\xf2\x8c\xf0\x1a\xb1\xc6\x1c\xba\x3b\x76\x00\x7c\x17\xd3\x32\xc1\xc9\x0c\xa7\xd5\xf8\xf0\xc0\xaa\xc4\x84\xa7\x95\x49\x15\xd5\x57\x3b\xc0\xf3\x0c\x11\xea\xa0\x62\x4b\x8a\x05\x4a\x6d\xda\xba\x93\xc5\xc5\x99\x2f\xe0\x97\x67\xee\xa3\xde\xc1\x77\x12\xe7\xc2\x9a\x0b\xd5\x0a\x0a\x8d\x06\xaa\x43\xc6\x28\x9f\x31\x94\x59\xad\xdd\x49\x0f\x54\x53\xaa\x49\xab\x74\x13\x8d\x5c\x51\x16\x6f\x75\x1c\x6f\x36\x38\x3f\x63\xdf\x72\x21\x39\x46\x99\x06\xc1\x0e\xe0\x98\x1e\xa5\xeb\x0a\x5b\x16\x4f\x11\xd5\xa1\x52\x82\x24\x27\x69\x0a\xd1\x33\x46\x43\x5d\x92\xf5\x30\x98\x88\x49\x4e\x24\x41\x14\x76\x0c\x28\x4c\xe3\x0f\x9b\xa1\x8e\x21\x80\x39\xb0\x30\xcf\xf5\xa8\x55\xad\xed\xd5\xd0\xfe\x83\xcb\x74\xab\xb3\x48\x53\x3b\x53\x26\xa4\xa9\x9c\xff\x33\xb6\x15\xcd\xc2\x6a\x23\xed\x74\x7b\xec\x66\xd0\x1a\xb6\x11\xa3\x28\x2c\x00\x9e\x45\x6a\x20\x41\x2f\x84\x5c\x36\x15\xe4\xae\x6b\x83\x07\xae\x2a\x2b\x4f\x3c\x67\x0d\x3b\x35\x9c\xf5\xf0\xde\x20\x61\xb6\x0a\xfd\x74\x08\x8d\xa8\x82\x34\x68\x80\x57\x38\x88\x36\x03\x5a\x55\x8a\x61\x49\x29\x57\x0a\xe5\x5c\xff\x54\x7d\xa6\x4e\xa6\x1b\x74\xc3\xea\x2f\x02\x7c\xb5\x03\xe9\x5e\xeb\x00\x3e\x91\xf2\xc9\x14\x76\xaa\xcc\x4d\x12\x0f\xe0\xd3\xe1\xbb\x02\x1a\x51\x02\x71\x70\x0e\xf5\x20\x3e\xa1\x2d\x00\xd0\xa9\x55\x12\x0a\xe2\x13\xc2\x26\x27\x20\x25\x67\x6a\x56\x4d\x91\xdc\xc0\x3e\xda\x01\xf9\xf4\x19\xba\x9b\x61\x88\x34\xb4\x75\x70\xaf\x77\x6a\xa8\x99\xab\xab\x14\x66\x37\x97\xaa\x23\xa4\xbb\x4a\xdf\x1e\x54\x97\x15\xfc\x98\x10\xbd\x10\x37\xd8\x6a\xb0\xcf\x02\x5b\x23\x97\x1f\xa8\xaa\x19\xeb\x3d\x1f\xd2\x70\x73\xc5\xaf\x33\xb1\x47\xd6\x96\x50\xaa\xa3\x79\x9d\x03\xf3\x0c\x0b\x08\x71\x7d\xeb\xc7\x0f\x93\x8b\xe5\xec\x1c\x56\xf1\x1f\x92\xf9\x02\x75\x72\x5f\xe7\x74\x37\x59\x43\x8c\xc6\x1b\x95\x67\x55\xf1\xf5\x23\x5b\x1a\x9b\x1d\x69\xe8\xfd\xf5\xed\x47\xb0\x94\xcd\xf0\x2d\x51\x6d\x53\x57\x85\x4e\x1e\x0c\xe3\x5f\xf4\xae\x8c\x0d\x71\x90\xe1\x2b\xd8\xaf\x7f\x2f\x71\x89\x13\xd3\x06\x44\x5d\xb0\x3d\xb8\x26\x7b\xdf\xc6\xf5\xb0\x3a\x0d\xf3\xc2\x8e\x7d\x66\xa5\xfe\xd9\x7a\xf3\x1b\x92\x91\xd6\x29\x77\xe5\x52\x49\xf2\x52\xcf\xa4\x3a\x66\xf3\xe5\x78\x7c\x3e\x9f\x7f\x5c\x5e\x68\xa5\x7a\x28\x06\x4f\x56\xaf\xa7\x3d\xd9\x58\xbb\xee\x58\x94\x2b\x18\x79\x9b\x76\xfb\xbf\x82\xd1\x77\x89\xe0\x66\xea\x77\x21\xd8\xf5\x02\xfd\x9e\x01\x5d\x93\x97\x99\xd8\xc1\xc6\x9b\x89\xe6\xfb\x46\xa0\xc5\x57\xaf\x4c\xb6\x15\x07\xc6\xf7\x16\x6a\x5b\x77\x95\x0f\x9a\xa5\xf3\xca\x77\x04\x19\xf2\xef\x3d\xdf\x5b\xad\x00\xfd\xca\xe4\xfb\x0b\xa9\xf7\x93\x69\xd7\x49\x39\x58\x70\xdc\xa0\xb7\x6f\x69\xaa\x3b\x0b\xdd\xaf\x3b\xf1\x50\x5b\x4e\x2f\xb5\x4d\x8e\x5f\x1b\xa9\xee\x90\x6d\x64\x4a\x23\x47\x5a\xce\x28\x9c\xe1\xe4\x0f\x9c\x34\xee\x68\x67\x41\x83\xf2\xc0\x92\x42\xa8\x8e\xff\xf7\x8c\x24\x78\xf4\xba\x9e\xc1\xf8\x77\xb4\xb6\x7f\x58\x73\xab\xbf\x2f\xd4\xf9\x55\x65\x56\x85\xe9\x9f\x58\xb6\x41\x3d\x34\xb8\xac\xd3\x6f\x88\xdc\x5c\x31\x4f\x21\x6b\xe9\x43\xe8\x87\xcb\xe9\x99\x21\x6d\x59\xfb\x7c\x71\x7d\x1b\x65\xb3\x4d\x9a\x59\x7a\xc3\x51\x51\xd4\xdb\x62\xeb\x1a\x04\x2f\x0e\x31\xa3\x8c\x07\x1f\xe0\x69\xac\x9e\x4e\x3d\xae\x2a\x61\x2a\xba\xf7\x87\x8d\xb4\x89\x34\xf0\x12\x15\x7a\x45\x83\x17\x11\x9e\x29\xcb\x3c\x58\xbf\x79\x8f\xdc\xfb\xf8\x92\xff\x84\xef\x5f\xf6\x63\x0e\xf8\x1d\xfc\xb7\x2a\x25\xe3\x4f\xfb\x80\xf7\xa6\xb6\xce\x7e\x04\x5d\xe0\xac\x80\x37\x50\x3c\x7a\x79\x7f\xba\x9c\x5c\x9c\x7d\xb9\x5a\x5e\x9e\x9e\xcf\xbe\x1f\xbc\xbc\xff\x34\x59\x7c\x99\x9d\x7f\x9e\xcc\x27\xd7\x57\xff\xa2\x38\x4f\xe5\xe6\xe4\x0d\x64\x67\x9b\xd3\x49\x2c\x8b\x04\x8e\x67\x44\x00\x78\xa7\x1d\x64\x56\xb0\x2e\xfc\xe9\x1f\xfa\xba\x86\xf6\x75\xc2\x76\xe8\x25\x81\x46\x2c\x51\x06\xee\x0e\x16\xf5\x73\x6f\xf8\x3d\x5a\x18\x78\xaf\x83\x63\xf3\xf2\x69\xa7\x74\x9d\x62\xcf\x1a\xf7\x76\x20\x8c\x06\x7f\x06\x00\x00\xff\xff\x96\x02\xac\xa2\x71\x16\x00\x00")

func templatesJenkinsMultiJobXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsMultiJobXml,
		"templates/jenkins/multi-job.xml",
	)
}

func templatesJenkinsMultiJobXml() (*asset, error) {
	bytes, err := templatesJenkinsMultiJobXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/multi-job.xml", size: 5745, mode: os.FileMode(420), modTime: time.Unix(1444386462, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsNormalJobXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x3b\xfd\x6f\x1b\x37\x96\xbf\xfb\xaf\x10\x7c\x01\x72\x57\x54\xa3\xd8\xc9\x35\x2d\xa0\xa8\xb1\x25\x39\x71\x2b\xcb\x3a\x49\x4e\x6f\xb1\x58\x04\xd4\x0c\x25\x4d\x4d\x0d\x07\x43\x8e\x63\x6d\x36\xff\xfb\x3e\x7e\x0e\xc9\x19\x49\x76\x53\x14\x08\xd6\x2d\xd0\x6a\xde\x17\xc9\xc7\xf7\x49\xd2\xdd\x9f\xef\x37\xa4\x75\x87\x0b\x96\xd2\xec\xcd\xf3\x93\xe8\xc5\xf3\x16\xce\x62\x9a\xa4\xd9\xea\xcd\xf3\x9b\xf9\x45\xfb\xc7\xe7\x3f\xf7\x8e\xba\x79\x41\x7f\xc7\x31\xef\x1d\xb5\x5a\x5d\x14\x73\x20\x66\x1d\xf9\x91\x60\x16\x17\x69\x2e\x20\x0a\x40\xe8\x6a\x4a\x39\xe2\xb4\x68\xc5\x04\x31\xf6\xe6\x78\x5d\x26\x8c\x66\x11\x47\xec\x96\x45\x23\x8b\x3e\x16\xe4\x42\x02\xda\xb2\x39\xfd\x15\xe3\xbc\xd7\x3e\xe9\x76\x9c\x4f\x85\xcf\xca\x8d\x83\xae\xbe\x14\x16\x15\x3c\x5d\xc2\x8c\x06\xbe\x94\x06\xb0\x4f\x3f\xb6\x72\x1c\xea\xb1\x2b\xbc\xdb\xa9\x96\x22\xbf\x6f\x01\x31\xc0\x39\xce\x12\xd0\x50\x8a\x59\x6f\x89\x08\xc3\xdd\x4e\x0d\x2e\x88\x41\x61\x39\x06\xb1\xea\x13\x00\x0c\x47\x49\x8a\x16\x94\x44\xbf\xe3\xec\x36\xcd\x58\x94\xa7\x39\x26\x69\x86\xa3\x89\xfe\x31\x51\x3c\xdb\x56\x4e\xca\x55\x9a\xbd\x39\x4e\x00\x0c\x7b\xb3\x6d\x1b\xd2\xb6\xc2\xbc\x7d\x11\xfd\x18\xbd\xd6\x0a\x04\xd9\x42\xb5\x63\xb4\xc1\xbd\xcf\x9f\x5b\xd1\x5c\x7f\xb4\xbe\x7c\xe9\x76\x2c\xc6\x90\x32\x8e\x56\xd8\xd2\xce\xcc\x97\x24\xae\x70\x6a\xca\x9d\x47\xcc\x59\xb3\xc4\x74\x13\xc5\xb4\x40\x77\xdb\x48\x6f\xbb\x9a\x31\x8b\x56\x29\x5f\x97\x8b\xe8\x9d\xfc\xdf\x44\x99\x53\x6d\xc1\x8a\xe8\xed\x49\x74\x72\x1a\xbd\xa8\xd6\xa7\xad\xef\xa6\x20\x72\xd6\x4a\x06\x7c\xc9\x59\x3b\x48\x3d\xed\x3f\x36\x09\xb5\xe7\xfe\xbe\xc1\x68\xe9\xb2\x15\x5d\xb2\xcb\x2c\xe5\x29\x22\xbf\xd0\x05\x8c\x29\x08\x59\xbc\x09\xec\xdb\x19\x43\x0c\x30\xeb\x5f\x1d\xbb\xeb\x7a\x7b\x1a\x9d\x46\x3f\x1d\x5b\x3d\x65\xcb\x74\xf5\x41\xf9\x5d\xef\x54\xcc\xd9\x05\x28\xa2\x92\xe1\x62\x8a\x37\x94\xe3\xbe\xc4\x32\xab\x90\x86\x21\x6f\x02\x62\x43\x2b\xe4\x54\x7a\xbb\x99\x8e\xa4\xd2\x4a\xa3\x2d\xb1\xe6\x07\x4b\x03\xbe\xe6\x29\x75\x17\x05\xca\xe2\x35\xde\x3b\xc3\x73\x49\x33\xcb\x71\xec\xcc\x2d\x13\xe6\xf6\x5d\x47\x4c\xaf\xc2\xa7\xcb\x14\x17\x72\x9e\x99\x6b\xbb\x4d\x13\x0d\x85\x76\x3b\xfe\x54\xba\x49\xca\xd0\x82\xe0\x59\xb9\xd8\xd0\xa4\x24\x95\xdb\xd6\x11\x8a\xa1\xc0\x71\x09\xbb\x70\xe7\x62\x78\x51\x02\x47\x13\x46\x0f\x42\xdf\xe1\x0c\x17\x88\x57\x28\xa5\x9f\x12\x60\x22\x58\xda\x41\x0f\x12\xea\x30\x55\xf2\x35\x2d\xae\x8b\x3e\xdd\x6c\x52\xce\x71\x61\x04\xd4\x11\xda\xa0\x08\x46\x99\xdc\xe5\xbe\xf8\xf5\x1b\x2d\x6e\x59\x8e\x62\xe5\xd8\x0a\xa9\x08\x3f\x81\xe3\x5e\x97\xdc\x12\x18\xc1\x35\xf8\x91\x76\xbd\x32\xc3\xe7\x46\xa5\x9a\xd6\x07\x1a\xb5\x09\xab\x98\x50\x42\x0c\x95\x03\x51\x24\xe9\x2a\xa3\x05\x1e\x53\x08\xb6\x5b\x35\x7f\x43\xda\x80\xb1\x2e\x30\x5b\x23\x42\xe8\xa7\x3e\xa1\x99\x9d\x6c\x08\xd6\x46\x58\xa6\x24\xe9\xaf\x29\x05\x23\xdd\xe3\x9c\x25\x4f\x49\x34\xc0\x4b\x54\x12\x7e\xee\xb0\x1c\x77\xb4\x1c\x20\x9a\x53\x4a\x7a\x9a\xa6\xdb\x31\x00\x1d\xc9\xed\xce\x2d\x57\x66\x18\x92\x32\x6e\xf9\x0b\x4c\x60\x33\xef\xf0\x1c\x15\x2b\xcc\x07\x69\x51\x21\x96\xb8\x80\x24\x81\x0d\x00\xdf\xc7\xa4\x4c\x70\x32\xc5\x2b\x9b\x52\x1d\xb0\xf0\x42\xe6\xcc\x4a\x99\x8a\x88\xd0\x35\xe0\x70\x83\x52\x62\xa0\xec\x36\xcd\xe7\x68\xa5\xcd\xd6\x7c\xe9\x4d\xc8\xbc\x21\x7b\x3a\xc4\x89\x7d\x87\x9c\x0f\x93\x05\x8b\x11\x66\x14\x02\x20\xbd\x49\x5b\x0a\xf9\xf5\x88\xf1\xc6\x9d\xd6\x9f\xee\x0f\x07\x75\x8e\xef\x39\xce\x58\x55\x97\x74\x60\x46\xf2\x07\x2f\xd2\xd5\x0a\xd4\xa8\xe8\xf4\x6a\x6f\x72\xc6\x0b\x8c\x36\x10\xcf\x99\x0a\xe8\x40\x69\x72\x9c\xe1\x88\xa6\x58\x14\x46\x58\xda\xc8\x5c\x01\xab\x3c\x0a\x11\xa7\x63\xbf\x4a\x2d\x4f\xa7\x14\xa9\xd5\x70\x10\xb0\xda\x90\xca\xe6\xef\x75\x81\xd9\x9a\x92\x24\x0c\x8c\xb3\x9b\x7e\x7f\x38\x9b\xf9\x71\x10\x90\xb4\x80\x02\x0d\x91\xde\x8b\x6e\xc7\xfc\xac\x90\x31\x25\x50\xb1\x9c\x8f\x6e\x86\x22\xad\x10\x5a\x78\xb8\x4d\x4e\x30\x57\x6b\xd2\xf6\xe1\xc3\x6c\xb0\x0d\x26\xd5\xed\x3c\x5c\x3f\xd6\x5c\x5c\x9d\x6b\x0a\x9c\x5c\xa1\xac\x04\xdf\xdd\x6a\xbb\x02\x3b\xb0\x5b\x60\x4a\x45\x33\x02\x24\xd1\x26\xc5\xf7\xbe\x6b\xe9\x7f\x61\x9f\x9d\x7c\xa2\x23\xcc\x84\x32\xae\xa2\xc8\x7b\x4a\x6f\x99\x1f\x64\x42\xe4\x91\x97\x5a\x76\x8e\xec\x2e\x09\x74\xe3\x18\x95\x0a\x3b\xbf\x15\x28\xcf\xad\x99\x85\xe9\x0f\x81\x69\xca\xad\x88\xce\xe0\x57\x5f\xfc\x3a\x77\xb8\x6c\x9d\x60\xe9\xa0\xc2\x7b\xe5\x56\x40\x12\x78\x85\x72\x59\x9d\x81\xa9\x17\x1b\xbd\xb7\x06\x76\xd4\x98\x21\x0f\x8c\xfb\xf0\xd2\x54\x17\x26\xe0\x9b\xb0\xf4\x45\x29\xaa\xfb\xc7\x16\xa9\xba\xc9\x98\x63\xb0\x36\xf0\xf7\xde\xb3\xcf\xe7\x37\x97\xa3\xc1\xc7\xf1\xcd\xd5\xf9\x70\xfa\xa5\xfd\xec\xf3\xbb\xcb\xf9\xc7\xe9\xf0\xc3\xe5\xec\xf2\x7a\xfc\x3d\xc1\xd9\x8a\xaf\xdf\xbc\x06\xbf\x09\x39\x2b\xaf\x4b\xe0\x73\x90\x32\x00\x6f\xa5\x16\x94\x41\xd7\xe1\x0f\xaf\x67\xeb\x0b\x6d\xde\x51\x9e\x6e\x30\xd4\xcb\x1b\xd0\x62\x34\xaf\x7e\x37\xee\xaa\x43\x0b\xa5\xed\x0f\xd1\xe9\xb1\x8e\x51\x35\xcb\xf1\xfc\xe1\x9b\xaa\x31\x65\x80\xaa\xc5\x29\x48\x78\xd2\x3f\x45\x31\xb0\x64\x7e\xe5\xf7\x54\x95\x3e\x55\xa5\x4f\x55\xe9\x53\x55\xaa\x36\x21\x6b\x1c\xd2\x2d\x2b\xab\x92\xee\xdb\x4e\xb8\x3b\xc2\xbe\x29\x2e\x74\xb5\x34\x03\x23\x16\xbb\xa9\x53\x81\x5f\xc5\xd6\xea\x24\x91\x81\x8a\xc6\x4a\x49\x9e\xf2\x54\xb2\xdc\x7a\xa9\x5e\xf4\x84\x62\xfc\x42\xa7\x69\x96\x04\xdd\xe1\x11\x5a\x60\xa2\xe7\x09\x66\x07\x5e\x83\x93\x31\x4d\xf4\x09\x93\x4b\x01\x81\xc2\xc5\x07\x32\xbb\x31\xca\xa6\x14\x6d\x8c\x3b\x99\xcf\xa3\x2a\x5e\x26\x41\x98\x4c\x94\x3d\x10\x1a\xdf\x2a\x35\xaf\x71\x36\xa0\x9f\x32\x55\x67\x4b\x10\xf4\x30\x86\xe9\x20\x5d\x5d\x98\xa9\xe1\xf7\x8b\xaa\x51\x1d\xa9\xf4\x0b\x81\x19\x1c\x4b\xb9\xb3\x5d\x55\x00\x3e\xda\xd3\x94\x3c\xa2\x25\x71\x1b\x92\xaf\x6a\x47\xea\xcd\xc8\x9e\x56\x64\x4f\x23\xb2\xbb\x0d\x79\x68\x13\x12\xb4\x20\x0f\x6f\x40\x3c\xa3\x92\xce\xe6\xf6\x7f\x90\x20\x56\xb8\x15\x9d\x99\x13\x62\x9c\x87\xed\x87\x71\xe6\x98\xe6\x5b\x73\x34\x1c\xf5\xe1\xc3\xf0\xd8\xf0\xe1\x52\x40\x69\xf7\xf2\x34\x3a\xa9\x9d\x5a\x4a\xe5\x6b\x1d\x8b\xc8\x21\xcb\x58\xf7\xe4\xd2\x32\x2c\x53\x22\x52\xa7\xa0\xb7\x23\x09\x3a\x0d\xb7\xdd\xa2\x0c\xe0\x55\xf3\xa9\xe3\x32\xab\x20\x0c\x13\x90\x5b\x3b\x81\x6f\x5c\x97\x6d\xcb\xa4\x16\x67\x9a\xf3\xd8\x29\x86\xc0\x70\xc9\x02\xc5\xb7\x73\x3a\x42\x8c\xcf\xca\x38\xc6\x8c\x2d\x4b\xa2\x77\x6e\x27\xda\x29\xf5\xb4\xa5\x5d\xc8\x85\xcc\xb8\xa8\x34\x56\xdb\x1e\x24\x92\x77\x84\x2e\x10\x99\x61\xce\xc1\x6d\x2a\x93\x0c\x08\x6d\xa9\x65\x16\x66\x21\x09\x85\xf4\x7c\x01\xbc\xb8\xc8\x8b\x34\xe3\x46\x6f\x4e\x69\xb3\x8b\xa0\x39\x80\xef\xdc\xf3\xa6\xce\xb6\xeb\x5d\x6d\xcc\xd6\x98\xb8\xe6\xbf\xd9\xa0\x0c\x2c\xf7\xbf\x5a\xa6\xc9\x68\xc5\xb0\x36\xb1\x2d\x1b\xb4\x4a\xe3\x23\x7c\x9f\xd3\x82\xb7\x26\x97\x93\xe1\xe8\x72\x3c\xd4\x8d\xd0\x9b\x67\xff\x8d\xe3\x35\x6d\x1d\x3f\xfb\x6c\x31\x1f\x86\x53\xd1\x13\x7d\x39\x6e\xfd\xab\x15\x97\xbc\xd5\x5e\x9e\xb4\xda\xc9\xf3\xf6\xf3\xff\x31\x42\x44\xeb\x34\x7b\x7f\xf6\x30\xe6\x53\xcd\xdc\x7c\xba\xed\xf4\x20\x90\xc7\x5b\xe0\x81\x18\x98\xda\x6b\x54\x24\x2d\xd5\xa3\xc1\x40\xd5\x89\xd0\x91\xac\xee\xd4\x62\x8d\x5e\x5a\xea\x10\x5e\xad\xdf\x4f\x35\xbe\xa6\x74\x2e\x34\x9d\x74\x5e\x2e\xa0\x64\x59\x87\xa7\x35\xef\xf9\x86\x4c\xb1\x58\x67\x75\x58\xb3\x06\x98\x25\x97\x14\x13\xf3\x65\xbd\xd3\xa3\x01\xf7\xfc\xdf\xca\x37\x0b\x29\x4e\x95\x42\xac\xb2\xd4\x2a\x3c\x34\x8c\x79\x68\x5c\x25\xad\x12\x66\x87\xb1\xd7\x2d\x53\xfb\x29\xfd\xda\xc1\xd6\x99\xa0\x40\x73\x78\xd4\x31\x9c\x61\x11\xb8\x3a\x07\x38\x0d\x66\x0e\x8f\xfc\x76\xb8\x14\xde\xe5\x43\xe4\x13\xda\xb2\x51\x9a\x69\xe7\xf5\x12\x55\x33\xd2\x65\x17\x17\x5f\x67\xc4\xc4\x01\xf3\xe5\x0f\x00\xc5\xf0\x55\x0a\x49\x3f\x33\x75\x9f\x07\xaa\xf4\xda\x79\x84\x62\x7d\x27\x14\xcc\x0d\xdb\xb9\x57\xe2\x9e\x63\xaa\xb3\x2c\x29\x68\x9a\xc0\xba\x79\x34\x41\xa2\x97\xc9\xac\xd1\xd1\x62\x65\x4e\x0e\xe2\xd4\xa9\xf9\x24\xc7\xc7\x8f\x44\xf0\x08\xc6\xba\x29\x6a\x9a\xb6\x20\x11\x5d\x7a\x65\x89\x6b\x8c\x08\x5f\x6f\x9d\xb3\xc4\xec\x7d\x08\xb2\x79\x70\x94\x8a\x26\x04\x14\xe8\xe4\x46\x05\xb3\x49\x47\x0e\x28\x6d\xea\xef\xee\xa0\xff\x80\x74\x53\xa1\x6c\xf8\x54\xbd\xc4\x50\xdf\xf8\x56\x23\x8a\xda\xab\xcc\xae\xb3\x0b\xa8\xdf\xab\xaa\x2b\x80\xda\x19\x33\x3c\x29\xf0\x5d\x4a\x4b\x26\x8d\xe4\x8c\x4d\x4d\x4b\xe1\xb4\x46\x3b\x49\x1c\x31\x33\x2e\xaa\xba\x3d\x42\x76\x10\x38\x22\x06\x98\x70\xf4\x01\x91\xb2\x6a\x0c\x03\x68\x4d\xab\xcc\xd9\x26\x44\xb6\x2c\x65\xed\x18\x1a\x3f\x88\x18\xaf\x9d\x8d\x2a\xa1\x5a\x14\x83\xcf\x29\x47\x04\x0c\xbd\xd3\x8c\x79\x9f\xae\xd6\x3b\x50\x63\x5a\x6c\xd0\x2e\xbe\x11\xfd\x54\x61\x96\x52\xc1\xf5\x91\x1c\xb8\x18\x47\x95\x0a\x8e\xc1\x5e\xf8\x78\x55\x3d\x04\x3c\x0d\xb2\xd4\xc4\xf6\x49\x53\x14\xa1\x3c\xcd\xd7\x20\xd1\x5b\x4d\x65\xab\x95\xf2\xe1\xb3\x24\xc9\x00\x2a\xbe\x98\x5f\xf9\x47\x20\x4d\xa8\x2a\xdf\x67\xe2\xf4\x36\x2f\x39\x1e\xe3\x4f\x3a\xa4\x04\x40\xaf\x36\x98\x62\x46\xc9\x1d\x9e\xea\xe6\x17\x3c\x7a\xed\xd7\x06\x8d\x04\xd6\x9b\x54\x00\xa8\x69\xa6\x0a\x0c\xe0\x56\x9a\x46\x47\x9d\x47\xc7\x88\x3d\xb1\x08\xea\x96\x64\x51\xae\x98\x19\x6f\x47\x9d\xba\x34\x64\x82\xfe\x1c\x7e\xd4\xe3\x8f\x21\x79\xfb\x2a\xfa\xe1\xe4\x2f\x09\x3e\x17\x97\xe3\xc1\xf9\xcd\xbb\xd9\x53\xe0\xf9\xca\xc0\xb3\x2f\xf4\xec\x0d\x3e\x07\xc2\xcf\xbe\x00\xb4\x3b\x04\xd5\x83\xd0\x0e\x54\x7d\xb4\x6f\x26\x3c\x18\xb6\xc7\x44\x87\xba\xab\x06\x91\x41\x1c\x72\xb1\x29\xca\x6e\xcf\x62\x90\x04\x7d\x8d\x35\xee\x10\x1c\xf4\x75\x5a\x60\xa5\x2f\x7d\x56\xe6\xc3\x6b\x8d\xcc\xee\xa0\xb0\x27\xe0\x4c\x36\x49\xad\xe8\x09\xe4\xe6\x82\x64\x93\xd4\x43\x0c\x20\xde\xbe\x8c\x5e\xbd\xf8\x4b\xa2\xcb\xe4\x6a\xf0\x14\x58\x9e\x02\xcb\x7f\x40\x60\xf1\x5d\xb2\x56\x6e\x1c\xf0\xce\x3d\xbe\x2e\xde\x09\x5a\xba\x43\x5e\xaf\xfa\x76\xc1\xd2\x50\x5c\x48\x24\x54\x16\xaf\x5e\xfd\x25\xbe\x3f\x3f\x9b\xfd\xfa\x54\x56\x3c\x79\xff\xb7\xe6\xfd\x0f\xee\x3a\xd6\xa2\x4d\xbb\xb8\xfc\xff\xab\x21\xf8\xb7\xdb\xb2\x65\xaa\xdf\x9a\x5f\x0f\xae\xbb\x9d\xcc\x6f\xbe\x88\xbb\x76\x75\x73\xd9\x47\xcc\x3c\x89\x70\x00\x86\x06\x81\xbd\xad\xf0\x7d\x6e\xcf\x7b\xcc\x77\x53\x14\xda\x15\x2c\xea\x45\x8e\x5f\xb5\x34\x30\x0f\x3d\x02\x29\x23\xe0\x69\x0e\x6d\x4d\x21\x68\x4f\x78\xfb\x90\x52\xa2\x2e\xaf\xa3\xfe\x1a\xc7\xb7\x8c\x6f\x09\x3e\x14\xe6\xee\x2a\xa6\x8a\xbf\x1e\xf0\x2a\xb2\xb7\x2f\xa2\xd7\xd1\xc9\x89\x7b\x6f\x18\x3c\x8c\x60\x65\x9e\x83\x1d\xca\xa7\x69\xe6\x3c\x9e\xd1\x02\x0a\xbd\x36\xc3\xf6\x76\x56\x39\xf0\x36\x0f\x5f\x61\x28\x95\x66\xbc\xd8\xba\x10\x21\x96\x17\xe2\x00\x2d\xb6\x4b\x13\xcf\xb7\x0b\xef\x4c\xed\xc0\x02\xe7\x76\x34\x9f\x45\x4f\xc4\x13\x2d\x01\x21\xd5\x26\xcd\x7a\x27\x2f\xc4\x3f\xdd\x8e\xf8\x5d\xc3\xa3\x7b\x85\x3f\x01\x3c\xfc\x0e\xf1\x26\x4c\x58\x21\x16\x50\xa3\x64\xd6\x36\x9c\xf8\xeb\x1b\x9e\x25\x76\xcd\xf6\x90\x11\xd4\xcc\x57\xcb\x08\x6d\xef\xa0\xda\xc0\x86\xfd\x4d\x52\x3a\xab\xed\x66\x97\xc8\xb4\x76\x22\x96\x4b\xdc\x0c\x27\xb6\x94\x96\x45\x2c\x43\x41\x58\xf2\xcb\x28\x57\xde\x9b\x07\xeb\x40\xe1\xa2\xcc\xdf\x6b\xf4\x12\xf3\x32\xc0\x42\x6c\x2c\x8c\xbd\xf7\x32\x8f\xb2\xfa\x7d\x25\x04\x66\xbc\x76\x30\xef\x1e\xf4\xff\x5e\x66\x29\x8f\x7e\xb9\x81\xff\x42\xc4\x83\xb9\x9d\x15\xf1\x5a\xbc\x16\xb3\xae\x24\x29\x20\x33\x39\x6d\x03\x97\x52\x05\xb5\x3a\xcd\xf6\x47\x01\xc5\x3a\x78\xc3\x23\x0e\x9f\x47\x34\x5b\xcd\x78\x92\x52\xf7\x0f\x33\x2a\xa0\x2b\x7e\x80\x38\xb2\x0b\x74\x2e\xce\x54\xd5\x32\x8b\x11\xc1\x17\x48\x5e\x34\xc1\xcc\x40\x5f\x35\xb0\xaf\xc8\x03\x8b\xdd\xa3\x41\xf5\xb8\x64\x57\x38\xc2\xe2\xf9\x04\xbe\xe7\x10\x33\xb9\xf8\xf3\x92\x44\xbe\xa7\xa8\xc7\x23\x49\xd7\x06\xc2\xb7\xa7\xd1\xcb\x9f\xdc\x5b\x8e\x38\xcd\x53\xb0\xcc\x51\xca\xd4\x3d\xe4\xf5\xa7\x0c\x17\x52\x8a\xb9\x19\x70\x29\xfc\x20\x56\x16\xd8\xdc\xaa\xba\x16\xbc\x6b\x8e\x36\x4e\x2b\x16\x79\x7a\x08\x22\x82\x57\x09\xca\x62\x05\x4f\xe0\x72\xde\x4c\x3a\x61\xb4\x2b\x17\xf2\xa6\xf4\xd9\x64\x7a\xfd\xcb\xb0\x3f\xff\x38\x18\x5e\x9c\xdd\x8c\xe6\x1f\x67\x37\xe7\xe2\x1b\x82\x9f\xa6\xf0\xf9\x16\x34\xd9\xd6\x99\xfa\xd7\xe3\xf9\x70\x0c\x4c\x12\xbd\x63\x1a\xe0\x6c\x77\x69\xe2\x2d\xfd\x81\x0a\xb0\x22\x58\x24\xd6\x32\x0d\x25\x86\x8b\xeb\x1c\x1a\xb3\x0b\xe1\x00\xc5\xeb\x8d\x10\x59\x0f\x0d\x0e\x85\xac\x23\x47\xd4\xbe\x52\x08\xa0\x3e\x8b\xb8\x71\x17\x89\x29\x64\xaa\xc1\x43\x05\xe5\x64\x3b\xa7\x75\xad\x4e\x87\x93\xd1\xdf\xe6\xd7\xf2\x32\x46\x52\x84\xc3\x65\x60\xc3\x5c\x84\xcf\x9e\xbe\xf8\x96\x61\xc9\x02\xfd\x68\xea\x5b\x48\x2d\x64\x3d\xd2\xea\x4c\x00\x6c\x32\x69\x6f\x66\x1c\x64\xca\x8b\xa3\xc6\xb9\x99\xfe\x62\x66\xcc\xb1\x66\x86\x01\x41\xc0\xd7\x57\x22\x7b\xcf\x3e\xcf\xfa\xd3\xcb\xc9\xfc\xfb\x16\xd7\x6f\x5a\xdf\x1c\xaf\x0a\x4a\xef\xb6\x6d\x31\x76\x64\xa0\xc7\x5f\xac\x44\xc3\x7a\x74\xd8\x24\xba\x62\xfb\x20\x5c\xcc\xe4\x1f\xe6\x55\x93\x9c\x4c\x87\xb3\xe1\x78\xf0\x51\x8d\x2d\x9e\x1f\xb8\x64\x47\x7f\xc0\x92\x1e\x6d\x43\x95\xf5\x1c\xb2\x9a\x2e\x43\x77\xe2\xe5\x1f\x94\xd7\xb6\x42\xaf\x20\x56\xaf\x7b\x9e\x05\xed\xb3\x9a\xe6\x78\xba\x27\x4e\x3b\xef\x31\x1a\xd2\x9c\xc1\xfa\x01\xbf\x55\xfd\xb5\x21\xab\x3f\xea\x40\xfe\x43\x04\x20\xa6\x19\xd9\x5e\x2e\x6b\xef\x2b\x6a\x60\x5b\xf1\x23\x91\xca\xae\x01\xad\x29\x1d\x80\x9d\x80\xb8\x6d\x1d\x6e\x72\xbe\xd5\x73\xab\x6e\x77\x43\x44\x53\x4a\x6b\x5e\x58\x73\x26\x03\xbd\xaa\x97\xfd\xde\x1f\x55\xa0\x32\x92\x7f\x8e\x27\xca\xa3\x72\xc3\xb6\x0c\x6c\x9b\xf9\x7f\x96\x17\xc9\x37\x00\xf6\x25\xb6\xf1\x64\x69\x3b\xe6\x59\xb6\x76\x5a\x9b\xf1\x24\x4b\xed\xc5\xf9\x49\xf4\x2a\x7a\x19\xd6\xe2\x7b\x72\x97\x7e\x46\x3d\x85\x46\x5e\xd4\xe7\x6a\x44\x54\xa0\x0d\x74\x81\x05\x0b\x5e\x56\xbb\xcf\x03\x8d\xf1\x2f\x60\xf0\xff\x2b\x71\x89\x13\xf5\x3e\x94\x39\x0e\x50\xc7\xed\x0e\x67\xfb\x27\x12\x46\x31\xb7\x31\x35\x6f\xd8\x9c\x07\x46\xca\xd8\x6a\xfb\x21\x3a\xcf\x46\x6a\xbd\xf1\x7f\xee\x4e\x1d\xb0\x14\xcf\x46\xc2\x33\x2c\xb3\xf0\xf4\x9f\x38\xf1\xc6\x08\xad\xc0\xa3\x6c\x6b\x52\x71\xbd\xfe\xd3\x23\x8c\xe0\xe0\x70\x0d\xd5\x7e\x4d\xe8\x9f\x6e\x5d\x5f\x69\x61\x5f\x61\x65\x8d\x96\x26\x81\xb9\xfb\x9c\xd0\xd9\x45\xfb\x92\x8d\x85\x4a\x4a\x52\xd1\x4b\x54\x6f\x07\x2b\x90\x4b\xa8\x95\xfe\x5b\xca\xd7\x63\xea\x4c\x48\xaf\x74\x17\x7a\xb7\x3b\x3d\x72\x4b\x83\xd5\x3e\x5e\x5c\xdd\xd8\x41\x25\xce\x5b\x26\xe7\xa9\xdf\xbf\x03\x00\x00\xff\xff\xa1\xd9\xa2\x3f\x71\x3f\x00\x00")

func templatesJenkinsNormalJobXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsNormalJobXml,
		"templates/jenkins/normal-job.xml",
	)
}

func templatesJenkinsNormalJobXml() (*asset, error) {
	bytes, err := templatesJenkinsNormalJobXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/normal-job.xml", size: 16241, mode: os.FileMode(420), modTime: time.Unix(1444552416, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesJenkinsPipelineXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x93\x4f\x6f\x13\x31\x10\xc5\xef\xf9\x14\xd6\x8a\x6b\xbc\x29\x07\xd4\x83\xe3\x82\x02\x95\x40\x05\x8a\x28\x5c\x91\xbb\x3b\x71\x0c\xde\xb1\xe5\x3f\x49\xaa\xaa\xdf\x9d\xd9\xdd\x38\x69\xca\x1f\x29\xea\x29\xf1\x7b\x3f\x3f\xcf\x78\xbc\xe2\x62\xdb\x59\xb6\x86\x10\x8d\xc3\x79\x75\xc6\x67\x15\x03\x6c\x5c\x6b\x50\xcf\xab\x6f\x37\x97\xd3\xf3\xea\x42\x4e\x44\x04\xde\x1a\x75\xeb\x2c\xff\x09\xf8\xcb\x60\xe4\xde\x78\xb0\x06\x81\xbf\xa5\x1f\x0a\xb8\xbb\xde\x09\xdf\x0d\x6c\x98\xb7\x59\x1b\x0a\x6c\x77\xe6\xb4\xe0\xd3\xd1\x79\x3d\xe3\xe7\xfc\x55\x25\x27\x8c\x09\x54\x1d\xc8\xfb\x7b\xc6\x3f\xd1\x1f\xf6\xf0\x20\xea\x41\xe9\xad\xa5\xb1\x09\xc2\xbb\x2d\x34\x39\xb9\x10\xe5\x52\xd9\x08\xa2\x7e\x2a\x1f\xd0\x2f\x19\x32\x1c\x63\xa3\xd4\x23\x3e\x38\x0f\x21\x19\x88\xac\xb1\x2a\xc6\x79\xb5\xca\x6d\x74\xc8\x3b\x47\x75\xf2\xbe\xf0\x17\xd7\x23\x73\x77\x65\x62\xaa\xea\x61\x5b\xe3\x3a\xef\x10\x30\x7d\xf5\xd0\x0c\x87\x91\x78\xe2\x85\xfc\x98\x2e\x1e\xa7\x8c\x21\xff\xed\x7d\xb0\x97\x26\xc4\xf4\xc1\xdd\x0e\xc8\xe5\x6e\x31\x60\x7b\xa7\xa0\xd4\xd0\x9e\xbc\x52\x07\xb0\xe8\x63\xd9\xf5\xf3\xeb\x16\xf5\x9f\x17\x22\xd0\x7d\x5e\x96\x7d\x51\x9e\xcd\xa8\x8f\x23\xa5\x67\xe2\xca\x6d\xde\x68\x1d\x40\xab\x04\x6d\xf1\xca\xb0\xfe\xe1\x96\xf0\x85\xb3\xb9\x43\x8a\x1e\x93\xcb\x72\xc8\x75\x34\x53\xd4\x12\xa9\x26\xca\xd9\xad\xf6\x27\xae\x55\x52\x87\xa7\xf3\x58\xea\x91\xec\x5b\x3a\xef\x3d\xd2\x43\x59\x2b\x2b\x5f\x8a\xfa\x89\x52\x72\x16\x2b\x85\x1a\x8e\x72\x8a\xd4\x23\xca\x5a\xb7\xf9\xa8\x30\x2b\x7b\x13\x8c\xd6\xf4\x45\xc9\x14\x32\x91\x7f\x73\xfa\x1d\xd4\x29\x6c\x7d\x19\x6a\xa4\xb7\x76\xf2\x74\xe4\xe4\x77\x00\x00\x00\xff\xff\x31\x82\x93\x82\xc0\x03\x00\x00")

func templatesJenkinsPipelineXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesJenkinsPipelineXml,
		"templates/jenkins/pipeline.xml",
	)
}

func templatesJenkinsPipelineXml() (*asset, error) {
	bytes, err := templatesJenkinsPipelineXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/jenkins/pipeline.xml", size: 960, mode: os.FileMode(420), modTime: time.Unix(1444285629, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/jenkins/multi-job.xml":  templatesJenkinsMultiJobXml,
	"templates/jenkins/normal-job.xml": templatesJenkinsNormalJobXml,
	"templates/jenkins/pipeline.xml":   templatesJenkinsPipelineXml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"jenkins": &bintree{nil, map[string]*bintree{
			"multi-job.xml":  &bintree{templatesJenkinsMultiJobXml, map[string]*bintree{}},
			"normal-job.xml": &bintree{templatesJenkinsNormalJobXml, map[string]*bintree{}},
			"pipeline.xml":   &bintree{templatesJenkinsPipelineXml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
