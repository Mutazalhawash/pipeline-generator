<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description/>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <se.diabol.jenkins.pipeline.PipelineProperty plugin="delivery-pipeline-plugin@0.8.7">
      <taskName>{{ .TaskName }}</taskName>
      <stageName>{{ .StageName }}</stageName>
    </se.diabol.jenkins.pipeline.PipelineProperty>
  </properties>
  {{ if .IsInitialJob }}
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.2.9">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>{{ .GitURL }}</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/{{ .BranchSpecifier }}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>true</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>{{ .CleanWorkspace }}</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <useShallowClone>false</useShallowClone>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <excludedRegions/>
    <excludedUsers/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <includedRegions>{{ if .WorkingDir }}{{ .WorkingDir }}{{ end }}</includedRegions>
    <scmName/>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <triggers>
    {{ if .UpstreamJobs }}
    <jenkins.triggers.ReverseBuildTrigger>
      <spec/>
      <upstreamProjects>{{ .UpstreamJobs }}</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
    {{ end }}
    {{ if .TriggeredManually }}{{ else }}
    <hudson.triggers.SCMTrigger>
      <spec>* * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
    {{ end }}
  </triggers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.0">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <se.diabol.jenkins.pipeline.PipelineVersionContributor plugin="delivery-pipeline-plugin@0.8.7">
      <versionTemplate>${BUILD_NUMBER}-${GIT_REVISION,length=7}</versionTemplate>
      <updateDisplayName>true</updateDisplayName>
    </se.diabol.jenkins.pipeline.PipelineVersionContributor>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.6.2"/>
  </buildWrappers>
  {{ else }}
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.2.9">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name></name>
        <refspec></refspec>
        <url>{{ .GitURL }}</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/{{ .BranchSpecifier }}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>true</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>{{ .CleanWorkspace }}</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <useShallowClone>false</useShallowClone>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir/>
    <reference/>
    <excludedRegions/>
    <excludedUsers/>
    <gitConfigName/>
    <gitConfigEmail/>
    <skipTag>true</skipTag>
    <includedRegions/>
    <scmName/>
  </scm>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.0">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
  {{ end }}

  {{ if .SlaveLabel }}
  <assignedNode>{{ .SlaveLabel }}</assignedNode>
  {{ end }}
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <concurrentBuild>false</concurrentBuild>
  {{ if .UpstreamJobs }}
  <jenkins.triggers.ReverseBuildTrigger>
    <spec/>
    <upstreamProjects>{{ .UpstreamJobs }}</upstreamProjects>
    <threshold>
      <name>SUCCESS</name>
      <ordinal>0</ordinal>
      <color>BLUE</color>
      <completeBuild>true</completeBuild>
    </threshold>
  </jenkins.triggers.ReverseBuildTrigger>
  {{ end }}
  <builders>
    {{ range .ArtifactDep }}
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.32.1">
      <project>{{ .ProjectNameTempl }}</project>
      <filter>{{ .Artifact }}</filter>
      <target/>
      <excludes/>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>true</fallbackToLastSuccessful>
        <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>
      </selector>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    {{ end }}
    <hudson.tasks.Shell>
      <command>
# pipeline creator magic
export PIPELINE_NUMBER=$(echo "${PIPELINE_VERSION}" | cut -f1 -d'-')
export GIT_SHA=$(echo "${PIPELINE_VERSION}" | cut -f2 -d'-'){{ if .IsInitialJob }}{{ else }}
git reset --hard ${GIT_SHA}{{ end }}
{{ .Command }}
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    {{ if .TestReports }}
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.0">
      <testResults>{{ .TestReports }}</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
      <healthScaleFactor>1.0</healthScaleFactor>
    </hudson.tasks.junit.JUnitResultArchiver>
    {{ end }}
    {{ if .Notify }}
    <hudson.tasks.Mailer plugin="mailer@1.10">
      <recipients/>
      <dontNotifyEveryUnstableBuild>true</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>true</sendToIndividuals>
    </hudson.tasks.Mailer>
    {{ end }}
    {{ if .Artifact }}
    <hudson.tasks.ArtifactArchiver>
      <artifacts>{{ .Artifact }}</artifacts>
      <onlyIfSuccessful>true</onlyIfSuccessful>
      <latestOnly>true</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
    </hudson.tasks.ArtifactArchiver>
    {{ end }}
    {{ if .NextManualJobs }}
    <au.com.centrumsystems.hudson.plugin.buildpipeline.trigger.BuildPipelineTrigger plugin="build-pipeline-plugin@1.4.3">
      <configs/>
      <downstreamProjectNames>{{ .NextManualJobs }}</downstreamProjectNames>
    </au.com.centrumsystems.hudson.plugin.buildpipeline.trigger.BuildPipelineTrigger>
    {{ end }}
    {{ if .NextJobs }}
    <hudson.tasks.BuildTrigger>
      <childProjects>{{ .NextJobs }}</childProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </hudson.tasks.BuildTrigger>
    {{ end }}
  </publishers>
</project>
